{"version":3,"file":"supernova-sdk-typescript.js","mappings":"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","sources":[".././src/core/SDKBrand.ts",".././src/core/SDKBrandWriter.ts",".././src/core/SDKDesignSystem.ts",".././src/core/SDKDesignSystemVersion.ts",".././src/core/SDKDocumentation.ts",".././src/core/SDKSupernova.ts",".././src/core/SDKWorkspace.ts",".././src/core/data/SDKConfiguration.ts",".././src/core/data/SDKDataBridge.ts",".././src/core/data/SDKDataCore.ts",".././src/core/errors/SDKSupernovaError.ts",".././src/core/resolvers/SDKAssetGroupResolver.ts",".././src/core/resolvers/SDKComponentResolver.ts",".././src/core/resolvers/SDKDesignComponentGroupResolver.ts",".././src/core/resolvers/SDKDocumentationItemResolver.ts",".././src/core/resolvers/SDKTokenGroupResolver.ts",".././src/core/resolvers/SDKTokenResolver.ts",".././src/exports.ts",".././src/index.ts",".././src/model/assets/SDKAsset.ts",".././src/model/assets/SDKRenderedAsset.ts",".././src/model/components/SDKComponent.ts",".././src/model/components/SDKDesignComponent.ts",".././src/model/documentation/SDKDocumentationConfiguration.ts",".././src/model/documentation/SDKDocumentationGroup.ts",".././src/model/documentation/SDKDocumentationItem.ts",".././src/model/documentation/SDKDocumentationPage.ts",".././src/model/documentation/SDKDocumentationPageBlock.ts",".././src/model/documentation/SDKDocumentationRichText.ts",".././src/model/documentation/SDKDocumentationRichTextSpan.ts",".././src/model/documentation/SDKDocumentationRichTextSpanAttribute.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockAsset.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockAssets.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockCallout.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockCode.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockColumn.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockColumnItem.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockCustom.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockDivider.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockEmbedFigma.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockEmbedGeneric.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockEmbedLink.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockEmbedStorybook.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockEmbedYoutube.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockFrame.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockFrames.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockHeading.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockImage.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockOrderedList.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockQuote.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockRenderCode.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockShortcut.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockShortcuts.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTab.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTabItem.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTable.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTableCell.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTableColumn.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTableRow.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockText.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockToken.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTokenGroup.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockTokenList.ts",".././src/model/documentation/blocks/SDKDocumentationPageBlockUnorderedList.ts",".././src/model/documentation/builder/SDKDocumentationBlockBuilder.ts",".././src/model/documentation/configuration/SDKDocumentationItemConfiguration.ts",".././src/model/documentation/configuration/SDKDocumentationItemHeader.ts",".././src/model/elements/SDKElementProperty.ts",".././src/model/elements/SDKElementPropertyOption.ts",".././src/model/elements/values/SDKElementPropertyValue.ts",".././src/model/enums/SDKAlignment.ts",".././src/model/enums/SDKAssetFormat.ts",".././src/model/enums/SDKAssetScale.ts",".././src/model/enums/SDKAssetScaleType.ts",".././src/model/enums/SDKBlurType.ts",".././src/model/enums/SDKBorderPosition.ts",".././src/model/enums/SDKDocumentationCalloutType.ts",".././src/model/enums/SDKDocumentationGroupBehavior.ts",".././src/model/enums/SDKDocumentationHeadingType.ts",".././src/model/enums/SDKDocumentationItemType.ts",".././src/model/enums/SDKDocumentationPageBlockThemeType.ts",".././src/model/enums/SDKDocumentationPageBlockType.ts",".././src/model/enums/SDKFrameAlignment.ts",".././src/model/enums/SDKFrameLayout.ts",".././src/model/enums/SDKGradientType.ts",".././src/model/enums/SDKRichTextSpanAttributeType.ts",".././src/model/enums/SDKShadowType.ts",".././src/model/enums/SDKTextCase.ts",".././src/model/enums/SDKTextDecoration.ts",".././src/model/enums/SDKTokenType.ts",".././src/model/enums/SDKUnit.ts",".././src/model/exporters/SDKExporter.ts",".././src/model/exporters/custom_blocks/SDKExporterCustomBlock.ts",".././src/model/exporters/custom_blocks/SDKExporterCustomBlockProperty.ts",".././src/model/exporters/custom_blocks/SDKExporterCustomBlockVariant.ts",".././src/model/exporters/custom_properties/SDKExporterConfigurationProperty.ts",".././src/model/groups/SDKAssetGroup.ts",".././src/model/groups/SDKDesignComponentGroup.ts",".././src/model/groups/SDKTokenGroup.ts",".././src/model/support/SDKDesignComponentOrigin.ts",".././src/model/support/SDKSize.ts",".././src/model/support/SDKSource.ts",".././src/model/support/SDKTokenOrigin.ts",".././src/model/support/SDKWorkspaceNPMRegistry.ts",".././src/model/themes/SDKThemeUtilities.ts",".././src/model/themes/SDKTokenTheme.ts",".././src/model/themes/SDKTokenThemeOverride.ts",".././src/model/tokens/SDKBlurToken.ts",".././src/model/tokens/SDKBorderToken.ts",".././src/model/tokens/SDKColorToken.ts",".././src/model/tokens/SDKFontToken.ts",".././src/model/tokens/SDKGenericToken.ts",".././src/model/tokens/SDKGradientToken.ts",".././src/model/tokens/SDKMeasureToken.ts",".././src/model/tokens/SDKRadiusToken.ts",".././src/model/tokens/SDKShadowToken.ts",".././src/model/tokens/SDKTextToken.ts",".././src/model/tokens/SDKToken.ts",".././src/model/tokens/SDKTokenCompator.ts",".././src/model/tokens/SDKTypographyToken.ts",".././src/tools/design-tokens/SDKToolsDesignTokensPlugin.ts",".././src/tools/design-tokens/utilities/SDKDTJSONConverter.ts",".././src/tools/design-tokens/utilities/SDKDTJSONGroupBuilder.ts",".././src/tools/design-tokens/utilities/SDKDTJSONLoader.ts",".././src/tools/design-tokens/utilities/SDKDTJSONParser.ts",".././src/tools/design-tokens/utilities/SDKDTMapLoader.ts",".././src/tools/design-tokens/utilities/SDKDTMapResolver.ts",".././src/tools/design-tokens/utilities/SDKDTThemeMerger.ts",".././src/tools/design-tokens/utilities/SDKDTTokenGroupTreeMerger.ts",".././src/tools/design-tokens/utilities/SDKDTTokenMerger.ts",".././src/tools/design-tokens/utilities/SDKDTTokenReferenceResolver.ts",".././src/tools/design-tokens/utilities/tree/SDKDTGroupTree.ts",".././src/tools/design-tokens/utilities/tree/SDKDTGroupTreeNode.ts",".././src/tools/design-tokens/utilities/tree/SDKDTParentChildMapping.ts",".././src/tools/json-builder/SDKToolsJSONBuilder.ts",".././src/tools/json-builder/elements-transformers/SDKToolsJSONElementFigmaTokensTransformer.ts",".././src/tools/json-builder/elements-transformers/SDKToolsJSONElementStyleDictionaryTransformer.ts",".././src/tools/json-builder/elements-transformers/SDKToolsJSONElementTransformer.ts",".././src/tools/markdown-transform/SDKToolsMarkdownTransform.ts",".././src/tools/markdown-transform/SDKToolsMarkdownTransformBlock.ts",".././src/tools/markdown-transform/SDKToolsMarkdownTransformUtil.ts",".././src/tools/search-index/SDKToolsDocSearch.ts",".././src/tools/token-transform/SDKToolsTokenTransform.ts","../external commonjs \"abab\"","../external commonjs \"async-mutex\"","../external commonjs \"axios\"","../external commonjs \"fuse.js\"","../external commonjs \"lodash\"","../external commonjs \"parse-color\"","../external commonjs \"tinycolor2\"","../external commonjs \"uuid\"","../external node-commonjs \"fs\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["\"use strict\";\n//\n//  Brand.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Brand = void 0;\nconst SDKBrandWriter_1 = require(\"./SDKBrandWriter\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass Brand {\n    // --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(engine, model, version) {\n        this.engine = engine;\n        this.id = model.id;\n        this.persistentId = model.persistentId;\n        this.designSystemVersion = version;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        // We are reusing data core from version so the data for all brands are cached across the system\n        // Note that this might potentially be further optimized just by requesting specific data for specific... But later, as brands will still be nuanced use :)\n        this.dataCore = version.dataCore;\n    }\n    // --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writer\n    /** Retrieve write object for this brand */\n    writer() {\n        return new SDKBrandWriter_1.BrandWriter(this.engine, this);\n    }\n    // --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Methods\n    /** Fetches all tokens available in this design system version belonging to this specific brand */\n    tokens() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tokens = yield this.dataCore.currentDesignSystemTokens(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedTokens = tokens.filter(t => t.brandId === this.persistentId);\n            return brandedTokens;\n        });\n    }\n    /** Fetches all tokens and retrieves resolved array of tokens with applied themes */\n    tokensByApplyingThemes(themeIds) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch both tokens and themes\n            let tokens = yield this.tokens();\n            let themes = yield this.themes();\n            // Create (crude) hashed search index to make this more performant\n            var index = {};\n            for (let id of themeIds) {\n                let theme = themes.find(t => t.id === id);\n                if (!theme) {\n                    throw new Error(`Can't apply themes to current tokens: Theme id ${id} doesn't exist in the current design system version`);\n                }\n                let overrides = new Map();\n                for (let override of theme.overriddenTokens) {\n                    overrides.set(override.id, override);\n                }\n                index[id] = overrides;\n            }\n            // Select each correct token by first searching the overrides in reverse order, or fallback to default token if not found in any\n            let reverseIds = themeIds.reverse();\n            let resolvedTokens = [];\n            for (let token of tokens) {\n                let override = null;\n                for (let id of reverseIds) {\n                    override = (_a = index[id].get(token.id)) !== null && _a !== void 0 ? _a : null;\n                    if (override) {\n                        // If there is override, prioritize that\n                        resolvedTokens.push(override);\n                        break;\n                    }\n                }\n                if (!override) {\n                    // When no override was found in this pass, retrieve the token\n                    resolvedTokens.push(token);\n                }\n            }\n            return resolvedTokens;\n        });\n    }\n    /** Fetches all brands available in this design system version belonging to this specific brand */\n    themes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let themes = yield this.dataCore.currentDesignSystemThemes(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedThemes = themes.filter(t => t.brandId === this.persistentId);\n            return brandedThemes;\n        });\n    }\n    /** Fetches all token groups available in this design system version belonging to this specific brand */\n    tokenGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemTokenGroups(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedGroups = groups.filter(g => g.brandId === this.persistentId);\n            return brandedGroups;\n        });\n    }\n    /** Fetches root of the token group trees. This method returns roots specific to this brand, one group per category */\n    tokenGroupTrees() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemTokenGroups(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let rootGroups = groups.filter(g => g.isRoot && g.brandId === this.persistentId);\n            let trees = new Map();\n            for (let group of rootGroups) {\n                trees.set(group.tokenType, group);\n            }\n            return trees;\n        });\n    }\n    /** Fetches all designComponents available in this design system version belonging to this specific brand */\n    components() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let components = yield this.dataCore.currentDesignSystemComponents(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedComponents = components.filter(c => c.brandId === this.persistentId);\n            return brandedComponents;\n        });\n    }\n    /** Fetches all designComponents (Figma for now) available in this design system version belonging to this specific brand */\n    designComponents() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let designComponents = yield this.dataCore.currentDesignSystemDesignComponents(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedDesignComponents = designComponents.filter(c => c.brandId === this.persistentId);\n            return brandedDesignComponents;\n        });\n    }\n    /** Fetches all designComponent groups as flattened array available in this design system version belonging to this specific brand */\n    designComponentGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemDesignComponentGroups(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedGroups = groups.filter(g => g.brandId === this.persistentId);\n            return brandedGroups;\n        });\n    }\n    /** Fetches root of the designComponent group tree. This group will contain any other top-level groups that user created and will belong to this specific brand */\n    designComponentGroupTree() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemDesignComponentGroups(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let rootGroups = groups.filter(g => g.isRoot && g.brandId === this.persistentId);\n            return rootGroups[0];\n        });\n    }\n    /** Fetches all assets available in this design system version belonging to this specific brand */\n    assets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let assets = yield this.dataCore.currentDesignSystemAssets(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedAssets = assets.filter(a => a.brandId === this.persistentId);\n            return brandedAssets;\n        });\n    }\n    /** Fetches all asset groups as flattened array available in this design system version belonging to this specific brand */\n    assetGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemAssetGroups(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let brandedGroups = groups.filter(g => g.brandId === this.persistentId);\n            return brandedGroups;\n        });\n    }\n    /** Fetches root of the asset group tree. This group will contain any other top-level groups that user created and will be specific to this brand */\n    assetGroupTree() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemAssetGroups(this.designSystemVersion.designSystem.id, this.designSystemVersion);\n            let rootGroups = groups.filter(g => g.isRoot && g.brandId === this.persistentId);\n            return rootGroups[0];\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Assets\n    /** Renders all assets in this brand and retrieves URLs from which assets can be downloaded as key-value. You can only render one combination of size/format with one request - use more requests if you need to render more.\n     *\n     * Assets that are rendered as \"png\" will use \"scale\" attribute, however, when the format is \"svg\" or \"pdf\", scale attribute is ignored and will always render the original size.\n     *\n     * Note that assets are not persistent and URLs will expire quickly - you must download them and store them locally / remotely and can never use this URL publicly as it won't work after a short time */\n    renderedAssets(format, scale) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.assetGroups();\n            let assets = yield this.assets();\n            // Construct rendering request. Only one size can be rendered at once\n            return yield this.dataCore.renderAssetsForConfiguration(this.designSystemVersion.designSystem.id, this.designSystemVersion, assets, groups, format, scale);\n        });\n    }\n    /** Renders specific assets in this brand and retrieves URLs from which assets can be downloaded as key-value. You can only render one combination of size/format with one request - use more requests if you need to render more.\n     *\n     * Assets that are rendered as \"png\" will use \"scale\" attribute, however, when the format is \"svg\" or \"pdf\", scale attribute is ignored and will always render the original size.\n     *\n     * Note that assets are not persistent and URLs will expire quickly - you must download them and store them locally / remotely and can never use this URL publicly as it won't work after a short time */\n    specificRenderedAssets(assets, format, scale) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.assetGroups();\n            // Construct rendering request. Only one size can be rendered at once\n            return yield this.dataCore.renderAssetsForConfiguration(this.designSystemVersion.designSystem.id, this.designSystemVersion, assets, groups, format, scale);\n        });\n    }\n}\nexports.Brand = Brand;\n","\"use strict\";\n//\n//  BrandWriter.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrandWriter = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass BrandWriter {\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Constructor\n    constructor(engine, brand) {\n        this.engine = engine;\n        this.dataCore = brand.dataCore;\n        this.brand = brand;\n    }\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Methods\n    /** Fetches all tokens available in this design system version belonging to this specific brand */\n    writeTokens(tokens, groups, deleteTokens) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Convert tokens and groups to their remote counterparts\n            let remoteTokens = tokens.map(t => t.toWriteObject());\n            let remoteGroups = groups.map(g => g.toWriteObject());\n            yield this.dataCore.writeTokenData(this.brand.designSystemVersion.designSystem.id, this.brand.designSystemVersion, remoteTokens, remoteGroups, deleteTokens);\n            return {\n                result: \"success\",\n                errors: [],\n                tokens: tokens,\n                tokenGroups: groups\n            };\n        });\n    }\n    writeTheme(theme) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Convert tokens and groups to their remote counterparts\n            let remoteTheme = theme.toWriteObject();\n            yield this.dataCore.writeTokenThemeData(this.brand.designSystemVersion.designSystem.id, this.brand.designSystemVersion, remoteTheme);\n            return {\n                result: \"success\",\n                errors: [],\n                theme: theme\n            };\n        });\n    }\n}\nexports.BrandWriter = BrandWriter;\n","\"use strict\";\n//\n//  DesignSystem.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DesignSystem = void 0;\nconst SDKSource_1 = require(\"../model/support/SDKSource\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass DesignSystem {\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Constructor\n    constructor(engine, model) {\n        var _a;\n        this.engine = engine;\n        this.id = model.id;\n        this.workspaceId = model.workspaceId;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.isMultiBrand = model.isMultibrand;\n        this.isPublic = model.isPublic;\n        this.documentationExporterId = model.docExporterId;\n        this.documentationSlug = model.docSlug;\n        this.documentationUserSlug = (_a = model.docUserSlug) !== null && _a !== void 0 ? _a : null;\n        if (model.sources) {\n            this.sources = model.sources.map(s => new SDKSource_1.Source(s));\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Methods\n    /** Fetches all versions that were created in the design system. Note that there is always at least one version - the \"draft\" - if there was no version created manually. */\n    versions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.engine.designSystemVersions(this.id);\n        });\n    }\n    /** Fetches active design system version - the one to which all changes are being written currently. There is always one active version at any moment. */\n    activeVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.engine.activeDesignSystemVersion(this.id);\n        });\n    }\n    /** Get source by source id */\n    sourceById(sourceId) {\n        let source = this.sources.filter(s => s.id === sourceId)[0];\n        return source;\n    }\n    /** Get Figma file from source id */\n    figmaFileIdForSourceId(sourceId) {\n        let source = this.sources.filter(s => s.id === sourceId)[0];\n        if (source) {\n            return source.fileId;\n        }\n    }\n    /** Get Figma file name from source id */\n    figmaFileNameForSourceId(sourceId) {\n        let source = this.sources.filter(s => s.id === sourceId)[0];\n        if (source) {\n            return source.fileName;\n        }\n    }\n}\nexports.DesignSystem = DesignSystem;\n","\"use strict\";\n//\n//  DesignSystemVersion.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DesignSystemVersion = void 0;\nconst SDKSupernovaError_1 = require(\"./errors/SDKSupernovaError\");\nconst SDKBrand_1 = require(\"./SDKBrand\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass DesignSystemVersion {\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Constructor\n    constructor(engine, designSystem, model) {\n        var _a;\n        this.engine = engine;\n        this.id = model.id;\n        this.designSystem = designSystem;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.version = model.version;\n        this.changeLog = ((_a = model.changeLog) === null || _a === void 0 ? void 0 : _a.length) > 0 ? model.changeLog : null;\n        this.isReadOnly = model.isReadonly;\n        this.dataCore = this.engine.newDataCore();\n    }\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Methods\n    /** Fetches all brands belonging to this design system version. Brand objects can be used to access filtered data belonging to a single brand */\n    brands() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch the authenticated user\n            const dsEndpoint = `design-systems/${this.designSystem.id}/versions/${this.id}/brands`;\n            let dsData = (yield this.engine.dataBridge.getDSMGenericDataFromEndpoint(dsEndpoint)).brands;\n            if (!dsData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve brands for design system version id ${this.id}`);\n            }\n            let brands = new Array();\n            for (let brandData of dsData) {\n                let brand = new SDKBrand_1.Brand(this.engine, brandData, this);\n                brands.push(brand);\n            }\n            return brands;\n        });\n    }\n    /** Fetches all tokens in this design system version. This method retrieves all groups defined across all brands */\n    tokens() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemTokens(this.designSystem.id, this);\n        });\n    }\n    /** Fetches all themes in this design system version. This method retrieves all groups defined across all brands */\n    themes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemThemes(this.designSystem.id, this);\n        });\n    }\n    /** Fetches all tokens and retrieves resolved array of tokens with applied themes */\n    tokensByApplyingThemes(tokenIds, themeIds) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch both tokens and themes\n            let allTokens = yield this.tokens();\n            // Filter tokens based on provided tokens\n            let tokens = allTokens.filter(t => tokenIds.includes(t.id));\n            if (tokenIds.length !== tokens.length) {\n                throw new Error(`Can't apply themes to selected tokens: Some token ids that were requesting don't exist in the current design system version`);\n            }\n            let themes = yield this.themes();\n            // Create (crude) hashed search index to make this more performant\n            var index = {};\n            for (let id of themeIds) {\n                let theme = themes.find(t => t.id === id);\n                if (!theme) {\n                    throw new Error(`Can't apply themes to current tokens: Theme id ${id} doesn't exist in the current design system version`);\n                }\n                let overrides = new Map();\n                for (let override of theme.overriddenTokens) {\n                    overrides.set(override.id, override);\n                }\n                index[id] = overrides;\n            }\n            // Select each correct token by first searching the overrides in reverse order, or fallback to default token if not found in any\n            let reverseIds = themeIds.reverse();\n            let resolvedTokens = [];\n            for (let token of tokens) {\n                let override = null;\n                for (let id of reverseIds) {\n                    override = (_a = index[id].get(token.id)) !== null && _a !== void 0 ? _a : null;\n                    if (override) {\n                        // If there is override, prioritize that\n                        resolvedTokens.push(override);\n                        break;\n                    }\n                }\n                if (!override) {\n                    // When no override was found in this pass, retrieve the token\n                    resolvedTokens.push(token);\n                }\n            }\n            return resolvedTokens;\n        });\n    }\n    /** Fetches all token groups in this design system version. This method retrieves all groups defined across all brands */\n    tokenGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemTokenGroups(this.designSystem.id, this);\n        });\n    }\n    /** Fetches root of the token group trees. This method returns all roots, one per each brand you have defined, ordered under separate TokenType, one array per category */\n    tokenGroupTrees() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemTokenGroups(this.designSystem.id, this);\n            let rootGroups = groups.filter(g => g.isRoot);\n            let trees = new Map();\n            for (let group of rootGroups) {\n                let branch = trees.get(group.tokenType);\n                if (branch) {\n                    branch.push(group);\n                    trees.set(group.tokenType, branch);\n                }\n                else {\n                    trees.set(group.tokenType, [group]);\n                }\n            }\n            return trees;\n        });\n    }\n    /** Fetches all assets in this design system version for all defined brands  */\n    components() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemComponents(this.designSystem.id, this);\n        });\n    }\n    /** Fetches all assets in this design system version for all defined brands  */\n    designComponents() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemDesignComponents(this.designSystem.id, this);\n        });\n    }\n    /** Fetches all designComponent group in this design system version for all defined brands  */\n    designComponentGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemDesignComponentGroups(this.designSystem.id, this);\n        });\n    }\n    /** Fetches roots of the designComponent group trees. This group will contain any other top-level groups that user created. This method returns all roots, one per each brand you have defined */\n    designComponentGroupTree() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemDesignComponentGroups(this.designSystem.id, this);\n            let rootGroups = groups.filter(g => g.isRoot);\n            return rootGroups;\n        });\n    }\n    /** Fetches all assets in this design system version for all defined brands */\n    assets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemAssets(this.designSystem.id, this);\n        });\n    }\n    /** Fetches all asset groups and retrieve them as flat array. You can still access all children of groups with children accessor of group object. This method retrieves all groups across all brands */\n    assetGroups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemAssetGroups(this.designSystem.id, this);\n        });\n    }\n    /** Fetches root of the asset group trees. This group will contain any other top-level groups that user created. This method returns all roots, one per each brand you have defined */\n    assetGroupTrees() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.dataCore.currentDesignSystemAssetGroups(this.designSystem.id, this);\n            let rootGroups = groups.filter(g => g.isRoot);\n            return rootGroups;\n        });\n    }\n    /** Fetches root documentation object containing the entire documentation structure. This will never be null as there is always documentation object attached to a specific design system version */\n    documentation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dataCore.currentDesignSystemDocumentation(this.designSystem, this);\n        });\n    }\n    /** Renders all assets in this version and retrieves URLs from which assets can be downloaded as key-value. You can only render one combination of size/format with one request - use more requests if you need to render more.\n     *\n     * Assets that are rendered as \"png\" will use \"scale\" attribute, however, when the format is \"svg\" or \"pdf\", scale attribute is ignored and will always render the original size.\n     *\n     * Note that assets are not persistent and URLs will expire quickly - you must download them and store them locally / remotely and can never use this URL publicly as it won't work after a short time */\n    renderedAssets(format, scale) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.assetGroups();\n            let assets = yield this.assets();\n            // Construct rendering request. Only one size can be rendered at once\n            return yield this.dataCore.renderAssetsForConfiguration(this.designSystem.id, this, assets, groups, format, scale);\n        });\n    }\n    /** Renders specific assets in this version and retrieves URLs from which assets can be downloaded as key-value. You can only render one combination of size/format with one request - use more requests if you need to render more.\n     *\n     * Assets that are rendered as \"png\" will use \"scale\" attribute, however, when the format is \"svg\" or \"pdf\", scale attribute is ignored and will always render the original size.\n     *\n     * Note that assets are not persistent and URLs will expire quickly - you must download them and store them locally / remotely and can never use this URL publicly as it won't work after a short time */\n    specificRenderedAssets(assets, format, scale) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let groups = yield this.assetGroups();\n            // Construct rendering request. Only one size can be rendered at once\n            return yield this.dataCore.renderAssetsForConfiguration(this.designSystem.id, this, assets, groups, format, scale);\n        });\n    }\n}\nexports.DesignSystemVersion = DesignSystemVersion;\n","\"use strict\";\n//\n//  SDKDocumentation.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Documentation = void 0;\nconst SDKDocumentationConfiguration_1 = require(\"../model/documentation/SDKDocumentationConfiguration\");\nconst SDKDocumentationItemType_1 = require(\"../model/enums/SDKDocumentationItemType\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\n/** Main documentation accessor object. All data associated with documentation can be access through here, such as pages, groups, any block, and also any configuration your editors did. */\nclass Documentation {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, designSystem, model, registry) {\n        this.version = version;\n        this.designSystem = designSystem;\n        this.settings = new SDKDocumentationConfiguration_1.DocumentationConfiguration(model.settings, registry);\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Documentation accessors\n    /** Main group to which all groups and pages belong. The root group never shows up inside the editor but is always present in data model */\n    rootGroup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let items = yield this.version.dataCore.currentDesignSystemDocumentationItems(this.designSystem, this.version);\n            for (let item of items) {\n                if (item.type === SDKDocumentationItemType_1.DocumentationItemType.group && item.isRoot) {\n                    return item;\n                }\n            }\n            throw new Error('No documentation root found');\n        });\n    }\n    /** All items, including pages, groups and group of tab type fetched together */\n    items() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.version.dataCore.currentDesignSystemDocumentationItems(this.designSystem, this.version);\n        });\n    }\n    /** All groups to which other groups and pages can belong. Each group also contains entire children chain pre-fetched and resolved for convenience */\n    groups() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let items = yield this.version.dataCore.currentDesignSystemDocumentationItems(this.designSystem, this.version);\n            return items.filter(i => i.type === SDKDocumentationItemType_1.DocumentationItemType.group);\n        });\n    }\n    /** All pages created within documentation presented as flat structure. Each page contains all data neccessary to render it pre-fetched and resolved for convenience */\n    pages() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let items = yield this.version.dataCore.currentDesignSystemDocumentationItems(this.designSystem, this.version);\n            return items.filter(i => i.type === SDKDocumentationItemType_1.DocumentationItemType.page);\n        });\n    }\n    /** All custom blocks that were registered with the active exporter configuration */\n    customBlocks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.version.dataCore.currentExporterCustomBlocks(this.designSystem.id, this.version);\n        });\n    }\n    /** All custom configuration properties that are defined within the active exporter package */\n    customConfiguration() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.version.dataCore.currentExporterConfigurationProperties(this.designSystem.workspaceId, this.designSystem.id, this.designSystem.documentationExporterId, this.version);\n        });\n    }\n    /** All custom block variants that are defined within the active exporter package */\n    customBlockVariants() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.version.dataCore.currentExporterBlockVariants(this.designSystem.workspaceId, this.designSystem.id, this.designSystem.documentationExporterId, this.version);\n        });\n    }\n}\nexports.Documentation = Documentation;\n","\"use strict\";\n//\n//  SDKSupernova.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Supernova = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDataBridge_1 = require(\"./data/SDKDataBridge\");\nconst SDKDataCore_1 = require(\"./data/SDKDataCore\");\nconst SDKConfiguration_1 = require(\"./data/SDKConfiguration\");\nconst SDKDesignSystem_1 = require(\"./SDKDesignSystem\");\nconst SDKDesignSystemVersion_1 = require(\"./SDKDesignSystemVersion\");\nconst SDKWorkspace_1 = require(\"./SDKWorkspace\");\nconst SDKSupernovaError_1 = require(\"./errors/SDKSupernovaError\");\nconst SDKExporter_1 = require(\"../model/exporters/SDKExporter\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\n/** Main Supernova.io SDK object. Use this to connect to your data instance and retrieve workspace / design system / version from which you can access all neccessary data. */\nclass Supernova {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(apiKey, url, requestHook) {\n        // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n        // MARK: - Properties\n        this.useResolutionCache = true;\n        this.apiKey = apiKey;\n        this.apiUrl = url !== null && url !== void 0 ? url : SDKConfiguration_1.Configuration.apiUrlForDefaultEnvironment();\n        this.apiVersion = SDKConfiguration_1.Configuration.apiVersionForDefaultEnvironment();\n        this.requestHook = requestHook;\n        this.rebuildBridge();\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Methods\n    /** Fetches all workspaces available under provided API key. Each workspace contains specific design systems, which contain versions, which contain all the design system data. */\n    workspaces() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch the authenticated user\n            const userEndpoint = `users/me`;\n            let user = (yield this.dataBridge.getDSMGenericDataFromEndpoint(userEndpoint)).user;\n            if (!user) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(\"Unable to retrieve current sdk user\");\n            }\n            // Fetch the workspaces from the memberships\n            const workspaceEndpoint = `users/${user.id}/workspaces`;\n            let memberships = (yield this.dataBridge.getDSMGenericDataFromEndpoint(workspaceEndpoint)).membership;\n            if (!memberships) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(\"Unable to retrieve available workspaces\");\n            }\n            let workspaces = new Array();\n            for (let membership of memberships) {\n                let workspace = new SDKWorkspace_1.Workspace(this, membership.workspace);\n                workspaces.push(workspace);\n            }\n            return workspaces;\n        });\n    }\n    /** Fetches one specific workspace by provided id. Throws when workspace is not found or user doesn't have access to it.  */\n    workspace(workspaceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch the authenticated user\n            const userEndpoint = `workspaces/${workspaceId}`;\n            let workspaceData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(userEndpoint)).workspace;\n            if (!workspaceData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve workspace with id ${workspaceId}`);\n            }\n            return new SDKWorkspace_1.Workspace(this, workspaceData);\n        });\n    }\n    /** Fetches design systems which belong to a provided workspace. */\n    designSystems(workspaceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch the authenticated user\n            const dsEndpoint = `workspaces/${workspaceId}/design-systems`;\n            let dsData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(dsEndpoint)).designSystems;\n            if (!dsData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve design systems for workspace id ${workspaceId}`);\n            }\n            let designSystems = new Array();\n            for (let designSystem of dsData) {\n                let ds = new SDKDesignSystem_1.DesignSystem(this, designSystem);\n                designSystems.push(ds);\n            }\n            return designSystems;\n        });\n    }\n    /** Fetches design system by provided id. Throws when design system is not found or user doesn't have access to it. */\n    designSystem(designSystemId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch the authenticated user\n            const dsEndpoint = `design-systems/${designSystemId}`;\n            let dsData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(dsEndpoint)).designSystem;\n            if (!dsData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve design system for id ${designSystemId}`);\n            }\n            return new SDKDesignSystem_1.DesignSystem(this, dsData);\n        });\n    }\n    /** Fetches active design system version - the one to which all changes are being written currently. There is always one active version available for any provided design system. */\n    activeDesignSystemVersion(designSystemId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch design system\n            let ds = yield this.designSystem(designSystemId);\n            // Fetch the authenticated user\n            const versionEndpoint = `design-systems/${designSystemId}/versions`;\n            let versionData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(versionEndpoint)).designSystemVersions;\n            if (!versionData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve active version for design system id ${designSystemId}`);\n            }\n            // Retrieve version that is currently active and available for write\n            for (let version of versionData) {\n                if (version.isReadonly === false) {\n                    return new SDKDesignSystemVersion_1.DesignSystemVersion(this, ds, version);\n                }\n            }\n            throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve active version for design system id ${designSystemId} - no version is currently active in selected design system`);\n        });\n    }\n    /** Fetches all design system versions of provided design system */\n    designSystemVersions(designSystemId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch design system\n            let ds = yield this.designSystem(designSystemId);\n            // Fetch all versions belonging to one specific design system\n            const versionEndpoint = `design-systems/${designSystemId}/versions`;\n            let versionData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(versionEndpoint)).designSystemVersions;\n            if (!versionData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve active version for design system id ${designSystemId}`);\n            }\n            let versions = new Array();\n            for (let version of versionData) {\n                let v = new SDKDesignSystemVersion_1.DesignSystemVersion(this, ds, version);\n                versions.push(v);\n            }\n            return versions;\n        });\n    }\n    /** Fetches design system version by id */\n    designSystemVersion(designSystemId, versionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch design system\n            let ds = yield this.designSystem(designSystemId);\n            // Fetch all versions belonging to one specific design system\n            const versionEndpoint = `design-systems/${designSystemId}/versions/${versionId}`;\n            let versionData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(versionEndpoint)).designSystemVersion;\n            if (!versionData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve design system version for id ${versionId}`);\n            }\n            return new SDKDesignSystemVersion_1.DesignSystemVersion(this, ds, versionData);\n        });\n    }\n    /** Fetches exporters belonging to workspace by id */\n    exporters(workspaceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch all versions belonging to one specific design system\n            const exporterEndpoint = `codegen/workspaces/${workspaceId}/exporters`;\n            let exporterData = (yield this.dataBridge.getDSMGenericDataFromEndpoint(exporterEndpoint)).exporters;\n            if (!exporterData) {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to retrieve exporters for workspace id ${workspaceId}`);\n            }\n            return exporterData.map(e => new SDKExporter_1.Exporter(e));\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Settings\n    /** Enables or disables resolution cache. Because of potential amount of data processed extra when this cache is disabled, only do it when you have a good reason (like if you are building a long-running, client-side app). Cache is enabled by default. */\n    setResolutionCacheEnabled(isEnabled) {\n        this.useResolutionCache = isEnabled;\n        this.dataBridge.cache = isEnabled;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Data core replication\n    /** Use this to rebuild data core if the settings change. */\n    rebuildBridge() {\n        this.dataBridge = new SDKDataBridge_1.DataBridge({\n            cache: this.useResolutionCache,\n            apiUrl: this.apiUrl,\n            apiVersion: this.apiVersion,\n            accessToken: this.apiKey,\n            target: null,\n            requestHook: this.requestHook,\n        });\n    }\n    /** Use this to make version-instance specific data core. Each version must have its own data core, as it caches the data and they can't intermix. Supernova instance has its own data core. */\n    newDataCore() {\n        let bridge = new SDKDataBridge_1.DataBridge({\n            cache: this.useResolutionCache,\n            apiUrl: this.apiUrl,\n            apiVersion: this.apiVersion,\n            accessToken: this.apiKey,\n            target: null,\n            requestHook: this.requestHook\n        });\n        return new SDKDataCore_1.DataCore(bridge);\n    }\n}\nexports.Supernova = Supernova;\n","\"use strict\";\n//\n//  Workspace.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Workspace = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass Workspace {\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Constructor\n    constructor(engine, model) {\n        this.engine = engine;\n        this.id = model.id;\n        this.handle = model.profile.handle;\n        this.name = model.profile.name;\n        this.engine = engine;\n    }\n    // --- --- --- --- --- --- --- --- --- --- \n    // MARK: - Methods\n    /** Fetches design systems which belong to this workspace. */\n    designSystems() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.engine.designSystems(this.id);\n        });\n    }\n    /** Fetches exporters which belong to this workspace. */\n    exporters() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.engine.exporters(this.id);\n        });\n    }\n}\nexports.Workspace = Workspace;\n","\"use strict\";\n//\n//  SDKConfiguration.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass Configuration {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static helpers and configuration\n    /** Retrieve API URL for default target */\n    static apiUrlForDefaultEnvironment() {\n        return 'https://api.supernova.io/api';\n    }\n    /** Retrieve API version for the specific environment accesse */\n    static apiVersionForDefaultEnvironment() {\n        return \"0.2\";\n    }\n}\nexports.Configuration = Configuration;\n","\"use strict\";\n//\n//  SDKDataBridge.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataBridge = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst axios_1 = __importDefault(require(\"axios\"));\nconst SDKSupernovaError_1 = require(\"../errors/SDKSupernovaError\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass DataBridge {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(conf) {\n        this.cache = conf.cache;\n        this.authToken = conf.accessToken;\n        this.apiUrl = conf.apiUrl;\n        this.apiVersion = conf.apiVersion;\n        this.target = conf.target;\n        this.requestHook = conf.requestHook;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Authenticated data fetching\n    getDSMGenericDataFromEndpoint(endpoint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.dsGenericRequestURL()}/${endpoint}`;\n            return this.getDataForAuthenticatedEndpoint(url);\n        });\n    }\n    getDSMDataFromEndpoint(designSystemId, designSystemVersionId, endpoint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.dsDataRequestURL(designSystemId, designSystemVersionId)}/${endpoint}`;\n            return this.getDataForAuthenticatedEndpoint(url);\n        });\n    }\n    buildRequestConfig(url, method, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = {\n                url,\n                method,\n                timeout: 120000,\n                headers: {}\n            };\n            if (data) {\n                config.data = data;\n            }\n            let skipAuth = false;\n            if (this.requestHook) {\n                const hookResult = yield this.requestHook(config);\n                if (hookResult && hookResult.skipDefaultAuth) {\n                    skipAuth = true;\n                }\n            }\n            if (!skipAuth) {\n                const token = this.authToken;\n                config.headers['Authorization'] = `Bearer ${token}`;\n            }\n            return config;\n        });\n    }\n    getDataForAuthenticatedEndpoint(requestURL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = yield this.buildRequestConfig(requestURL, 'GET');\n            // Make authorized ds request\n            return new Promise((resolve, reject) => {\n                // Fetch the data\n                axios_1.default\n                    .request(config)\n                    .then(result => {\n                    // Filter the data from the API, if needed (if we only need a certain part of the retrieved tree)\n                    let data = result.data.result;\n                    // Map the data\n                    resolve(data);\n                })\n                    .catch(error => {\n                    // Throw different error based on the type of recieved response\n                    if (error.response) {\n                        reject(SDKSupernovaError_1.SupernovaError.fromAxiosResponseError(error.response));\n                    }\n                    else if (error.request) {\n                        reject(SDKSupernovaError_1.SupernovaError.fromAxiosRequestError(error.request));\n                    }\n                    else {\n                        reject(SDKSupernovaError_1.SupernovaError.fromSDKError(error.message));\n                    }\n                });\n            });\n        });\n    }\n    postDSMDataToEndpoint(designSystemId, designSystemVersionId, endpoint, data, put = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.dsDataRequestURL(designSystemId, designSystemVersionId)}/${endpoint}`;\n            return this.postDataForAuthenticatedEndpoint(url, data, put);\n        });\n    }\n    postDataForAuthenticatedEndpoint(requestURL, data, put = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = yield this.buildRequestConfig(requestURL, put ? 'PUT' : 'POST', data);\n            // Make authorized ds request\n            return new Promise((resolve, reject) => {\n                // Fetch the data\n                axios_1.default\n                    .request(config)\n                    .then(result => {\n                    // Filter the data from the API, if needed (if we only need a certain part of the retrieved tree)\n                    let data = result.data.result;\n                    // Map the data\n                    resolve(data);\n                })\n                    .catch(error => {\n                    // Throw different error based on the type of recieved response\n                    if (error.response) {\n                        reject(SDKSupernovaError_1.SupernovaError.fromAxiosResponseError(error.response));\n                    }\n                    else if (error.request) {\n                        reject(SDKSupernovaError_1.SupernovaError.fromAxiosRequestError(error.request));\n                    }\n                    else {\n                        reject(SDKSupernovaError_1.SupernovaError.fromSDKError(error.message));\n                    }\n                });\n            });\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - URL construction\n    dsGenericRequestURL() {\n        return `${this.apiUrl}`;\n    }\n    dsWorkspaceRequestURL(wsId) {\n        return `${this.apiUrl}/workspaces/${wsId}`;\n    }\n    dsDataRequestURL(dsId, dsVersionId) {\n        return `${this.apiUrl}/design-systems/${dsId}/versions/${dsVersionId}`;\n    }\n    dsMetadataRequestURL(dsId) {\n        return `${this.apiUrl}/design-systems/${dsId}`;\n    }\n    dsVersionRequestURL(dsId) {\n        return `${this.apiUrl}/design-systems/${dsId}/versions`;\n    }\n}\nexports.DataBridge = DataBridge;\n","\"use strict\";\n//\n//  SDKDataCore.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2020 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataCore = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst async_mutex_1 = require(\"async-mutex\");\nconst SDKAsset_1 = require(\"../../model/assets/SDKAsset\");\nconst SDKRenderedAsset_1 = require(\"../../model/assets/SDKRenderedAsset\");\nconst SDKDesignComponent_1 = require(\"../../model/components/SDKDesignComponent\");\nconst SDKExporterCustomBlock_1 = require(\"../../model/exporters/custom_blocks/SDKExporterCustomBlock\");\nconst SDKAssetGroupResolver_1 = require(\"../resolvers/SDKAssetGroupResolver\");\nconst SDKDesignComponentGroupResolver_1 = require(\"../resolvers/SDKDesignComponentGroupResolver\");\nconst SDKDocumentationItemResolver_1 = require(\"../resolvers/SDKDocumentationItemResolver\");\nconst SDKTokenGroupResolver_1 = require(\"../resolvers/SDKTokenGroupResolver\");\nconst SDKTokenResolver_1 = require(\"../resolvers/SDKTokenResolver\");\nconst SDKDocumentation_1 = require(\"../SDKDocumentation\");\nconst SDKExporter_1 = require(\"../../model/exporters/SDKExporter\");\nconst SDKComponentResolver_1 = require(\"../resolvers/SDKComponentResolver\");\nconst SDKWorkspaceNPMRegistry_1 = require(\"../../model/support/SDKWorkspaceNPMRegistry\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass DataCore {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(bridge) {\n        // Synchronization mutexes\n        this.tokenMutex = new async_mutex_1.Mutex();\n        this.tokenGroupMutex = new async_mutex_1.Mutex();\n        this.themesMutex = new async_mutex_1.Mutex();\n        this.componentMutex = new async_mutex_1.Mutex();\n        this.designComponentAssetMutex = new async_mutex_1.Mutex();\n        this.designComponentAssetGroupMutex = new async_mutex_1.Mutex();\n        this.documentationItemMutex = new async_mutex_1.Mutex();\n        this.configurationMutex = new async_mutex_1.Mutex();\n        this.exporterCustomBlocksMutex = new async_mutex_1.Mutex();\n        this.bridge = bridge;\n        this.tokensSynced = false;\n        this.tokens = new Array();\n        this.tokenGroupsSynced = false;\n        this.tokenGroups = new Array();\n        this.themesSynced = false;\n        this.themes = new Array();\n        this.componentsSynced = false;\n        this.components = new Array();\n        this.documentationItemsSynced = false;\n        this.documentationItems = new Array();\n        this.exporterCustomBlocksSynced = false;\n        this.exporterCustomBlocks = new Array();\n        this.designComponentAssetSynced = false;\n        this.designComponents = new Array();\n        this.assets = new Array();\n        this.designComponentAssetGroupsSynced = false;\n        this.designComponentGroups = new Array();\n        this.assetGroups = new Array();\n        this.documentationSynced = false;\n        this.documentation = null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Private Accessors - Auxiliary helper functions\n    /** Get workspace handle from server */\n    currentWorkspaceHandle(workspaceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download workspace details\n            // Get remote data\n            const endpoint = `workspaces/${workspaceId}`;\n            let remoteWorkspace = (yield this.bridge.getDSMGenericDataFromEndpoint(endpoint)).workspace;\n            // Extend with information coming from pulsar\n            return remoteWorkspace.profile.handle;\n        });\n    }\n    /** Get deisgn system documentation url from server */\n    currentDeployedDocumentationUrl(workspaceId, versionId) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download detail of the last build that successfully deployed docs\n            const endpoint = `codegen/workspaces/${workspaceId}/jobs?designSystemVersionId=${versionId}&destinations[]=documentation&offset=0&limit=1`;\n            let remoteJob = (yield this.bridge.getDSMGenericDataFromEndpoint(endpoint)).jobs;\n            if (remoteJob[0]) {\n                // Note: So far, there is no build functionality in SDK, so we are not doing this properly. This will change going forward as we introduce build CLI/SDK\n                return (_d = (_c = (_b = (_a = remoteJob[0]) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b.documentation) === null || _c === void 0 ? void 0 : _c.url) !== null && _d !== void 0 ? _d : undefined;\n            }\n            return undefined;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public Accessors - Themes\n    currentDesignSystemThemes(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.tokenMutex.acquire();\n            // Acquire data\n            if (!this.themesSynced) {\n                yield this.updateThemesData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.themes;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public Accessors - Tokens\n    currentDesignSystemTokens(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.tokenMutex.acquire();\n            // Acquire data\n            if (!this.tokensSynced) {\n                yield this.updateTokenData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.tokens;\n        });\n    }\n    currentDesignSystemTokenGroups(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.tokenGroupMutex.acquire();\n            // Acquire data\n            if (!this.tokenGroupsSynced) {\n                yield this.updateTokenGroupData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.tokenGroups;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public Accessors - Assets\n    currentDesignSystemAssets(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.designComponentAssetMutex.acquire();\n            // Acquire data\n            if (!this.designComponentAssetSynced) {\n                yield this.updateDesignComponentAndAssetData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.assets;\n        });\n    }\n    currentDesignSystemAssetGroups(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.designComponentAssetGroupMutex.acquire();\n            // Acquire data\n            if (!this.designComponentAssetSynced) {\n                yield this.updateDesignComponentAndAssetData(designSystemId, designSystemVersion);\n            }\n            if (!this.designComponentAssetGroupsSynced) {\n                yield this.updateDesignComponentAndAssetGroupData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.assetGroups;\n        });\n    }\n    renderAssetsForConfiguration(designSystemId, designSystemVersion, assets, groups, format, scale) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Configure payload\n            let configuration = {\n                settings: [\n                    {\n                        prefix: '',\n                        suffix: '',\n                        scale: scale,\n                        format: format\n                    }\n                ],\n                persistentIds: assets.map(a => a.id)\n            };\n            // Render items\n            const endpoint = `components/assets/download-list`;\n            const items = (yield this.bridge.postDSMDataToEndpoint(designSystemId, designSystemVersion.id, endpoint, configuration)).items;\n            // Create rendered items index\n            const renderedItemsMap = new Map();\n            for (const renderedItem of items) {\n                renderedItemsMap.set(renderedItem.assetId, renderedItem);\n            }\n            if (Array.from(renderedItemsMap.entries()).length !== assets.length) {\n                throw new Error(\"Number of rendered assets doesn't align with number of requested assets\");\n            }\n            const assetsMap = new Map();\n            for (const asset of assets) {\n                assetsMap.set(asset.id, asset);\n            }\n            let resultingAssets = [];\n            // For duplicates\n            let names = new Map();\n            for (let item of items) {\n                names.set(item.originalName.toLowerCase(), 0);\n            }\n            for (const asset of assets) {\n                const item = renderedItemsMap.get(asset.id);\n                let renderedGroup;\n                for (let group of groups) {\n                    if (group.assetIds.includes(asset.id)) {\n                        renderedGroup = group;\n                        break;\n                    }\n                }\n                if (!renderedGroup) {\n                    throw new Error(`Each asset must be assigned to some group`);\n                }\n                let lowercasedName = item.originalName.toLowerCase();\n                let renderedAsset = new SDKRenderedAsset_1.RenderedAsset(item, asset, renderedGroup, names.get(lowercasedName));\n                // Increase number of duplicates\n                names.set(lowercasedName, names.get(lowercasedName) + 1);\n                // Store\n                resultingAssets.push(renderedAsset);\n            }\n            return resultingAssets;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public Accessors - Components\n    currentDesignSystemComponents(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.componentMutex.acquire();\n            // Acquire data\n            if (!this.componentsSynced) {\n                yield this.updateComponentData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.components;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public Accessors - Design Components\n    currentDesignSystemDesignComponents(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.designComponentAssetMutex.acquire();\n            // Acquire data\n            if (!this.designComponentAssetSynced) {\n                yield this.updateDesignComponentAndAssetData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.designComponents;\n        });\n    }\n    currentDesignSystemDesignComponentGroups(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.designComponentAssetGroupMutex.acquire();\n            // Acquire data\n            if (!this.designComponentAssetSynced) {\n                yield this.updateDesignComponentAndAssetData(designSystemId, designSystemVersion);\n            }\n            if (!this.designComponentAssetGroupsSynced) {\n                yield this.updateDesignComponentAndAssetGroupData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.designComponentGroups;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public Accessors - Documentation\n    currentDesignSystemDocumentationItems(designSystem, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.documentationItemMutex.acquire();\n            // Acquire custom blocks and doc configuration first, so they can be used for resolution\n            let blocks = yield this.currentExporterCustomBlocks(designSystem.id, designSystemVersion);\n            let documentation = (yield this.currentDesignSystemDocumentation(designSystem, designSystemVersion)).settings;\n            // Acquire data\n            if (!this.documentationItemsSynced) {\n                yield this.updateDocumentationItemData(designSystem.id, designSystemVersion, blocks, documentation);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.documentationItems;\n        });\n    }\n    currentDesignSystemDocumentation(designSystem, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.configurationMutex.acquire();\n            // Acquire data\n            if (!this.documentationSynced) {\n                yield this.updateDocumentationData(designSystem, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.documentation;\n        });\n    }\n    currentExporterCustomBlocks(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Thread-lock the call\n            const release = yield this.exporterCustomBlocksMutex.acquire();\n            // Acquire data\n            if (!this.exporterCustomBlocksSynced) {\n                yield this.updateExporterCustomBlocksData(designSystemId, designSystemVersion);\n            }\n            // Unlock the thread\n            release();\n            // Retrieve the data\n            return this.exporterCustomBlocks;\n        });\n    }\n    currentExporterConfigurationProperties(workspaceId, designSystemId, exporterId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: This call is currently not cached as we need multi-cache because of exporterId. Easy to implement, but will have to wait for later as ideally we create more sophisticated caching system\n            let exporter = yield this.getExporter(workspaceId, exporterId, designSystemVersion);\n            let propertyValues = yield this.getExporterConfigurationPropertyUserValues(designSystemId, exporterId, designSystemVersion);\n            // Update properties with the downloaded data\n            for (let property of exporter.contributes.configuration) {\n                for (let settings of propertyValues) {\n                    if (property.key === settings.key) {\n                        property.updateValue(settings.value);\n                    }\n                }\n            }\n            // Retrieve the data\n            return exporter.contributes.configuration;\n        });\n    }\n    currentExporterBlockVariants(workspaceId, designSystemId, exporterId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: This call is currently not cached as we need multi-cache because of exporterId. Easy to implement, but will have to wait for later as ideally we create more sophisticated caching system\n            let exporter = yield this.getExporter(workspaceId, exporterId, designSystemVersion);\n            let variants = exporter.contributes.blockVariants;\n            return variants;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Documentation\n    /** Prepare design configuration, merging it with pulsar data */\n    updateDocumentationData(designSystem, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core documentation settings\n            this.documentation = yield this.getDocumentation(designSystem, designSystemVersion);\n            if (this.bridge.cache) {\n                this.documentationSynced = true;\n            }\n        });\n    }\n    getDocumentation(designSystem, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download design system documentation from the API\n            // Get remote data\n            const endpoint = `documentation`;\n            let remoteDocumentation = (yield this.bridge.getDSMDataFromEndpoint(designSystem.id, designSystemVersion.id, endpoint)).documentation;\n            let registry = yield this.getNPMRegistry(designSystem, designSystemVersion);\n            // Extend with information coming from pulsar\n            let configuration = new SDKDocumentation_1.Documentation(designSystemVersion, designSystem, remoteDocumentation, registry);\n            return configuration;\n        });\n    }\n    getNPMRegistry(designSystem, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // Download NPM registry from the API, if exists\n                const endpoint = `workspaces/${designSystem.workspaceId}/npm-registry`;\n                let registry = (yield this.bridge.getDSMGenericDataFromEndpoint(endpoint))\n                    .npmRegistrySettings;\n                if (registry) {\n                    return new SDKWorkspaceNPMRegistry_1.WorkspaceNPMRegistry(registry);\n                }\n                else {\n                    return null;\n                }\n            }\n            catch (error) {\n                return null;\n            }\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Exporter custom blocks\n    /** Download all custom blocks provided by the currently active exporter */\n    updateExporterCustomBlocksData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system token data\n            this.exporterCustomBlocks = yield this.getExporterCustomBlocks(designSystemId, designSystemVersion);\n            if (this.bridge.cache) {\n                this.exporterCustomBlocksSynced = true;\n            }\n        });\n    }\n    getExporterCustomBlocks(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw token data and resolve them\n            let rawBlocks = yield this.getExporterCustomBlockData(designSystemId, designSystemVersion);\n            let resolvedBlocks = yield this.resolveExporterCustomBlockData(rawBlocks);\n            return resolvedBlocks;\n        });\n    }\n    getExporterCustomBlockData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token data from the design system endpoint. This downloads tokens of all types\n            const endpoint = 'documentation/custom-blocks';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).customBlocks;\n            return result;\n        });\n    }\n    resolveExporterCustomBlockData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return data.map(b => new SDKExporterCustomBlock_1.ExporterCustomBlock(b));\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Exporter custom properties / values\n    getExporterConfigurationPropertyUserValues(designSystemId, exporterId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw token data and resolve them\n            let userValues = yield this.getExporterConfigurationPropertiesUserValuesData(designSystemId, exporterId, designSystemVersion);\n            // let resolvedProperties = await this.resolveExporterConfigurationPropertiesUserValuesData(rawProperties) // no resolution needed\n            return userValues;\n        });\n    }\n    getExporterConfigurationPropertiesUserValuesData(designSystemId, exporterId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token data from the design system endpoint. This downloads tokens of all types\n            const endpoint = `design-systems/${designSystemId}/exporter-properties/${exporterId}`;\n            let result = (yield this.bridge.getDSMGenericDataFromEndpoint(endpoint)).items;\n            return result;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Exporter\n    getExporter(workspaceId, exporterId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw token data and resolve them\n            let rawExporter = yield this.getExporterData(workspaceId, exporterId);\n            let resolvedExporter = yield this.resolveExporterData(rawExporter);\n            return resolvedExporter;\n        });\n    }\n    getExporterData(workspaceId, exporterId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token data from the design system endpoint. This downloads tokens of all types\n            const endpoint = `codegen/workspaces/${workspaceId}/exporters/${exporterId}`;\n            let result = (yield this.bridge.getDSMGenericDataFromEndpoint(endpoint)).exporter;\n            return result;\n        });\n    }\n    resolveExporterData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new SDKExporter_1.Exporter(data);\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---e\n    // MARK: - Tokens\n    /** Prepare design system data for use for the entire design system, downloading and resolving all tokens */\n    updateTokenData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system token data\n            this.tokens = yield this.getTokens(designSystemId, designSystemVersion);\n            if (this.bridge.cache) {\n                this.tokensSynced = true;\n            }\n        });\n    }\n    getTokens(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get token groups\n            let tokenGroups = yield this.getTokenGroups(designSystemId, designSystemVersion);\n            // Download the raw token data and resolve them\n            let rawData = yield this.getRawTokenData(designSystemId, designSystemVersion);\n            let rawProperties = yield this.getRawElementPropertyData(designSystemId, designSystemVersion);\n            let rawValues = yield this.getRawElementPropertyValuesData(designSystemId, designSystemVersion);\n            let resolvedTokens = yield this.resolveTokenData(rawData, rawProperties, rawValues, tokenGroups, designSystemVersion);\n            return resolvedTokens;\n        });\n    }\n    getRawTokenData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token data from the design system endpoint. This downloads tokens of all types\n            const endpoint = 'tokens';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).tokens;\n            return result;\n        });\n    }\n    resolveTokenData(data, properties, values, tokenGroups, version) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = new SDKTokenResolver_1.TokenResolver(version);\n            let result = resolver.resolveTokenData(data, tokenGroups, properties, values);\n            return result;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Groups\n    /** Prepare design system data for use for the entire design system, downloading and resolving all groups */\n    updateTokenGroupData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system token data\n            this.tokenGroups = yield this.getTokenGroups(designSystemId, designSystemVersion);\n            if (this.bridge.cache) {\n                this.tokenGroupsSynced = true;\n            }\n        });\n    }\n    getTokenGroups(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw token data and resolve them\n            let rawData = yield this.getRawTokenGroupData(designSystemId, designSystemVersion);\n            let resolvedGroups = yield this.resolveTokenGroupData(rawData);\n            return resolvedGroups;\n        });\n    }\n    getRawTokenGroupData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token group data from the design system endpoint\n            const endpoint = 'token-groups';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).groups;\n            return result;\n        });\n    }\n    resolveTokenGroupData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = new SDKTokenGroupResolver_1.TokenGroupResolver();\n            let result = yield resolver.resolveGroupData(data);\n            return result;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---e\n    // MARK: - Tokens\n    /** Prepare design system data for use for the entire design system, downloading and resolving all tokens */\n    updateThemesData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system token data\n            this.themes = yield this.getThemes(designSystemId, designSystemVersion);\n            if (this.bridge.cache) {\n                this.themesSynced = true;\n            }\n        });\n    }\n    getThemes(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get token groups\n            let baseTokens = yield this.getTokens(designSystemId, designSystemVersion);\n            let baseTokenGroups = yield this.getTokenGroups(designSystemId, designSystemVersion);\n            // Download the raw token data and resolve them\n            let rawData = yield this.getRawThemeData(designSystemId, designSystemVersion);\n            let resolvedThemes = yield this.resolveThemeData(rawData, baseTokens, baseTokenGroups, designSystemVersion);\n            return resolvedThemes;\n        });\n    }\n    getRawThemeData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token data from the design system endpoint. This downloads tokens of all types\n            const endpoint = 'themes';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).themes;\n            return result;\n        });\n    }\n    resolveThemeData(data, tokens, tokenGroups, version) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolvedThemes = new Array();\n            for (let themeModel of data) {\n                // Note that each resolution must be done individually with new resolver to clean its state\n                // Some possible optimizations can eventually be possible (fasters hashes with more themes), but\n                // because we considering that there will only be very few themes at once, this is not needed now\n                let resolver = new SDKTokenResolver_1.TokenResolver(version);\n                let result = resolver.resolveThemeData(themeModel, tokens, tokenGroups);\n                resolvedThemes.push(result);\n            }\n            return resolvedThemes;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Components\n    /** Prepare design system data for use for the entire design system, downloading and resolving all components - and indirectly, assets as well */\n    updateComponentData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system component data\n            let result = yield this.getComponents(designSystemId, designSystemVersion);\n            this.components = result;\n            if (this.bridge.cache) {\n                this.componentsSynced = true;\n            }\n        });\n    }\n    getComponents(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw component data, including their properties, and resolve them\n            let rawComponents = yield this.getRawComponentData(designSystemId, designSystemVersion);\n            let rawProperties = yield this.getRawElementPropertyData(designSystemId, designSystemVersion);\n            let rawValues = yield this.getRawElementPropertyValuesData(designSystemId, designSystemVersion);\n            let resolvedComponents = yield this.resolveComponentData(rawComponents, rawProperties, rawValues, designSystemVersion);\n            return resolvedComponents;\n        });\n    }\n    getRawComponentData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download component data from the design system endpoint. This downloads components of all types\n            const endpoint = 'design-system-components';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).designSystemComponents;\n            return result;\n        });\n    }\n    getRawElementPropertyData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download component data from the design system endpoint. This downloads components of all types\n            const endpoint = 'element-properties/definitions';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).definitions;\n            return result;\n        });\n    }\n    getRawElementPropertyValuesData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download component data from the design system endpoint. This downloads components of all types\n            const endpoint = 'element-properties/values';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).values;\n            return result;\n        });\n    }\n    resolveComponentData(components, properties, values, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = new SDKComponentResolver_1.ComponentResolver();\n            let result = yield resolver.resolveComponentData(components, properties, values);\n            return result;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Assets & Design Components\n    /** Prepare design system data for use for the entire design system, downloading and resolving all design components - and indirectly, assets as well */\n    updateDesignComponentAndAssetData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system designComponent data without frame definitions\n            let result = yield this.getDesignComponentsAndAssets(designSystemId, designSystemVersion);\n            this.designComponents = result.designComponents;\n            this.assets = result.assets;\n            if (this.bridge.cache) {\n                this.designComponentAssetSynced = true;\n            }\n        });\n    }\n    getDesignComponentsAndAssets(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw token data and resolve them\n            let rawData = yield this.getRawDesignComponentAndAssetData(designSystemId, designSystemVersion);\n            let resolvedDesignComponentsAndAssets = yield this.resolveDesignComponentAndAssetData(rawData, designSystemVersion);\n            return resolvedDesignComponentsAndAssets;\n        });\n    }\n    getRawDesignComponentAndAssetData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token data from the design system endpoint. This downloads tokens of all types\n            const endpoint = 'components';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).components;\n            return result;\n        });\n    }\n    resolveDesignComponentAndAssetData(data, version) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // For now, transform all designComponents into designComponents\n            let designComponents = [];\n            let ds = version.designSystem;\n            for (let designComponent of data) {\n                designComponents.push(new SDKDesignComponent_1.DesignComponent(designComponent, ds.sources));\n            }\n            // For duplicates\n            let assetNames = new Map();\n            for (let item of data) {\n                if (item.exportProperties.isAsset) {\n                    assetNames.set(item.meta.name.toLowerCase(), 0);\n                }\n            }\n            // Transform only exportable designComponents into assets\n            let assets = [];\n            for (let asset of data) {\n                let lowercasedName = asset.meta.name.toLowerCase();\n                if (asset.exportProperties.isAsset) {\n                    assets.push(new SDKAsset_1.Asset(asset, assetNames.get(lowercasedName)));\n                    // Increase number of duplicates\n                    assetNames.set(lowercasedName, assetNames.get(lowercasedName) + 1);\n                }\n            }\n            return {\n                designComponents: designComponents,\n                assets: assets\n            };\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - DesignComponent & Assets Groups\n    /** Prepare design system data for use for the entire design system, downloading and resolving all groups */\n    updateDesignComponentAndAssetGroupData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design system token data\n            let result = yield this.getDesignComponentAndAssetGroups(designSystemId, designSystemVersion, this.designComponents, this.assets);\n            this.designComponentGroups = result.designComponentGroups;\n            this.assetGroups = result.assetGroups;\n            if (this.bridge.cache) {\n                this.designComponentAssetGroupsSynced = true;\n            }\n        });\n    }\n    getDesignComponentAndAssetGroups(designSystemId, designSystemVersion, designComponents, assets) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw token data and resolve them\n            let rawData = yield this.getRawDesignComponentAndAssetGroupData(designSystemId, designSystemVersion);\n            let resolvedDesignComponentGroups = yield this.resolveDesignComponentGroupData(rawData, designComponents);\n            let resolvedAssetGroups = yield this.resolveAssetGroupData(rawData, assets);\n            return {\n                designComponentGroups: resolvedDesignComponentGroups,\n                assetGroups: resolvedAssetGroups\n            };\n        });\n    }\n    getRawDesignComponentAndAssetGroupData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download token group data from the design system endpoint\n            const endpoint = 'component-groups';\n            let result = (yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpoint)).groups;\n            return result;\n        });\n    }\n    resolveDesignComponentGroupData(data, designComponents) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = new SDKDesignComponentGroupResolver_1.DesignComponentGroupResolver(designComponents);\n            let result = yield resolver.resolveGroupData(data);\n            return result;\n        });\n    }\n    resolveAssetGroupData(data, assets) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = new SDKAssetGroupResolver_1.AssetGroupResolver(assets);\n            let result = yield resolver.resolveGroupData(data);\n            return result;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Documentation Items\n    updateDocumentationItemData(designSystemId, designSystemVersion, blocks, configuration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download core design documentation item data\n            this.documentationItems = yield this.getDocumentationItems(designSystemId, designSystemVersion, blocks, configuration);\n            if (this.bridge.cache) {\n                this.documentationItemsSynced = true;\n            }\n        });\n    }\n    getDocumentationItems(designSystemId, designSystemVersion, blocks, configuration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Download the raw documentation data and resolve them\n            let rawData = yield this.getRawDocumentationItemData(designSystemId, designSystemVersion);\n            let workspaceHandle = yield this.currentWorkspaceHandle(designSystemVersion.designSystem.workspaceId);\n            const deployedVersionUrl = yield this.currentDeployedDocumentationUrl(designSystemVersion.designSystem.workspaceId, designSystemVersion.id);\n            let resolvedItems = yield this.resolveDocumentationItemData(rawData.pageDetails, rawData.groupDetails, blocks, configuration, designSystemVersion, workspaceHandle, deployedVersionUrl);\n            return resolvedItems;\n        });\n    }\n    getRawDocumentationItemData(designSystemId, designSystemVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Request documentation content\n            const endpointDetails = 'documentation/all';\n            let detailResult = yield this.bridge.getDSMDataFromEndpoint(designSystemId, designSystemVersion.id, endpointDetails);\n            return {\n                pageDetails: detailResult.pages,\n                groupDetails: detailResult.groups\n            };\n        });\n    }\n    resolveDocumentationItemData(pageDetails, groupDetails, blocks, configuration, version, workspaceHandle, docsUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = new SDKDocumentationItemResolver_1.DocumentationItemResolver(blocks, configuration, version, workspaceHandle, docsUrl);\n            let result = yield resolver.resolveItemData(pageDetails, groupDetails);\n            return result;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    writeTokenData(designSystemId, designSystemVersion, tokens, groups, deleteTokens) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const endpoint = 'bff/import';\n            const payload = {\n                tokens: tokens,\n                tokenGroups: groups,\n                bulkDelete: {\n                    tokenIds: deleteTokens.map(t => t.versionedId)\n                }\n            };\n            let result = yield this.bridge.postDSMDataToEndpoint(designSystemId, designSystemVersion.id, endpoint, payload);\n            return result;\n        });\n    }\n    writeTokenThemeData(designSystemId, designSystemVersion, theme) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const endpoint = `themes/${theme.id}`;\n            const payload = theme;\n            let result = yield this.bridge.postDSMDataToEndpoint(designSystemId, designSystemVersion.id, endpoint, payload, true);\n            return result.theme;\n        });\n    }\n}\nexports.DataCore = DataCore;\n","\"use strict\";\n//\n//  SDKSupernovaError.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SupernovaError = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n/** Supernova SDK-specific error type */\nvar SupernovaErrorType;\n(function (SupernovaErrorType) {\n    /** Thrown when request was performed but server responded with error */\n    SupernovaErrorType[\"responseError\"] = \"response\";\n    /** Thrown when request failed to perform, for example when network is unreachable */\n    SupernovaErrorType[\"requestError\"] = \"request\";\n    /** Thrown when request was performed successfully, but SDK data validation or processing failed */\n    SupernovaErrorType[\"computeError\"] = \"compute\";\n    /** Thrown when data processing failed */\n    SupernovaErrorType[\"processingError\"] = \"processing\";\n})(SupernovaErrorType || (SupernovaErrorType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\n/** Supernova SDK-specific error. Contains useful information for debugging problems, depending where the problem originated from */\nclass SupernovaError extends Error {\n    constructor(message, type) {\n        super(message);\n        this.status = null;\n        this.label = null;\n        this.type = type;\n    }\n    static fromAxiosResponseError(response) {\n        let error = new SupernovaError(response.data.message, SupernovaErrorType.responseError);\n        error.status = response.data.code;\n        error.label = response.data.label;\n        // SN server responded with error so we can provide details\n        return error;\n    }\n    static fromAxiosRequestError(response) {\n        // Request was made but there was no response, so we will notify user that server was unreachable\n        let error = new SupernovaError(\"Data Store Unreachable. This is likely client-side problem (no internet access, blocked by proxy or similar)\", SupernovaErrorType.requestError);\n        error.label = \"DATA_STORE_UNREACHABLE\";\n        return error;\n    }\n    static fromSDKError(message) {\n        // Error was thrown outside of the network, so reason must be provided\n        return new SupernovaError(message, SupernovaErrorType.computeError);\n    }\n    static fromProcessingError(message) {\n        // Error was thrown in the processing layer - tooling etc.\n        return new SupernovaError(message, SupernovaErrorType.processingError);\n    }\n}\nexports.SupernovaError = SupernovaError;\n","\"use strict\";\n//\n//  SDKAssetGroupResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssetGroupResolver = void 0;\nconst SDKAssetGroup_1 = require(\"../../model/groups/SDKAssetGroup\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass AssetGroupResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(assets) {\n        this.assets = assets;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    resolveGroupData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var hashedGroups = new Map();\n            var resolvedGroups = new Map();\n            var allowedAssetIds = this.assets.map(a => a.id);\n            // Convert raw groups to resolved groups, not caring about the references just yet\n            for (let rawGroup of data) {\n                let group = new SDKAssetGroup_1.AssetGroup(rawGroup);\n                hashedGroups.set(rawGroup.persistentId, rawGroup);\n                resolvedGroups.set(rawGroup.persistentId, group);\n            }\n            // Build the reference tree and list of assets\n            for (let rawGroup of data) {\n                let filteredAssetIds = new Array();\n                let referencedGroup = resolvedGroups.get(rawGroup.persistentId);\n                for (let id of rawGroup.childrenIds) {\n                    // Find if reference is group - if it is not, it is a asset or designComponent\n                    let childGroup = resolvedGroups.get(id);\n                    if (childGroup) {\n                        referencedGroup.addChild(childGroup);\n                    }\n                    else {\n                        // Only allow assets, and filter out designComponents\n                        if (allowedAssetIds.includes(id)) {\n                            filteredAssetIds.push(id);\n                        }\n                    }\n                }\n                referencedGroup.assetIds = filteredAssetIds;\n            }\n            // Retrieve resolved groups\n            let groups = Array.from(resolvedGroups.values());\n            this.recomputePaths(groups);\n            this.recomputeParents(groups);\n            return this.reorderGroupsByRoots(groups);\n        });\n    }\n    recomputePaths(groups) {\n        // Find roots, and compute the segments down from the roots\n        for (let group of groups) {\n            if (group.isRoot) {\n                this.recomputePathsFromRoot(group, []);\n            }\n        }\n        // Drop first item because we don't want the core root category to be there\n        for (let group of groups) {\n            group.path.shift();\n        }\n    }\n    recomputePathsFromRoot(root, segments) {\n        // Recursively go down the tree(s) and add segments to each\n        let extendedPath = segments.concat(root.name);\n        for (let group of root.subgroups) {\n            group.path = extendedPath.concat();\n            this.recomputePathsFromRoot(group, extendedPath);\n        }\n    }\n    reorderGroupsByRoots(groups) {\n        let sortedGroups = new Array();\n        // Find the root groups, which will be initial sorting points\n        let roots = groups.filter(g => g.isRoot);\n        for (const root of roots) {\n            // For each group, traverse and add proper order\n            sortedGroups = sortedGroups.concat(this.traverseSortGroup(root));\n        }\n        return sortedGroups;\n    }\n    traverseSortGroup(group) {\n        let output = new Array();\n        // Iterated group always first\n        output.push(group);\n        // Add sorted groups to the array\n        let sortedGroups = group.subgroups.sort((g1, g2) => group.childrenIds.indexOf(g1.id) - group.childrenIds.indexOf(g2.id));\n        for (let subgroup of sortedGroups) {\n            output = output.concat(this.traverseSortGroup(subgroup));\n        }\n        return output;\n    }\n    recomputeParents(groups) {\n        // Find roots, and compute the references down the chain. Root groups don't have parents\n        for (let group of groups) {\n            if (group.isRoot) {\n                this.recomputeParentsFromRoot(group);\n                group.parent = null;\n            }\n        }\n    }\n    recomputeParentsFromRoot(rootGroup) {\n        for (let group of rootGroup.subgroups) {\n            group.setParent(rootGroup);\n            this.recomputeParentsFromRoot(group);\n        }\n    }\n}\nexports.AssetGroupResolver = AssetGroupResolver;\n","\"use strict\";\n//\n//  SDKComponentResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComponentResolver = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKComponent_1 = require(\"../../model/components/SDKComponent\");\nconst SDKElementProperty_1 = require(\"../../model/elements/SDKElementProperty\");\nconst SDKElementPropertyValue_1 = require(\"../../model/elements/values/SDKElementPropertyValue\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass ComponentResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Configuration\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() { }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    resolveComponentData(components, properties, values) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolvedProperties = properties.map(p => new SDKElementProperty_1.ElementProperty(p)).filter(p => p.targetElementType === SDKElementProperty_1.ElementPropertyTargetElementType.component);\n            let resolvedValues = values.map(v => new SDKElementPropertyValue_1.ElementPropertyValue(v));\n            let resolvedComponents = components.map(c => new SDKComponent_1.Component(c, resolvedProperties, resolvedValues));\n            return resolvedComponents;\n        });\n    }\n}\nexports.ComponentResolver = ComponentResolver;\n","\"use strict\";\n//\n//  SDKDesignComponentGroupResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DesignComponentGroupResolver = void 0;\nconst SDKDesignComponentGroup_1 = require(\"../../model/groups/SDKDesignComponentGroup\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass DesignComponentGroupResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(designComponents) {\n        this.designComponents = designComponents;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    resolveGroupData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var hashedGroups = new Map();\n            var resolvedGroups = new Map();\n            // Convert raw groups to resolved groups, not caring about the references just yet\n            for (let rawGroup of data) {\n                let group = new SDKDesignComponentGroup_1.DesignComponentGroup(rawGroup);\n                hashedGroups.set(rawGroup.persistentId, rawGroup);\n                resolvedGroups.set(rawGroup.persistentId, group);\n            }\n            // Build the reference tree and list of designComponents\n            for (let rawGroup of data) {\n                let filteredDesignComponentIds = new Array();\n                let referencedGroup = resolvedGroups.get(rawGroup.persistentId);\n                for (let id of rawGroup.childrenIds) {\n                    // Find if reference is group - if it is not, it is a designComponent\n                    let childGroup = resolvedGroups.get(id);\n                    if (childGroup) {\n                        referencedGroup.addChild(childGroup);\n                    }\n                    else {\n                        // Note: All designComponents are valid. In case of asset tree however, only some are valid\n                        // Here, we don't filter out anything\n                        filteredDesignComponentIds.push(id);\n                    }\n                }\n                referencedGroup.componentIds = filteredDesignComponentIds;\n            }\n            // Retrieve resolved groups\n            let groups = Array.from(resolvedGroups.values());\n            this.recomputePaths(groups);\n            this.recomputeParents(groups);\n            return this.reorderGroupsByRoots(groups);\n        });\n    }\n    recomputePaths(groups) {\n        // Find roots, and compute the segments down from the roots\n        for (let group of groups) {\n            if (group.isRoot) {\n                this.recomputePathsFromRoot(group, []);\n            }\n        }\n        // Drop first item because we don't want the core root category to be there\n        for (let group of groups) {\n            group.path.shift();\n        }\n    }\n    recomputePathsFromRoot(root, segments) {\n        // Recursively go down the tree(s) and add segments to each\n        let extendedPath = segments.concat(root.name);\n        for (let group of root.subgroups) {\n            group.path = extendedPath.concat();\n            this.recomputePathsFromRoot(group, extendedPath);\n        }\n    }\n    reorderGroupsByRoots(groups) {\n        let sortedGroups = new Array();\n        // Find the root groups, which will be initial sorting points\n        let roots = groups.filter(g => g.isRoot);\n        for (const root of roots) {\n            // For each group, traverse and add proper order\n            sortedGroups = sortedGroups.concat(this.traverseSortGroup(root));\n        }\n        return sortedGroups;\n    }\n    traverseSortGroup(group) {\n        let output = new Array();\n        // Iterated group always first\n        output.push(group);\n        // Add sorted groups to the array\n        let sortedGroups = group.subgroups.sort((g1, g2) => group.childrenIds.indexOf(g1.id) - group.childrenIds.indexOf(g2.id));\n        for (let subgroup of sortedGroups) {\n            output = output.concat(this.traverseSortGroup(subgroup));\n        }\n        return output;\n    }\n    recomputeParents(groups) {\n        // Find roots, and compute the references down the chain. Root groups don't have parents\n        for (let group of groups) {\n            if (group.isRoot) {\n                this.recomputeParentsFromRoot(group);\n                group.parent = null;\n            }\n        }\n    }\n    recomputeParentsFromRoot(rootGroup) {\n        for (let group of rootGroup.subgroups) {\n            group.setParent(rootGroup);\n            this.recomputeParentsFromRoot(group);\n        }\n    }\n}\nexports.DesignComponentGroupResolver = DesignComponentGroupResolver;\n","\"use strict\";\n//\n//  SDKDocumentationItemResolver.ts\n//  Supernova SDK \n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationItemResolver = void 0;\nconst SDKDocumentationGroup_1 = require(\"../../model/documentation/SDKDocumentationGroup\");\nconst SDKDocumentationPage_1 = require(\"../../model/documentation/SDKDocumentationPage\");\nconst SDKDocumentationItemType_1 = require(\"../../model/enums/SDKDocumentationItemType\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass DocumentationItemResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(customBlocks, configuration, version, workspaceHandle, docsUrl) {\n        // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n        // MARK: - Properties\n        this.hashedItems = new Map();\n        this.resolvedItems = new Map();\n        this.customBlocks = customBlocks;\n        this.configuration = configuration;\n        this.version = version;\n        this.workspaceHandle = workspaceHandle;\n        this.designSystem = version.designSystem;\n        this.docsUrl = docsUrl;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    resolveItemData(pageDetails, groupDetails) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Hash groups for faster lookup + find root group. Also fix the missing type attribute\n            let rootGroupModel;\n            for (let item of groupDetails) {\n                item.type = SDKDocumentationItemType_1.DocumentationItemType.group;\n                this.hashedItems.set(item.persistentId, item);\n                if (item.isRoot) {\n                    rootGroupModel = item;\n                }\n            }\n            if (!rootGroupModel) {\n                throw new Error(`Incosistent model detected, missing root group`);\n            }\n            // Hash pages for faster lookup. Also fix the missing type attribute\n            for (let page of pageDetails) {\n                page.type = SDKDocumentationItemType_1.DocumentationItemType.page;\n                this.hashedItems.set(page.persistentId, page);\n            }\n            // Create structured chain of objects\n            let rootGroup = new SDKDocumentationGroup_1.DocumentationGroup(rootGroupModel);\n            yield this.resolveItemsForGroup(rootGroup);\n            // Retrieve created objects\n            let items = Array.from(this.resolvedItems.values());\n            // Compute different paths of objects\n            for (const item of items) {\n                if (item instanceof SDKDocumentationPage_1.DocumentationPage) {\n                    const deployed = this.deployedUrl(item);\n                    const editor = this.editorUrl(item);\n                    const relative = this.pageUrl(item);\n                    item.internalOverridePaths(deployed, editor, relative);\n                }\n                else if (item instanceof SDKDocumentationGroup_1.DocumentationGroup) {\n                    const relative = this.pageUrl(item);\n                    let deployed = null;\n                    const page = this.firstPageFromTop(item);\n                    if (page) {\n                        deployed = this.deployedUrl(page);\n                    }\n                    item.internalOverridePaths(relative, deployed);\n                }\n            }\n            return items;\n        });\n    }\n    resolveItemsForGroup(group) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Store items\n            this.resolvedItems.set(group.id, group);\n            // Resolve children of one group\n            for (let childId of group.childrenIds) {\n                // Find model from the loaded items\n                let childModel = this.hashedItems.get(childId);\n                if (!childModel) {\n                    throw new Error(`Inconsistent group / page model detected in one of the documentation items, missing ${childId}`);\n                }\n                if (childModel.type === SDKDocumentationItemType_1.DocumentationItemType.group) {\n                    // If it is a group, then create a group\n                    let subgroup = new SDKDocumentationGroup_1.DocumentationGroup(childModel);\n                    subgroup.parent = group;\n                    group.addChild(subgroup);\n                    yield this.resolveItemsForGroup(subgroup);\n                }\n                else {\n                    // Otherwise, create a page using the data we obtained from the content call\n                    let pageId = childModel.persistentId;\n                    let pageModel = this.hashedItems.get(pageId);\n                    let page = new SDKDocumentationPage_1.DocumentationPage(pageModel, this.customBlocks, this.configuration);\n                    // Resolve block chains\n                    this.resolveBlockChains(page);\n                    // Link parents properly\n                    page.parent = group;\n                    page.type = SDKDocumentationItemType_1.DocumentationItemType.page;\n                    group.addChild(page);\n                    // Store items\n                    this.resolvedItems.set(page.id, page);\n                }\n            }\n        });\n    }\n    resolveBlockChains(page) {\n        // Resolve initial block group\n        this.resolveBlockGroup(page.blocks);\n    }\n    resolveBlockGroup(blocks) {\n        // Ignore empty groups\n        if (blocks.length === 0) {\n            return;\n        }\n        if (blocks.length === 1 && blocks[0] === undefined) {\n            // Note in some really rare cases, blocks[0] can be undefined. We should not be resolving undefined groups, rather ignoring it. This bug points to issue somewhere else however.\n            throw new Error(\"The fuck?\");\n        }\n        let blockType = null;\n        let previousBlock = null;\n        for (let block of blocks) {\n            // For previous block, check if it ended\n            if (previousBlock) {\n                previousBlock.endsTypeChain = previousBlock.type !== block.type;\n            }\n            // If previous block is of different type (or initial), it beings type chain, otherwise it follows previous one\n            block.beginsTypeChain = block.type !== blockType;\n            blockType = block.type;\n            previousBlock = block;\n            // Also solve for all subblocks who can form independent chains\n            this.resolveBlockGroup(block.children);\n        }\n        // Final block always ends chain\n        previousBlock.endsTypeChain = true;\n    }\n    /** Create URL pointing to the deployed documentation page hosted on Supernova side. Will be empty if there was nothing deployed, or if not hosted at Supernova */\n    deployedUrl(page) {\n        if (this.docsUrl) {\n            const pageUrl = this.pageUrl(page);\n            if (pageUrl) {\n                return this.docsUrl + \"/\" + pageUrl;\n            }\n        }\n        return null;\n    }\n    /** Create editor URL pointing to editable page. Since Supernova doesn't link to pages directly yet, this will for now open the editor */\n    editorUrl(item) {\n        return `https://cloud.supernova.io/ws/${this.workspaceHandle}/ds/${this.designSystem.id}-${this.slugify(this.designSystem.name)}/${this.version.id}/documentation/editor`;\n    }\n    /** Create page URL or group URL pointing to the first contained page */\n    pageUrl(object) {\n        var _a;\n        let page = null;\n        if (object.type === \"Page\") {\n            page = object;\n        }\n        else {\n            page = this.firstPageFromTop(object);\n        }\n        if (!page) {\n            return \"\";\n        }\n        let pageSlug = (_a = page.userSlug) !== null && _a !== void 0 ? _a : page.slug;\n        let subpaths = [];\n        // Construct group path segments\n        let parent = page.parent;\n        while (parent) {\n            subpaths.push(this.slugify(parent.title));\n            parent = parent.parent;\n        }\n        // Remove last segment added, because we don't care about root group\n        subpaths.pop();\n        // Retrieve url-safe path constructed as [host][group-slugs][path-slug][.html]\n        let path = [...subpaths.reverse(), pageSlug].join(\"/\") + \".html\";\n        return path;\n    }\n    /** Find first showable page from the top of the provided root */\n    firstPageFromTop(documentationRoot) {\n        for (let child of documentationRoot.children) {\n            if (child.type === \"Page\") {\n                return child;\n            }\n            else {\n                let possiblePage = this.firstPageFromTop(child);\n                if (possiblePage) {\n                    return possiblePage;\n                }\n            }\n        }\n        return null;\n    }\n    /** Slugify text to be usable as URL */\n    slugify(str) {\n        if (!str) {\n            return \"\";\n        }\n        // Thanks to https://gist.github.com/codeguy/6684588\n        str = str.replace(/^\\s+|\\s+$/g, \"\");\n        str = str.toLowerCase();\n        // remove accents, swap ñ for n, etc\n        var from = \"àáãäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n        var to = \"aaaaaeeeeiiiioooouuuunc------\";\n        for (var i = 0, l = from.length; i < l; i++) {\n            str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i));\n        }\n        str = str\n            .replace(/[^a-z0-9 -]/g, \"\") // remove invalid chars\n            .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n            .replace(/-+/g, \"-\"); // collapse dashes\n        return str;\n    }\n}\nexports.DocumentationItemResolver = DocumentationItemResolver;\n","\"use strict\";\n//\n//  SDKTokenGroupResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenGroupResolver = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKTokenGroup_1 = require(\"../../model/groups/SDKTokenGroup\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass TokenGroupResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Configuration\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() { }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    resolveGroupData(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var hashedGroups = new Map();\n            var resolvedGroups = new Map();\n            // Convert raw groups to resolved groups, not caring about the references just yet\n            for (let rawGroup of data) {\n                let group = new SDKTokenGroup_1.TokenGroup(rawGroup);\n                hashedGroups.set(rawGroup.persistentId, rawGroup);\n                resolvedGroups.set(rawGroup.persistentId, group);\n            }\n            // Build the reference tree and list of tokens\n            for (let rawGroup of data) {\n                let filteredTokenIds = new Array();\n                let referencedGroup = resolvedGroups.get(rawGroup.persistentId);\n                for (let id of rawGroup.childrenIds) {\n                    // Find if reference is group - if it is not, it is a token\n                    let childGroup = resolvedGroups.get(id);\n                    if (childGroup) {\n                        referencedGroup.addChild(childGroup);\n                    }\n                    else {\n                        filteredTokenIds.push(id);\n                    }\n                }\n                referencedGroup.tokenIds = filteredTokenIds;\n            }\n            // Retrieve resolved groups\n            let groups = Array.from(resolvedGroups.values());\n            this.recomputePaths(groups);\n            this.recomputeParents(groups);\n            return this.reorderGroupsByRoots(groups);\n        });\n    }\n    recomputePaths(groups) {\n        // Find roots, and compute the segments down from the roots\n        for (let group of groups) {\n            if (group.isRoot) {\n                this.recomputePathsFromRoot(group, []);\n            }\n        }\n        // Drop first item because we don't want the core root category to be there\n        for (let group of groups) {\n            group.path.shift();\n        }\n    }\n    recomputePathsFromRoot(root, segments) {\n        // Recursively go down the tree(s) and add segments to each\n        let extendedPath = segments.concat(root.name);\n        for (let group of root.subgroups) {\n            group.path = extendedPath.concat();\n            this.recomputePathsFromRoot(group, extendedPath);\n        }\n    }\n    reorderGroupsByRoots(groups) {\n        let sortedGroups = new Array();\n        // Find the root groups, which will be initial sorting points\n        let roots = groups.filter(g => g.isRoot);\n        for (const root of roots) {\n            // For each group, traverse and add proper order\n            sortedGroups = sortedGroups.concat(this.traverseSortGroup(root));\n        }\n        return sortedGroups;\n    }\n    traverseSortGroup(group) {\n        let output = new Array();\n        // Iterated group always first\n        output.push(group);\n        // Add sorted groups to the array\n        let sortedGroups = group.subgroups.sort((g1, g2) => group.childrenIds.indexOf(g1.id) - group.childrenIds.indexOf(g2.id));\n        for (let subgroup of sortedGroups) {\n            output = output.concat(this.traverseSortGroup(subgroup));\n        }\n        return output;\n    }\n    recomputeParents(groups) {\n        // Find roots, and compute the references down the chain. Root groups don't have parents\n        for (let group of groups) {\n            if (group.isRoot) {\n                this.recomputeParentsFromRoot(group);\n                group.parent = null;\n            }\n        }\n    }\n    recomputeParentsFromRoot(rootGroup) {\n        for (let group of rootGroup.subgroups) {\n            group.setParent(rootGroup);\n            this.recomputeParentsFromRoot(group);\n        }\n    }\n}\nexports.TokenGroupResolver = TokenGroupResolver;\n","\"use strict\";\n//\n//  SDKTokenResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenResolver = void 0;\nconst SDKElementProperty_1 = require(\"../../model/elements/SDKElementProperty\");\nconst SDKElementPropertyValue_1 = require(\"../../model/elements/values/SDKElementPropertyValue\");\nconst SDKTokenType_1 = require(\"../../model/enums/SDKTokenType\");\nconst SDKThemeUtilities_1 = require(\"../../model/themes/SDKThemeUtilities\");\nconst SDKTokenTheme_1 = require(\"../../model/themes/SDKTokenTheme\");\nconst SDKBlurToken_1 = require(\"../../model/tokens/SDKBlurToken\");\nconst SDKBorderToken_1 = require(\"../../model/tokens/SDKBorderToken\");\nconst SDKColorToken_1 = require(\"../../model/tokens/SDKColorToken\");\nconst SDKFontToken_1 = require(\"../../model/tokens/SDKFontToken\");\nconst SDKGenericToken_1 = require(\"../../model/tokens/SDKGenericToken\");\nconst SDKGradientToken_1 = require(\"../../model/tokens/SDKGradientToken\");\nconst SDKMeasureToken_1 = require(\"../../model/tokens/SDKMeasureToken\");\nconst SDKRadiusToken_1 = require(\"../../model/tokens/SDKRadiusToken\");\nconst SDKShadowToken_1 = require(\"../../model/tokens/SDKShadowToken\");\nconst SDKTextToken_1 = require(\"../../model/tokens/SDKTextToken\");\nconst SDKTypographyToken_1 = require(\"../../model/tokens/SDKTypographyToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Function Definition\nclass TokenResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version) {\n        // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n        // MARK: - Configuration\n        this.hashedTokens = new Map();\n        this.resolvedTokens = new Map();\n        this.hashedOverrides = new Map();\n        this.hashedReconstructedOverrides = new Map();\n        this.resolvedOverrides = new Map();\n        this.version = version;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Resolution\n    resolveTokenData(data, tokenGroups, properties, values) {\n        let resolvedProperties = properties\n            .map(p => new SDKElementProperty_1.ElementProperty(p))\n            .filter(p => p.targetElementType === SDKElementProperty_1.ElementPropertyTargetElementType.token);\n        let resolvedValues = values.map(v => new SDKElementPropertyValue_1.ElementPropertyValue(v));\n        for (let rawToken of data) {\n            this.hashedTokens.set(rawToken.persistentId, rawToken);\n        }\n        /*\n         * Step 1: Create pure tokens that are not references\n         */\n        for (let rawToken of data) {\n            // Skip creation of all tokens that can have reference\n            if (rawToken.data.aliasTo) {\n                continue;\n            }\n            // Construct raw colors, fonts, texts, radii and measures first\n            if (this.tokenTypeIsPure(rawToken.type)) {\n                let token = this.constructValueToken(rawToken, resolvedProperties, resolvedValues);\n                this.resolvedTokens.set(token.id, token);\n            }\n        }\n        /*\n         * Step 2: Create pure tokens that are references. This will provide us with all possible tokens resolved for mixins later\n         */\n        for (let rawToken of data) {\n            // This time, skip creation of all raw tokens because we already have them\n            if (!rawToken.data.aliasTo) {\n                continue;\n            }\n            // Construct references for pure tokens, if any\n            if (this.tokenTypeIsPure(rawToken.type) && !this.resolvedTokens.get(rawToken.persistentId)) {\n                let token = this.constructReferencedToken(rawToken, resolvedProperties, resolvedValues);\n                this.resolvedTokens.set(token.id, token);\n            }\n        }\n        /*\n         * Step 3: Create mixin tokens that can potentially reference pure resolved tokens\n         */\n        for (let rawToken of data) {\n            // Skip creation of all tokens that can have reference\n            if (rawToken.data.aliasTo) {\n                continue;\n            }\n            // Construct raw typography, gradient, shadow and border colors\n            if (!this.tokenTypeIsPure(rawToken.type)) {\n                let token = this.constructValueToken(rawToken, resolvedProperties, resolvedValues);\n                this.resolvedTokens.set(token.id, token);\n            }\n        }\n        /*\n         * Step 4: Create all remaining tokens, as all pure tokens that can be references and all value tokens with possible mixins were all resolved.\n         */\n        for (let rawToken of data) {\n            // Skip creation of all tokens that are not references\n            if (!rawToken.data.aliasTo) {\n                continue;\n            }\n            if (!this.resolvedTokens.get(rawToken.persistentId)) {\n                // We create the token only when it wasn't created already. In some cases, this can happen when there are multiple reference levels\n                let token = this.constructReferencedToken(rawToken, resolvedProperties, resolvedValues);\n                this.resolvedTokens.set(token.id, token);\n            }\n        }\n        /*\n         * Step 5: Assign parents to the tree\n         */\n        for (let tokenGroup of tokenGroups) {\n            for (let childId of tokenGroup.childrenIds) {\n                let possibleToken = this.resolvedTokens.get(childId);\n                if (possibleToken) {\n                    // If object exists, assign parent to it. Not existing means it is a group\n                    possibleToken.parent = tokenGroup;\n                }\n            }\n        }\n        // Retrieve all properly resolved tokens\n        let tokens = Array.from(this.resolvedTokens.values());\n        // Temporary: Fix shadow, gradient and blur tokens\n        this.fixMultilayerShadowTokens(tokens.filter(t => t.tokenType === SDKTokenType_1.TokenType.shadow));\n        this.fixMultilayerGradientTokens(tokens.filter(t => t.tokenType === SDKTokenType_1.TokenType.gradient));\n        this.fixMultilayerBlurTokens(tokens.filter(t => t.tokenType === SDKTokenType_1.TokenType.blur));\n        // Retrieve all properly resolved tokens\n        return tokens;\n    }\n    tokenTypeIsPure(tokenType) {\n        return (tokenType === SDKTokenType_1.TokenType.color ||\n            tokenType === SDKTokenType_1.TokenType.font ||\n            tokenType === SDKTokenType_1.TokenType.measure ||\n            tokenType === SDKTokenType_1.TokenType.text ||\n            tokenType === SDKTokenType_1.TokenType.generic);\n    }\n    resolveThemeData(data, tokens, tokenGroups) {\n        let themeId = data.id;\n        // Build cache for performance\n        for (let token of tokens) {\n            this.resolvedTokens.set(token.id, token);\n        }\n        /*\n         * Step 0: Clean overrides that don't have any token associated with it\n         */\n        let overrideData = [];\n        for (let override of data.overrides) {\n            let token = this.resolvedTokens.get(override.tokenPersistentId);\n            if (token) {\n                overrideData.push(override);\n            }\n        }\n        for (let override of overrideData) {\n            this.hashedOverrides.set(override.tokenPersistentId, override);\n        }\n        /*\n         * Step 1: Construct containers for tokens that have overrides - but don't assign value to them just yet\n         */\n        for (let override of overrideData) {\n            let token = this.resolvedTokens.get(override.tokenPersistentId);\n            let origin = override.origin;\n            if (!token) {\n                throw new Error(`Unable to resolve token ${override.tokenPersistentId} for theme ${data.id} as base token was not found`);\n            }\n            let replica = this.makeThemedValuelessTokenReplica(token, themeId, origin);\n            this.hashedReconstructedOverrides.set(replica.id, replica);\n        }\n        /*\n         * Step 2: Create map with all tokens, using core tokens and the theme itself so we have all tokens prepared\n         */\n        for (let override of overrideData) {\n            // Skip creation of all tokens that can have reference\n            if (override.data.aliasTo) {\n                continue;\n            }\n            // Construct raw colors, fonts, texts, radii and measures first\n            if (this.tokenTypeIsPure(override.type)) {\n                if (!override.data.value) {\n                    throw new Error(`Override must always have alias or value, but ${override.tokenPersistentId} provided neither (1: raw)`);\n                }\n                // There is no reference to be solved, so we just assume we can create referenced without issues\n                let replica = this.hashedReconstructedOverrides.get(override.tokenPersistentId);\n                switch (override.type) {\n                    case SDKTokenType_1.TokenType.color:\n                        ;\n                        replica.value = this.constructColorValue(override.data.value);\n                        break;\n                    case SDKTokenType_1.TokenType.font:\n                        ;\n                        replica.value = this.constructFontValue(override.data.value);\n                        break;\n                    case SDKTokenType_1.TokenType.measure:\n                        ;\n                        replica.value = this.constructMeasureValue(override.data.value);\n                        break;\n                    case SDKTokenType_1.TokenType.text:\n                        ;\n                        replica.value = this.constructTextLikeTokenValue(override.data.value);\n                        break;\n                    case SDKTokenType_1.TokenType.generic:\n                        ;\n                        replica.value = this.constructTextLikeTokenValue(override.data.value);\n                        break;\n                }\n                this.resolvedOverrides.set(replica.id, replica);\n            }\n        }\n        /*\n         * Step 3: Create values for theme overrides that are raw and pure tokens\n         */\n        for (let override of overrideData) {\n            // This time, skip creation of all raw tokens because we already have them\n            if (!override.data.aliasTo) {\n                continue;\n            }\n            // Construct references for pure tokens, if any\n            if (this.tokenTypeIsPure(override.type) && !this.resolvedOverrides.get(override.tokenPersistentId)) {\n                let resolvedOverride = this.resolvedOverrides.get(override.tokenPersistentId);\n                if (!resolvedOverride) {\n                    // Only construct reference if it wasn't constructed already\n                    let replica = this.constructReferencedThemedToken(override, themeId);\n                    this.resolvedOverrides.set(replica.id, replica);\n                }\n            }\n        }\n        /*\n         * Step 4: Create pure tokens that are references. End of this step will provide us with all possible tokens resolved for mixins later\n         */\n        for (let override of overrideData) {\n            // Skip creation of all tokens that can have reference in this step\n            if (override.data.aliasTo) {\n                continue;\n            }\n            // Construct raw typography, gradient, shadow and border colors\n            if (!this.tokenTypeIsPure(override.type)) {\n                let token = this.constructThemedValueToken(override, themeId);\n                this.resolvedOverrides.set(token.id, token);\n            }\n        }\n        /*\n         * Step 5:Create all remaining tokens, as all pure tokens that can be references and all value tokens with possible mixins were all resolved.\n         */\n        for (let override of overrideData) {\n            // Skip creation of all tokens that are not references\n            if (!override.data.aliasTo) {\n                continue;\n            }\n            if (!this.resolvedOverrides.get(override.tokenPersistentId)) {\n                // We create the token only when it wasn't created already. In some cases, this can happen when there are multiple reference levels\n                let token = this.constructReferencedThemedToken(override, themeId);\n                this.resolvedOverrides.set(token.id, token);\n            }\n        }\n        /*\n         * Step 5: Assign parents to the tree\n         */\n        for (let tokenGroup of tokenGroups) {\n            for (let childId of tokenGroup.childrenIds) {\n                let possibleToken = this.resolvedOverrides.get(childId);\n                if (possibleToken) {\n                    // If object exists, assign parent to it. Not existing means it is a group\n                    possibleToken.parent = tokenGroup;\n                }\n            }\n        }\n        /*\n         * Step 6: Create all remaining tokens, as all pure tokens that can be references and all value tokens with possible mixins were all resolved.\n         */\n        let theme = new SDKTokenTheme_1.TokenTheme(data, this.version);\n        theme.overriddenTokens = Array.from(this.resolvedOverrides.values());\n        return theme;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token replication\n    makeThemedValuelessTokenReplica(token, themeId, origin) {\n        let replica = SDKThemeUtilities_1.ThemeUtilities.replicateTokenAsThemePrefabWithoutValue(token, themeId, origin, this.version);\n        replica.themeId = themeId;\n        return replica;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Temporary: Data structure manipulation\n    fixMultilayerShadowTokens(tokens) {\n        for (let token of tokens) {\n            token.shadowLayers = this.findAssociatedTokens(token, tokens);\n        }\n    }\n    fixMultilayerGradientTokens(tokens) {\n        for (let token of tokens) {\n            token.gradientLayers = this.findAssociatedTokens(token, tokens);\n        }\n    }\n    fixMultilayerBlurTokens(tokens) {\n        for (let token of tokens) {\n            token.blurLayers = this.findAssociatedTokens(token, tokens);\n        }\n    }\n    findAssociatedTokens(token, tokens) {\n        var _a;\n        if (!((_a = token.origin) === null || _a === void 0 ? void 0 : _a.id) || !token.parent) {\n            return [token];\n        }\n        // Find all tokens with same origin\n        let tokenId = this.actualOriginTokenId(token.origin.id);\n        let matchingTokens = tokens.filter(t => { var _a; return this.actualOriginTokenId((_a = t.origin) === null || _a === void 0 ? void 0 : _a.id) === tokenId; });\n        // Sort by the parent, and set virtual tokens\n        let sortedTokens = new Array();\n        let index = 0;\n        for (let id of token.parent.tokenIds) {\n            for (let matchingToken of matchingTokens) {\n                if (matchingToken.id === id) {\n                    sortedTokens.push(matchingToken);\n                    if (index === 0) {\n                        ;\n                        matchingToken.isVirtual = false;\n                    }\n                    else {\n                        ;\n                        matchingToken.isVirtual = true;\n                    }\n                    index++;\n                }\n            }\n        }\n        return sortedTokens;\n    }\n    actualOriginTokenId(id) {\n        if (id && id.length > 0) {\n            return id.split(',')[0];\n        }\n        return null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Referencing\n    constructReferencedToken(rawData, properties, values) {\n        let referenceId = rawData.data.aliasTo;\n        let referencedToken;\n        if (this.resolvedTokens.get(referenceId)) {\n            // If the referenced token already exists, we use it to create this token\n            referencedToken = this.resolvedTokens.get(referenceId);\n        }\n        else if (this.hashedTokens.get(referenceId)) {\n            // Otherwise, we request token with the model data of the other token coming from the base set of tokens\n            referencedToken = this.constructReferencedToken(this.hashedTokens.get(referenceId), properties, values);\n        }\n        else {\n            // This situation can't happen because we are either resolving base tokens and using constructed references,\n            // or resolving theme and this function should not be used at all\n            throw new Error(\"Data integrity problem detected, can't start creating reference for themed tokens when resolving base values\");\n        }\n        let token = this.constructResolvedToken(rawData, referencedToken, properties, values);\n        this.resolvedTokens.set(token.id, token);\n        return token;\n    }\n    constructReferencedThemedToken(rawData, themeId) {\n        let referenceId = rawData.data.aliasTo;\n        let referencedToken;\n        if (this.resolvedOverrides.get(referenceId)) {\n            // If the reference token exists from the current theme that is being resolved (note, that might not be always), prioritize reference first\n            referencedToken = this.resolvedOverrides.get(referenceId);\n        }\n        else if (this.hashedOverrides.get(referenceId)) {\n            // If the reference doesn't exists, there are two possible options:\n            // The first one is that we are creating reference token within current theme, if provided. In this case, we construct\n            // token from the override that we also construct\n            referencedToken = this.constructReferencedThemedToken(this.hashedOverrides.get(referenceId), themeId);\n        }\n        else if (this.resolvedTokens.get(referenceId)) {\n            // If the referenced token already exists, we use it to create this token\n            referencedToken = this.resolvedTokens.get(referenceId);\n        }\n        else {\n            // This situation can't happen because we are either resolving theme and using constructed references,\n            // or resolving base tokens and this function should not be used at all\n            throw new Error(\"Data integrity problem detected, can't start creating reference for base tokens when resolving themes\");\n        }\n        let token = this.constructResolvedThemedToken(rawData, referencedToken, themeId);\n        this.resolvedOverrides.set(token.id, token);\n        return token;\n    }\n    constructResolvedThemedToken(rawData, referencedToken, themeId) {\n        if (!rawData.data.aliasTo) {\n            throw Error(`Incorrectly creating reference themed token ${rawData.tokenPersistentId} from pure value token`);\n        }\n        let baseToken = this.resolvedTokens.get(rawData.tokenPersistentId);\n        let replica = SDKThemeUtilities_1.ThemeUtilities.replicateTokenAsThemePrefabWithoutValue(baseToken, themeId, rawData.origin, this.version);\n        // Each token has some value, let's use it\n        let value = referencedToken.value;\n        replica.value = value;\n        return replica;\n    }\n    constructResolvedToken(rawData, referencedToken, properties, values) {\n        if (!rawData.data.aliasTo) {\n            throw Error('Incorrectly creating reference token from value token');\n        }\n        let type = rawData.type;\n        // We make a copy of values for each constructed token\n        switch (type) {\n            case SDKTokenType_1.TokenType.color: {\n                let ref = referencedToken;\n                return new SDKColorToken_1.ColorToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.border: {\n                let ref = referencedToken;\n                return new SDKBorderToken_1.BorderToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.font: {\n                let ref = referencedToken;\n                return new SDKFontToken_1.FontToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.gradient: {\n                let ref = referencedToken;\n                return new SDKGradientToken_1.GradientToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.measure: {\n                let ref = referencedToken;\n                return new SDKMeasureToken_1.MeasureToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.radius: {\n                let ref = referencedToken;\n                return new SDKRadiusToken_1.RadiusToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.shadow: {\n                let ref = referencedToken;\n                return new SDKShadowToken_1.ShadowToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.text: {\n                let ref = referencedToken;\n                return new SDKTextToken_1.TextToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.typography: {\n                let ref = referencedToken;\n                return new SDKTypographyToken_1.TypographyToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.blur: {\n                let ref = referencedToken;\n                return new SDKBlurToken_1.BlurToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n            case SDKTokenType_1.TokenType.generic: {\n                let ref = referencedToken;\n                return new SDKGenericToken_1.GenericToken(this.version, rawData, Object.assign({}, ref.value), ref, properties, values);\n            }\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token construction\n    constructValueToken(rawData, properties, values) {\n        if (rawData.data.aliasTo) {\n            throw Error('Incorrectly creating value token from referenced token');\n        }\n        let type = rawData.type;\n        switch (type) {\n            case SDKTokenType_1.TokenType.color:\n                return this.constructColorToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.border:\n                return this.constructBorderToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.font:\n                return this.constructFontToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.gradient:\n                return this.constructGradientToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.measure:\n                return this.constructMeasureToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.radius:\n                return this.constructRadiusToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.shadow:\n                return this.constructShadowToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.text:\n                return this.constructTextToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.typography:\n                return this.constructTypographyToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.blur:\n                return this.constructBlurToken(rawData, properties, values);\n            case SDKTokenType_1.TokenType.generic:\n                return this.constructGenericToken(rawData, properties, values);\n        }\n    }\n    constructThemedValueToken(override, themeId) {\n        if (override.data.aliasTo) {\n            throw Error('Incorrectly creating themed value token from referenced token');\n        }\n        let baseToken = this.resolvedTokens.get(override.tokenPersistentId);\n        let replica = SDKThemeUtilities_1.ThemeUtilities.replicateTokenAsThemePrefabWithoutValue(baseToken, themeId, override.origin, this.version);\n        let type = override.type;\n        let value;\n        switch (type) {\n            case SDKTokenType_1.TokenType.color:\n                ;\n                replica.value = this.constructColorValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.font:\n                ;\n                replica.value = this.constructFontValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.measure:\n                ;\n                replica.value = this.constructMeasureValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.text:\n                ;\n                replica.value = this.constructTextLikeTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.generic:\n                ;\n                replica.value = this.constructTextLikeTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.blur:\n                ;\n                replica.value = this.constructBlurTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.border:\n                ;\n                replica.value = this.constructBorderTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.gradient:\n                ;\n                replica.value = this.constructGradientTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.radius:\n                ;\n                replica.value = this.constructRadiusTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.shadow:\n                ;\n                replica.value = this.constructShadowTokenValue(override.data.value);\n                break;\n            case SDKTokenType_1.TokenType.typography:\n                ;\n                replica.value = this.constructTypographyTokenValue(override.data.value);\n                break;\n        }\n        return replica;\n    }\n    constructColorToken(rawData, properties, values) {\n        let value = this.constructColorValue(rawData.data.value);\n        return new SDKColorToken_1.ColorToken(this.version, rawData, value, null, properties, values);\n    }\n    constructColorValue(rawValue) {\n        let hex = rawValue.substr(1); // RRGGBBAA\n        let r = parseInt(hex.slice(0, 2), 16);\n        let g = parseInt(hex.slice(2, 4), 16);\n        let b = parseInt(hex.slice(4, 6), 16);\n        let a = parseInt(hex.slice(6, 8), 16);\n        return {\n            hex: hex,\n            r: r,\n            g: g,\n            b: b,\n            a: a,\n            referencedToken: null\n        };\n    }\n    constructTextToken(rawData, properties, values) {\n        let value = this.constructTextLikeTokenValue(rawData.data.value);\n        return new SDKTextToken_1.TextToken(this.version, rawData, value, null, properties, values);\n    }\n    constructGenericToken(rawData, properties, values) {\n        let value = this.constructTextLikeTokenValue(rawData.data.value);\n        return new SDKGenericToken_1.GenericToken(this.version, rawData, value, null, properties, values);\n    }\n    constructTextLikeTokenValue(rawData) {\n        let value = {\n            text: rawData,\n            referencedToken: null\n        };\n        return value;\n    }\n    constructMeasureToken(rawData, properties, values) {\n        let value = this.constructMeasureValue(rawData.data.value);\n        return new SDKMeasureToken_1.MeasureToken(this.version, rawData, value, null, properties, values);\n    }\n    constructMeasureValue(rawData) {\n        return {\n            unit: rawData.unit,\n            measure: rawData.measure,\n            referencedToken: null\n        };\n    }\n    constructFontToken(rawData, properties, values) {\n        let value = this.constructFontValue(rawData.data.value);\n        return new SDKFontToken_1.FontToken(this.version, rawData, value, null, properties, values);\n    }\n    constructFontValue(rawData) {\n        return {\n            family: rawData.family,\n            subfamily: rawData.subfamily,\n            referencedToken: null\n        };\n    }\n    constructGradientToken(rawData, properties, values) {\n        let value = this.constructGradientTokenValue(rawData.data.value);\n        return new SDKGradientToken_1.GradientToken(this.version, rawData, value, null, properties, values);\n    }\n    constructGradientTokenValue(rawData) {\n        let value = {\n            to: rawData.to,\n            from: rawData.from,\n            type: rawData.type,\n            aspectRatio: rawData.aspectRatio,\n            stops: this.constructGradientStops(rawData.stops),\n            referencedToken: null\n        };\n        return value;\n    }\n    constructGradientStops(rawData) {\n        return rawData.map(stop => {\n            return {\n                position: stop.position,\n                color: this.resolveReferencedColorTokenValue(stop.color),\n                referencedToken: null\n            };\n        });\n    }\n    constructRadiusToken(rawData, properties, values) {\n        let value = this.constructRadiusTokenValue(rawData.data.value);\n        return new SDKRadiusToken_1.RadiusToken(this.version, rawData, value, null, properties, values);\n    }\n    constructRadiusTokenValue(rawData) {\n        let value = {\n            radius: this.resolveReferencedMeasureTokenValue(rawData.radius),\n            topLeft: rawData.topLeft ? this.resolveReferencedMeasureTokenValue(rawData.topLeft) : null,\n            topRight: rawData.topRight ? this.resolveReferencedMeasureTokenValue(rawData.topRight) : null,\n            bottomLeft: rawData.bottomLeft ? this.resolveReferencedMeasureTokenValue(rawData.bottomLeft) : null,\n            bottomRight: rawData.bottomRight ? this.resolveReferencedMeasureTokenValue(rawData.bottomRight) : null,\n            referencedToken: null\n        };\n        return value;\n    }\n    constructShadowToken(rawData, properties, values) {\n        let value = this.constructShadowTokenValue(rawData.data.value);\n        return new SDKShadowToken_1.ShadowToken(this.version, rawData, value, null, properties, values);\n    }\n    constructShadowTokenValue(rawData) {\n        let value = {\n            color: this.resolveReferencedColorTokenValue(rawData.color),\n            x: this.resolveReferencedMeasureTokenValue(rawData.x),\n            y: this.resolveReferencedMeasureTokenValue(rawData.y),\n            radius: this.resolveReferencedMeasureTokenValue(rawData.radius),\n            spread: this.resolveReferencedMeasureTokenValue(rawData.spread),\n            opacity: rawData.opacity,\n            type: rawData.type,\n            referencedToken: null\n        };\n        return value;\n    }\n    constructBorderToken(rawData, properties, values) {\n        let value = this.constructBorderTokenValue(rawData.data.value);\n        return new SDKBorderToken_1.BorderToken(this.version, rawData, value, null, properties, values);\n    }\n    constructBorderTokenValue(rawData) {\n        let value = {\n            color: this.resolveReferencedColorTokenValue(rawData.color),\n            width: this.resolveReferencedMeasureTokenValue(rawData.width),\n            position: rawData.position,\n            referencedToken: null\n        };\n        return value;\n    }\n    constructTypographyToken(rawData, properties, values) {\n        let value = this.constructTypographyTokenValue(rawData.data.value);\n        return new SDKTypographyToken_1.TypographyToken(this.version, rawData, value, null, properties, values);\n    }\n    constructTypographyTokenValue(rawData) {\n        let value = {\n            font: this.resolveReferencedFontTokenValue(rawData.font),\n            fontSize: this.resolveReferencedMeasureTokenValue(rawData.fontSize),\n            textDecoration: rawData.textDecoration,\n            textCase: rawData.textCase,\n            letterSpacing: this.resolveReferencedMeasureTokenValue(rawData.letterSpacing),\n            lineHeight: rawData.lineHeight ? this.resolveReferencedMeasureTokenValue(rawData.lineHeight) : null,\n            paragraphIndent: this.resolveReferencedMeasureTokenValue(rawData.paragraphIndent),\n            paragraphSpacing: this.resolveReferencedMeasureTokenValue(rawData.paragraphSpacing),\n            referencedToken: null\n        };\n        return value;\n    }\n    constructBlurToken(rawData, properties, values) {\n        let value = this.constructBlurTokenValue(rawData.data.value);\n        return new SDKBlurToken_1.BlurToken(this.version, rawData, value, null, properties, values);\n    }\n    constructBlurTokenValue(rawData) {\n        let value = {\n            type: rawData.type,\n            radius: this.resolveReferencedMeasureTokenValue(rawData.radius),\n            referencedToken: null\n        };\n        return value;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token value resolution\n    /** Resolve token color value - meaning we are not creating new tokens, and require raw tokens to be already present */\n    resolveReferencedColorTokenValue(token) {\n        if (token.aliasTo) {\n            const resolved = this.resolvedTokens.get(token.aliasTo);\n            return Object.assign(Object.assign({}, resolved.value), { referencedToken: resolved });\n        }\n        else {\n            return this.constructColorValue(token.value);\n        }\n    }\n    /** Resolve token measure value - meaning we are not creating new tokens, and require raw tokens to be already present */\n    resolveReferencedMeasureTokenValue(token) {\n        if (token.aliasTo) {\n            const resolved = this.resolvedTokens.get(token.aliasTo);\n            return Object.assign(Object.assign({}, resolved.value), { referencedToken: resolved });\n        }\n        else {\n            return this.constructMeasureValue(token.value);\n        }\n    }\n    /** Resolve token font value - meaning we are not creating new tokens, and require raw tokens to be already present */\n    resolveReferencedFontTokenValue(token) {\n        if (token.aliasTo) {\n            const resolved = this.resolvedTokens.get(token.aliasTo);\n            return Object.assign(Object.assign({}, resolved.value), { referencedToken: resolved });\n        }\n        else {\n            return this.constructFontValue(token.value);\n        }\n    }\n}\nexports.TokenResolver = TokenResolver;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTokenList = exports.DocumentationPageBlockTokenGroup = exports.DocumentationPageBlockToken = exports.DocumentationPageBlockText = exports.DocumentationPageBlockShortcuts = exports.DocumentationPageBlockShortcutType = exports.DocumentationPageBlockShortcut = exports.DocumentationPageBlockRenderCode = exports.DocumentationPageBlockQuote = exports.DocumentationPageOrderedList = exports.DocumentationPageBlockImage = exports.DocumentationPageBlockHeading = exports.DocumentationPageBlockFrames = exports.DocumentationPageBlockFrame = exports.DocumentationPageBlockEmbedYoutube = exports.DocumentationPageBlockEmbedStorybook = exports.DocumentationPageBlockEmbedLink = exports.DocumentationPageBlockEmbedGeneric = exports.DocumentationPageBlockEmbedFigma = exports.DocumentationPageBlockDivider = exports.DocumentationPageBlockCustom = exports.DocumentationPageBlockCode = exports.DocumentationPageBlockCallout = exports.DocumentationPageBlockAssets = exports.DocumentationPageBlockAsset = exports.Documentation = exports.DesignComponent = exports.ElementPropertyOption = exports.ElementPropertyType = exports.ElementPropertyTargetElementType = exports.ElementPropertyLinkElementType = exports.ElementProperty = exports.Component = exports.RenderedAsset = exports.Asset = exports.ExporterConfigurationPropertyType = exports.ExporterConfigurationPropertyInputType = exports.ExporterConfigurationProperty = exports.ExporterCustomBlockVariant = exports.ExporterCustomBlockPropertyInputType = exports.ExporterCustomBlockPropertyType = exports.ExporterCustomBlockProperty = exports.ExporterCustomBlockMode = exports.ExporterCustomBlock = exports.Exporter = exports.Workspace = exports.DesignSystemVersion = exports.DesignSystem = exports.Brand = exports.Supernova = void 0;\nexports.BorderToken = exports.BlurToken = exports.WorkspaceNPMRegistry = exports.TokenOrigin = exports.Size = exports.Source = exports.DesignComponentOrigin = exports.Unit = exports.TokenType = exports.TextDecoration = exports.TextCase = exports.ShadowType = exports.RichTextSpanAttributeType = exports.GradientType = exports.FrameLayout = exports.FrameAlignment = exports.DocumentationPageBlockThemeType = exports.DocumentationPageBlockType = exports.DocumentationItemType = exports.DocumentationHeadingType = exports.DocumentationGroupBehavior = exports.DocumentationCalloutType = exports.BorderPosition = exports.BlurType = exports.AssetScaleType = exports.AssetScale = exports.AssetFormat = exports.Alignment = exports.TokenGroup = exports.DesignComponentGroup = exports.AssetGroup = exports.RichTextSpanAttribute = exports.RichTextSpan = exports.DocumentationRichText = exports.DocumentationPageBlock = exports.DocumentationPage = exports.DocumentationItem = exports.DocumentationGroup = exports.DocumentationConfiguration = exports.DocumentationItemConfiguration = exports.DocumentationItemHeader = exports.DocumentationPageBlockTableColumn = exports.DocumentationPageBlockTableRow = exports.DocumentationPageBlockTableCell = exports.DocumentationPageBlockTable = exports.DocumentationPageBlockTabItem = exports.DocumentationPageBlockTab = exports.DocumentationPageBlockColumnItem = exports.DocumentationPageBlockColumn = exports.DocumentationPageUnorderedList = void 0;\nexports.TokenTransform = exports.MarkdownTransformType = exports.MarkdownTransform = exports.DocSearchResultDataType = exports.DocSearch = exports.SupernovaToolsDesignTokensPlugin = exports.JSONBuilderNamingOption = exports.TokenJSONBuilder = exports.TokenThemeOverride = exports.TokenTheme = exports.Token = exports.TextToken = exports.TypographyToken = exports.ShadowToken = exports.RadiusToken = exports.MeasureToken = exports.GradientToken = exports.GenericToken = exports.FontToken = exports.ColorToken = void 0;\n// Export main Supernova object\nvar SDKSupernova_1 = require(\"../src/core/SDKSupernova\");\nObject.defineProperty(exports, \"Supernova\", { enumerable: true, get: function () { return SDKSupernova_1.Supernova; } });\n// Export auxiliary objects\nvar SDKBrand_1 = require(\"../src/core/SDKBrand\");\nObject.defineProperty(exports, \"Brand\", { enumerable: true, get: function () { return SDKBrand_1.Brand; } });\nvar SDKDesignSystem_1 = require(\"../src/core/SDKDesignSystem\");\nObject.defineProperty(exports, \"DesignSystem\", { enumerable: true, get: function () { return SDKDesignSystem_1.DesignSystem; } });\nvar SDKDesignSystemVersion_1 = require(\"../src/core/SDKDesignSystemVersion\");\nObject.defineProperty(exports, \"DesignSystemVersion\", { enumerable: true, get: function () { return SDKDesignSystemVersion_1.DesignSystemVersion; } });\nvar SDKWorkspace_1 = require(\"../src/core/SDKWorkspace\");\nObject.defineProperty(exports, \"Workspace\", { enumerable: true, get: function () { return SDKWorkspace_1.Workspace; } });\n// Exporters\nvar SDKExporter_1 = require(\"../src/model/exporters/SDKExporter\");\nObject.defineProperty(exports, \"Exporter\", { enumerable: true, get: function () { return SDKExporter_1.Exporter; } });\n// Exporter / Documentation behavior customization\nvar SDKExporterCustomBlock_1 = require(\"./model/exporters/custom_blocks/SDKExporterCustomBlock\");\nObject.defineProperty(exports, \"ExporterCustomBlock\", { enumerable: true, get: function () { return SDKExporterCustomBlock_1.ExporterCustomBlock; } });\nObject.defineProperty(exports, \"ExporterCustomBlockMode\", { enumerable: true, get: function () { return SDKExporterCustomBlock_1.ExporterCustomBlockMode; } });\nvar SDKExporterCustomBlockProperty_1 = require(\"./model/exporters/custom_blocks/SDKExporterCustomBlockProperty\");\nObject.defineProperty(exports, \"ExporterCustomBlockProperty\", { enumerable: true, get: function () { return SDKExporterCustomBlockProperty_1.ExporterCustomBlockProperty; } });\nObject.defineProperty(exports, \"ExporterCustomBlockPropertyType\", { enumerable: true, get: function () { return SDKExporterCustomBlockProperty_1.ExporterCustomBlockPropertyType; } });\nObject.defineProperty(exports, \"ExporterCustomBlockPropertyInputType\", { enumerable: true, get: function () { return SDKExporterCustomBlockProperty_1.ExporterCustomBlockPropertyInputType; } });\nvar SDKExporterCustomBlockVariant_1 = require(\"../src/model/exporters/custom_blocks/SDKExporterCustomBlockVariant\");\nObject.defineProperty(exports, \"ExporterCustomBlockVariant\", { enumerable: true, get: function () { return SDKExporterCustomBlockVariant_1.ExporterCustomBlockVariant; } });\nvar SDKExporterConfigurationProperty_1 = require(\"../src/model/exporters/custom_properties/SDKExporterConfigurationProperty\");\nObject.defineProperty(exports, \"ExporterConfigurationProperty\", { enumerable: true, get: function () { return SDKExporterConfigurationProperty_1.ExporterConfigurationProperty; } });\nObject.defineProperty(exports, \"ExporterConfigurationPropertyInputType\", { enumerable: true, get: function () { return SDKExporterConfigurationProperty_1.ExporterConfigurationPropertyInputType; } });\nObject.defineProperty(exports, \"ExporterConfigurationPropertyType\", { enumerable: true, get: function () { return SDKExporterConfigurationProperty_1.ExporterConfigurationPropertyType; } });\n// Assets\nvar SDKAsset_1 = require(\"../src/model/assets/SDKAsset\");\nObject.defineProperty(exports, \"Asset\", { enumerable: true, get: function () { return SDKAsset_1.Asset; } });\nvar SDKRenderedAsset_1 = require(\"../src/model/assets/SDKRenderedAsset\");\nObject.defineProperty(exports, \"RenderedAsset\", { enumerable: true, get: function () { return SDKRenderedAsset_1.RenderedAsset; } });\n// Components\nvar SDKComponent_1 = require(\"../src/model/components/SDKComponent\");\nObject.defineProperty(exports, \"Component\", { enumerable: true, get: function () { return SDKComponent_1.Component; } });\nvar SDKElementProperty_1 = require(\"./model/elements/SDKElementProperty\");\nObject.defineProperty(exports, \"ElementProperty\", { enumerable: true, get: function () { return SDKElementProperty_1.ElementProperty; } });\nObject.defineProperty(exports, \"ElementPropertyLinkElementType\", { enumerable: true, get: function () { return SDKElementProperty_1.ElementPropertyLinkElementType; } });\nObject.defineProperty(exports, \"ElementPropertyTargetElementType\", { enumerable: true, get: function () { return SDKElementProperty_1.ElementPropertyTargetElementType; } });\nObject.defineProperty(exports, \"ElementPropertyType\", { enumerable: true, get: function () { return SDKElementProperty_1.ElementPropertyType; } });\nvar SDKElementPropertyOption_1 = require(\"../src/model/elements/SDKElementPropertyOption\");\nObject.defineProperty(exports, \"ElementPropertyOption\", { enumerable: true, get: function () { return SDKElementPropertyOption_1.ElementPropertyOption; } });\n// Design Components\nvar SDKDesignComponent_1 = require(\"../src/model/components/SDKDesignComponent\");\nObject.defineProperty(exports, \"DesignComponent\", { enumerable: true, get: function () { return SDKDesignComponent_1.DesignComponent; } });\n// Documentation / Core\nvar SDKDocumentation_1 = require(\"../src/core/SDKDocumentation\");\nObject.defineProperty(exports, \"Documentation\", { enumerable: true, get: function () { return SDKDocumentation_1.Documentation; } });\n// Documentation / Blocks\nvar SDKDocumentationPageBlockAsset_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockAsset\");\nObject.defineProperty(exports, \"DocumentationPageBlockAsset\", { enumerable: true, get: function () { return SDKDocumentationPageBlockAsset_1.DocumentationPageBlockAsset; } });\nvar SDKDocumentationPageBlockAssets_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockAssets\");\nObject.defineProperty(exports, \"DocumentationPageBlockAssets\", { enumerable: true, get: function () { return SDKDocumentationPageBlockAssets_1.DocumentationPageBlockAssets; } });\nvar SDKDocumentationPageBlockCallout_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockCallout\");\nObject.defineProperty(exports, \"DocumentationPageBlockCallout\", { enumerable: true, get: function () { return SDKDocumentationPageBlockCallout_1.DocumentationPageBlockCallout; } });\nvar SDKDocumentationPageBlockCode_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockCode\");\nObject.defineProperty(exports, \"DocumentationPageBlockCode\", { enumerable: true, get: function () { return SDKDocumentationPageBlockCode_1.DocumentationPageBlockCode; } });\nvar SDKDocumentationPageBlockCustom_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockCustom\");\nObject.defineProperty(exports, \"DocumentationPageBlockCustom\", { enumerable: true, get: function () { return SDKDocumentationPageBlockCustom_1.DocumentationPageBlockCustom; } });\nvar SDKDocumentationPageBlockDivider_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockDivider\");\nObject.defineProperty(exports, \"DocumentationPageBlockDivider\", { enumerable: true, get: function () { return SDKDocumentationPageBlockDivider_1.DocumentationPageBlockDivider; } });\nvar SDKDocumentationPageBlockEmbedFigma_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockEmbedFigma\");\nObject.defineProperty(exports, \"DocumentationPageBlockEmbedFigma\", { enumerable: true, get: function () { return SDKDocumentationPageBlockEmbedFigma_1.DocumentationPageBlockEmbedFigma; } });\nvar SDKDocumentationPageBlockEmbedGeneric_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockEmbedGeneric\");\nObject.defineProperty(exports, \"DocumentationPageBlockEmbedGeneric\", { enumerable: true, get: function () { return SDKDocumentationPageBlockEmbedGeneric_1.DocumentationPageBlockEmbedGeneric; } });\nvar SDKDocumentationPageBlockEmbedLink_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockEmbedLink\");\nObject.defineProperty(exports, \"DocumentationPageBlockEmbedLink\", { enumerable: true, get: function () { return SDKDocumentationPageBlockEmbedLink_1.DocumentationPageBlockEmbedLink; } });\nvar SDKDocumentationPageBlockEmbedStorybook_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockEmbedStorybook\");\nObject.defineProperty(exports, \"DocumentationPageBlockEmbedStorybook\", { enumerable: true, get: function () { return SDKDocumentationPageBlockEmbedStorybook_1.DocumentationPageBlockEmbedStorybook; } });\nvar SDKDocumentationPageBlockEmbedYoutube_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockEmbedYoutube\");\nObject.defineProperty(exports, \"DocumentationPageBlockEmbedYoutube\", { enumerable: true, get: function () { return SDKDocumentationPageBlockEmbedYoutube_1.DocumentationPageBlockEmbedYoutube; } });\nvar SDKDocumentationPageBlockFrame_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockFrame\");\nObject.defineProperty(exports, \"DocumentationPageBlockFrame\", { enumerable: true, get: function () { return SDKDocumentationPageBlockFrame_1.DocumentationPageBlockFrame; } });\nvar SDKDocumentationPageBlockFrames_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockFrames\");\nObject.defineProperty(exports, \"DocumentationPageBlockFrames\", { enumerable: true, get: function () { return SDKDocumentationPageBlockFrames_1.DocumentationPageBlockFrames; } });\nvar SDKDocumentationPageBlockHeading_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockHeading\");\nObject.defineProperty(exports, \"DocumentationPageBlockHeading\", { enumerable: true, get: function () { return SDKDocumentationPageBlockHeading_1.DocumentationPageBlockHeading; } });\nvar SDKDocumentationPageBlockImage_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockImage\");\nObject.defineProperty(exports, \"DocumentationPageBlockImage\", { enumerable: true, get: function () { return SDKDocumentationPageBlockImage_1.DocumentationPageBlockImage; } });\nvar SDKDocumentationPageBlockOrderedList_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockOrderedList\");\nObject.defineProperty(exports, \"DocumentationPageOrderedList\", { enumerable: true, get: function () { return SDKDocumentationPageBlockOrderedList_1.DocumentationPageOrderedList; } });\nvar SDKDocumentationPageBlockQuote_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockQuote\");\nObject.defineProperty(exports, \"DocumentationPageBlockQuote\", { enumerable: true, get: function () { return SDKDocumentationPageBlockQuote_1.DocumentationPageBlockQuote; } });\nvar SDKDocumentationPageBlockRenderCode_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockRenderCode\");\nObject.defineProperty(exports, \"DocumentationPageBlockRenderCode\", { enumerable: true, get: function () { return SDKDocumentationPageBlockRenderCode_1.DocumentationPageBlockRenderCode; } });\nvar SDKDocumentationPageBlockShortcut_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockShortcut\");\nObject.defineProperty(exports, \"DocumentationPageBlockShortcut\", { enumerable: true, get: function () { return SDKDocumentationPageBlockShortcut_1.DocumentationPageBlockShortcut; } });\nObject.defineProperty(exports, \"DocumentationPageBlockShortcutType\", { enumerable: true, get: function () { return SDKDocumentationPageBlockShortcut_1.DocumentationPageBlockShortcutType; } });\nvar SDKDocumentationPageBlockShortcuts_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockShortcuts\");\nObject.defineProperty(exports, \"DocumentationPageBlockShortcuts\", { enumerable: true, get: function () { return SDKDocumentationPageBlockShortcuts_1.DocumentationPageBlockShortcuts; } });\nvar SDKDocumentationPageBlockText_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockText\");\nObject.defineProperty(exports, \"DocumentationPageBlockText\", { enumerable: true, get: function () { return SDKDocumentationPageBlockText_1.DocumentationPageBlockText; } });\nvar SDKDocumentationPageBlockToken_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockToken\");\nObject.defineProperty(exports, \"DocumentationPageBlockToken\", { enumerable: true, get: function () { return SDKDocumentationPageBlockToken_1.DocumentationPageBlockToken; } });\nvar SDKDocumentationPageBlockTokenGroup_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTokenGroup\");\nObject.defineProperty(exports, \"DocumentationPageBlockTokenGroup\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTokenGroup_1.DocumentationPageBlockTokenGroup; } });\nvar SDKDocumentationPageBlockTokenList_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTokenList\");\nObject.defineProperty(exports, \"DocumentationPageBlockTokenList\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTokenList_1.DocumentationPageBlockTokenList; } });\nvar SDKDocumentationPageBlockUnorderedList_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockUnorderedList\");\nObject.defineProperty(exports, \"DocumentationPageUnorderedList\", { enumerable: true, get: function () { return SDKDocumentationPageBlockUnorderedList_1.DocumentationPageUnorderedList; } });\nvar SDKDocumentationPageBlockColumn_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockColumn\");\nObject.defineProperty(exports, \"DocumentationPageBlockColumn\", { enumerable: true, get: function () { return SDKDocumentationPageBlockColumn_1.DocumentationPageBlockColumn; } });\nvar SDKDocumentationPageBlockColumnItem_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockColumnItem\");\nObject.defineProperty(exports, \"DocumentationPageBlockColumnItem\", { enumerable: true, get: function () { return SDKDocumentationPageBlockColumnItem_1.DocumentationPageBlockColumnItem; } });\nvar SDKDocumentationPageBlockTab_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTab\");\nObject.defineProperty(exports, \"DocumentationPageBlockTab\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTab_1.DocumentationPageBlockTab; } });\nvar SDKDocumentationPageBlockTabItem_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTabItem\");\nObject.defineProperty(exports, \"DocumentationPageBlockTabItem\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTabItem_1.DocumentationPageBlockTabItem; } });\nvar SDKDocumentationPageBlockTable_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTable\");\nObject.defineProperty(exports, \"DocumentationPageBlockTable\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTable_1.DocumentationPageBlockTable; } });\nvar SDKDocumentationPageBlockTableCell_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTableCell\");\nObject.defineProperty(exports, \"DocumentationPageBlockTableCell\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTableCell_1.DocumentationPageBlockTableCell; } });\nvar SDKDocumentationPageBlockTableRow_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTableRow\");\nObject.defineProperty(exports, \"DocumentationPageBlockTableRow\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTableRow_1.DocumentationPageBlockTableRow; } });\nvar SDKDocumentationPageBlockTableColumn_1 = require(\"../src/model/documentation/blocks/SDKDocumentationPageBlockTableColumn\");\nObject.defineProperty(exports, \"DocumentationPageBlockTableColumn\", { enumerable: true, get: function () { return SDKDocumentationPageBlockTableColumn_1.DocumentationPageBlockTableColumn; } });\n// Documentation / Item Partials\nvar SDKDocumentationItemHeader_1 = require(\"../src/model/documentation/configuration/SDKDocumentationItemHeader\");\nObject.defineProperty(exports, \"DocumentationItemHeader\", { enumerable: true, get: function () { return SDKDocumentationItemHeader_1.DocumentationItemHeader; } });\nvar SDKDocumentationItemConfiguration_1 = require(\"../src/model/documentation/configuration/SDKDocumentationItemConfiguration\");\nObject.defineProperty(exports, \"DocumentationItemConfiguration\", { enumerable: true, get: function () { return SDKDocumentationItemConfiguration_1.DocumentationItemConfiguration; } });\n// Documentation / Main\nvar SDKDocumentationConfiguration_1 = require(\"../src/model/documentation/SDKDocumentationConfiguration\");\nObject.defineProperty(exports, \"DocumentationConfiguration\", { enumerable: true, get: function () { return SDKDocumentationConfiguration_1.DocumentationConfiguration; } });\nvar SDKDocumentationGroup_1 = require(\"../src/model/documentation/SDKDocumentationGroup\");\nObject.defineProperty(exports, \"DocumentationGroup\", { enumerable: true, get: function () { return SDKDocumentationGroup_1.DocumentationGroup; } });\nvar SDKDocumentationItem_1 = require(\"../src/model/documentation/SDKDocumentationItem\");\nObject.defineProperty(exports, \"DocumentationItem\", { enumerable: true, get: function () { return SDKDocumentationItem_1.DocumentationItem; } });\nvar SDKDocumentationPage_1 = require(\"../src/model/documentation/SDKDocumentationPage\");\nObject.defineProperty(exports, \"DocumentationPage\", { enumerable: true, get: function () { return SDKDocumentationPage_1.DocumentationPage; } });\nvar SDKDocumentationPageBlock_1 = require(\"../src/model/documentation/SDKDocumentationPageBlock\");\nObject.defineProperty(exports, \"DocumentationPageBlock\", { enumerable: true, get: function () { return SDKDocumentationPageBlock_1.DocumentationPageBlock; } });\nvar SDKDocumentationRichText_1 = require(\"../src/model/documentation/SDKDocumentationRichText\");\nObject.defineProperty(exports, \"DocumentationRichText\", { enumerable: true, get: function () { return SDKDocumentationRichText_1.DocumentationRichText; } });\nvar SDKDocumentationRichTextSpan_1 = require(\"../src/model/documentation/SDKDocumentationRichTextSpan\");\nObject.defineProperty(exports, \"RichTextSpan\", { enumerable: true, get: function () { return SDKDocumentationRichTextSpan_1.RichTextSpan; } });\nvar SDKDocumentationRichTextSpanAttribute_1 = require(\"../src/model/documentation/SDKDocumentationRichTextSpanAttribute\");\nObject.defineProperty(exports, \"RichTextSpanAttribute\", { enumerable: true, get: function () { return SDKDocumentationRichTextSpanAttribute_1.RichTextSpanAttribute; } });\n// Groups\nvar SDKAssetGroup_1 = require(\"../src/model/groups/SDKAssetGroup\");\nObject.defineProperty(exports, \"AssetGroup\", { enumerable: true, get: function () { return SDKAssetGroup_1.AssetGroup; } });\nvar SDKDesignComponentGroup_1 = require(\"../src/model/groups/SDKDesignComponentGroup\");\nObject.defineProperty(exports, \"DesignComponentGroup\", { enumerable: true, get: function () { return SDKDesignComponentGroup_1.DesignComponentGroup; } });\nvar SDKTokenGroup_1 = require(\"../src/model/groups/SDKTokenGroup\");\nObject.defineProperty(exports, \"TokenGroup\", { enumerable: true, get: function () { return SDKTokenGroup_1.TokenGroup; } });\n// Enums\nvar SDKAlignment_1 = require(\"../src/model/enums/SDKAlignment\");\nObject.defineProperty(exports, \"Alignment\", { enumerable: true, get: function () { return SDKAlignment_1.Alignment; } });\nvar SDKAssetFormat_1 = require(\"../src/model/enums/SDKAssetFormat\");\nObject.defineProperty(exports, \"AssetFormat\", { enumerable: true, get: function () { return SDKAssetFormat_1.AssetFormat; } });\nvar SDKAssetScale_1 = require(\"../src/model/enums/SDKAssetScale\");\nObject.defineProperty(exports, \"AssetScale\", { enumerable: true, get: function () { return SDKAssetScale_1.AssetScale; } });\nvar SDKAssetScaleType_1 = require(\"../src/model/enums/SDKAssetScaleType\");\nObject.defineProperty(exports, \"AssetScaleType\", { enumerable: true, get: function () { return SDKAssetScaleType_1.AssetScaleType; } });\nvar SDKBlurType_1 = require(\"../src/model/enums/SDKBlurType\");\nObject.defineProperty(exports, \"BlurType\", { enumerable: true, get: function () { return SDKBlurType_1.BlurType; } });\nvar SDKBorderPosition_1 = require(\"../src/model/enums/SDKBorderPosition\");\nObject.defineProperty(exports, \"BorderPosition\", { enumerable: true, get: function () { return SDKBorderPosition_1.BorderPosition; } });\nvar SDKDocumentationCalloutType_1 = require(\"../src/model/enums/SDKDocumentationCalloutType\");\nObject.defineProperty(exports, \"DocumentationCalloutType\", { enumerable: true, get: function () { return SDKDocumentationCalloutType_1.DocumentationCalloutType; } });\nvar SDKDocumentationGroupBehavior_1 = require(\"../src/model/enums/SDKDocumentationGroupBehavior\");\nObject.defineProperty(exports, \"DocumentationGroupBehavior\", { enumerable: true, get: function () { return SDKDocumentationGroupBehavior_1.DocumentationGroupBehavior; } });\nvar SDKDocumentationHeadingType_1 = require(\"../src/model/enums/SDKDocumentationHeadingType\");\nObject.defineProperty(exports, \"DocumentationHeadingType\", { enumerable: true, get: function () { return SDKDocumentationHeadingType_1.DocumentationHeadingType; } });\nvar SDKDocumentationItemType_1 = require(\"../src/model/enums/SDKDocumentationItemType\");\nObject.defineProperty(exports, \"DocumentationItemType\", { enumerable: true, get: function () { return SDKDocumentationItemType_1.DocumentationItemType; } });\nvar SDKDocumentationPageBlockType_1 = require(\"../src/model/enums/SDKDocumentationPageBlockType\");\nObject.defineProperty(exports, \"DocumentationPageBlockType\", { enumerable: true, get: function () { return SDKDocumentationPageBlockType_1.DocumentationPageBlockType; } });\nvar SDKDocumentationPageBlockThemeType_1 = require(\"./model/enums/SDKDocumentationPageBlockThemeType\");\nObject.defineProperty(exports, \"DocumentationPageBlockThemeType\", { enumerable: true, get: function () { return SDKDocumentationPageBlockThemeType_1.DocumentationPageBlockThemeType; } });\nvar SDKFrameAlignment_1 = require(\"../src/model/enums/SDKFrameAlignment\");\nObject.defineProperty(exports, \"FrameAlignment\", { enumerable: true, get: function () { return SDKFrameAlignment_1.FrameAlignment; } });\nvar SDKFrameLayout_1 = require(\"../src/model/enums/SDKFrameLayout\");\nObject.defineProperty(exports, \"FrameLayout\", { enumerable: true, get: function () { return SDKFrameLayout_1.FrameLayout; } });\nvar SDKGradientType_1 = require(\"../src/model/enums/SDKGradientType\");\nObject.defineProperty(exports, \"GradientType\", { enumerable: true, get: function () { return SDKGradientType_1.GradientType; } });\nvar SDKRichTextSpanAttributeType_1 = require(\"../src/model/enums/SDKRichTextSpanAttributeType\");\nObject.defineProperty(exports, \"RichTextSpanAttributeType\", { enumerable: true, get: function () { return SDKRichTextSpanAttributeType_1.RichTextSpanAttributeType; } });\nvar SDKShadowType_1 = require(\"../src/model/enums/SDKShadowType\");\nObject.defineProperty(exports, \"ShadowType\", { enumerable: true, get: function () { return SDKShadowType_1.ShadowType; } });\nvar SDKTextCase_1 = require(\"../src/model/enums/SDKTextCase\");\nObject.defineProperty(exports, \"TextCase\", { enumerable: true, get: function () { return SDKTextCase_1.TextCase; } });\nvar SDKTextDecoration_1 = require(\"../src/model/enums/SDKTextDecoration\");\nObject.defineProperty(exports, \"TextDecoration\", { enumerable: true, get: function () { return SDKTextDecoration_1.TextDecoration; } });\nvar SDKTokenType_1 = require(\"../src/model/enums/SDKTokenType\");\nObject.defineProperty(exports, \"TokenType\", { enumerable: true, get: function () { return SDKTokenType_1.TokenType; } });\nvar SDKUnit_1 = require(\"../src/model/enums/SDKUnit\");\nObject.defineProperty(exports, \"Unit\", { enumerable: true, get: function () { return SDKUnit_1.Unit; } });\n// Supporting objects\nvar SDKDesignComponentOrigin_1 = require(\"../src/model/support/SDKDesignComponentOrigin\");\nObject.defineProperty(exports, \"DesignComponentOrigin\", { enumerable: true, get: function () { return SDKDesignComponentOrigin_1.DesignComponentOrigin; } });\nvar SDKSource_1 = require(\"../src/model/support/SDKSource\");\nObject.defineProperty(exports, \"Source\", { enumerable: true, get: function () { return SDKSource_1.Source; } });\nvar SDKSize_1 = require(\"../src/model/support/SDKSize\");\nObject.defineProperty(exports, \"Size\", { enumerable: true, get: function () { return SDKSize_1.Size; } });\nvar SDKTokenOrigin_1 = require(\"../src/model/support/SDKTokenOrigin\");\nObject.defineProperty(exports, \"TokenOrigin\", { enumerable: true, get: function () { return SDKTokenOrigin_1.TokenOrigin; } });\nvar SDKWorkspaceNPMRegistry_1 = require(\"../src/model/support/SDKWorkspaceNPMRegistry\");\nObject.defineProperty(exports, \"WorkspaceNPMRegistry\", { enumerable: true, get: function () { return SDKWorkspaceNPMRegistry_1.WorkspaceNPMRegistry; } });\n// Tokens\nvar SDKBlurToken_1 = require(\"../src/model/tokens/SDKBlurToken\");\nObject.defineProperty(exports, \"BlurToken\", { enumerable: true, get: function () { return SDKBlurToken_1.BlurToken; } });\nvar SDKBorderToken_1 = require(\"../src/model/tokens/SDKBorderToken\");\nObject.defineProperty(exports, \"BorderToken\", { enumerable: true, get: function () { return SDKBorderToken_1.BorderToken; } });\nvar SDKColorToken_1 = require(\"../src/model/tokens/SDKColorToken\");\nObject.defineProperty(exports, \"ColorToken\", { enumerable: true, get: function () { return SDKColorToken_1.ColorToken; } });\nvar SDKFontToken_1 = require(\"../src/model/tokens/SDKFontToken\");\nObject.defineProperty(exports, \"FontToken\", { enumerable: true, get: function () { return SDKFontToken_1.FontToken; } });\nvar SDKGenericToken_1 = require(\"../src/model/tokens/SDKGenericToken\");\nObject.defineProperty(exports, \"GenericToken\", { enumerable: true, get: function () { return SDKGenericToken_1.GenericToken; } });\nvar SDKGradientToken_1 = require(\"../src/model/tokens/SDKGradientToken\");\nObject.defineProperty(exports, \"GradientToken\", { enumerable: true, get: function () { return SDKGradientToken_1.GradientToken; } });\nvar SDKMeasureToken_1 = require(\"../src/model/tokens/SDKMeasureToken\");\nObject.defineProperty(exports, \"MeasureToken\", { enumerable: true, get: function () { return SDKMeasureToken_1.MeasureToken; } });\nvar SDKRadiusToken_1 = require(\"../src/model/tokens/SDKRadiusToken\");\nObject.defineProperty(exports, \"RadiusToken\", { enumerable: true, get: function () { return SDKRadiusToken_1.RadiusToken; } });\nvar SDKShadowToken_1 = require(\"../src/model/tokens/SDKShadowToken\");\nObject.defineProperty(exports, \"ShadowToken\", { enumerable: true, get: function () { return SDKShadowToken_1.ShadowToken; } });\nvar SDKTypographyToken_1 = require(\"../src/model/tokens/SDKTypographyToken\");\nObject.defineProperty(exports, \"TypographyToken\", { enumerable: true, get: function () { return SDKTypographyToken_1.TypographyToken; } });\nvar SDKTextToken_1 = require(\"../src/model/tokens/SDKTextToken\");\nObject.defineProperty(exports, \"TextToken\", { enumerable: true, get: function () { return SDKTextToken_1.TextToken; } });\nvar SDKToken_1 = require(\"../src/model/tokens/SDKToken\");\nObject.defineProperty(exports, \"Token\", { enumerable: true, get: function () { return SDKToken_1.Token; } });\n// Themes\nvar SDKTokenTheme_1 = require(\"./model/themes/SDKTokenTheme\");\nObject.defineProperty(exports, \"TokenTheme\", { enumerable: true, get: function () { return SDKTokenTheme_1.TokenTheme; } });\nvar SDKTokenThemeOverride_1 = require(\"./model/themes/SDKTokenThemeOverride\");\nObject.defineProperty(exports, \"TokenThemeOverride\", { enumerable: true, get: function () { return SDKTokenThemeOverride_1.TokenThemeOverride; } });\n// Tooling\nvar SDKToolsJSONBuilder_1 = require(\"./tools/json-builder/SDKToolsJSONBuilder\");\nObject.defineProperty(exports, \"TokenJSONBuilder\", { enumerable: true, get: function () { return SDKToolsJSONBuilder_1.TokenJSONBuilder; } });\nObject.defineProperty(exports, \"JSONBuilderNamingOption\", { enumerable: true, get: function () { return SDKToolsJSONBuilder_1.JSONBuilderNamingOption; } });\nvar SDKToolsDesignTokensPlugin_1 = require(\"../src/tools/design-tokens/SDKToolsDesignTokensPlugin\");\nObject.defineProperty(exports, \"SupernovaToolsDesignTokensPlugin\", { enumerable: true, get: function () { return SDKToolsDesignTokensPlugin_1.SupernovaToolsDesignTokensPlugin; } });\nvar SDKToolsDocSearch_1 = require(\"../src/tools/search-index/SDKToolsDocSearch\");\nObject.defineProperty(exports, \"DocSearch\", { enumerable: true, get: function () { return SDKToolsDocSearch_1.DocSearch; } });\nObject.defineProperty(exports, \"DocSearchResultDataType\", { enumerable: true, get: function () { return SDKToolsDocSearch_1.DocSearchResultDataType; } });\nvar SDKToolsMarkdownTransform_1 = require(\"../src/tools/markdown-transform/SDKToolsMarkdownTransform\");\nObject.defineProperty(exports, \"MarkdownTransform\", { enumerable: true, get: function () { return SDKToolsMarkdownTransform_1.MarkdownTransform; } });\nObject.defineProperty(exports, \"MarkdownTransformType\", { enumerable: true, get: function () { return SDKToolsMarkdownTransform_1.MarkdownTransformType; } });\nvar SDKToolsTokenTransform_1 = require(\"../src/tools/token-transform/SDKToolsTokenTransform\");\nObject.defineProperty(exports, \"TokenTransform\", { enumerable: true, get: function () { return SDKToolsTokenTransform_1.TokenTransform; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./exports\"), exports);\n","\"use strict\";\n//\n//  Supernova SDK\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Asset = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass Asset {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, duplicates) {\n        var _a;\n        this.id = model.persistentId;\n        this.brandId = model.brandId;\n        this.thumbnailUrl = (_a = model.thumbnailUrl) !== null && _a !== void 0 ? _a : null;\n        this.previouslyDuplicatedNames = duplicates;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.componentId = model.id;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n}\nexports.Asset = Asset;\n","\"use strict\";\n//\n//  Supernova SDK\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RenderedAsset = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass RenderedAsset {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, asset, group, duplicates) {\n        this.assetId = model.assetId;\n        this.fileName = model.fileName;\n        this.sourceUrl = model.sourceUrl;\n        this.originalName = model.originalName;\n        this.asset = asset;\n        this.group = group;\n        this.scale = model.settings.scale;\n        this.format = model.settings.format;\n        this.previouslyDuplicatedNames = duplicates;\n    }\n}\nexports.RenderedAsset = RenderedAsset;\n","\"use strict\";\n//\n//  SDKComponent.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Component = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass Component {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, properties, propertyValues) {\n        this.id = model.id;\n        this.persistentId = model.persistentId;\n        this.designSystemVersionId = model.designSystemVersionId;\n        this.brandId = model.brandId;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.properties = properties;\n        this.propertyValues = {};\n        for (let value of propertyValues) {\n            if (value.targetElementId === this.persistentId) {\n                // Property value refers to this element\n                for (let property of properties) {\n                    if (property.persistentId === value.definitionId) {\n                        // Property value refers to the correct property, we get codeName from it and add it to quick-access\n                        this.propertyValues[property.codeName] = value.value;\n                    }\n                }\n            }\n        }\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n}\nexports.Component = Component;\n","\"use strict\";\n//\n//  SDKDesignComponent.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DesignComponent = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDesignComponentOrigin_1 = require(\"../support/SDKDesignComponentOrigin\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DesignComponent {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, sources) {\n        var _a;\n        this.id = model.persistentId;\n        this.brandId = model.brandId;\n        this.thumbnailUrl = (_a = model.thumbnailUrl) !== null && _a !== void 0 ? _a : null;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.origin = new SDKDesignComponentOrigin_1.DesignComponentOrigin(model.originComponent, sources);\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n}\nexports.DesignComponent = DesignComponent;\n","\"use strict\";\n//\n//  SDKDocumentationConfiguration.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationConfiguration = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationConfiguration {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, registry) {\n        var _a, _b;\n        this.tabbedNavigation = model.tabbed;\n        this.storybookError = (_a = model.storybookEmbedErrorMessage) !== null && _a !== void 0 ? _a : null;\n        this.packageJson = (_b = model.renderCodePackageJson) !== null && _b !== void 0 ? _b : null;\n        this.npmRegistry = registry !== null && registry !== void 0 ? registry : null;\n    }\n}\nexports.DocumentationConfiguration = DocumentationConfiguration;\n","\"use strict\";\n//\n//  SDKDocumentationGroup.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationGroup = void 0;\nconst SDKDocumentationItemType_1 = require(\"../enums/SDKDocumentationItemType\");\nconst SDKDocumentationItem_1 = require(\"./SDKDocumentationItem\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationGroup extends SDKDocumentationItem_1.DocumentationItem {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        super(model);\n        this.isRoot = model.isRoot;\n        this.childrenIds = model.childrenIds;\n        this.children = new Array();\n        this.groupBehavior = model.groupBehavior;\n        this.relativeFirstPageUrl = null;\n        this.deployedFirstPageUrl = null;\n    }\n    /** Children filtered to be only groups */\n    get subgroups() {\n        return this.children.filter(c => c.type === SDKDocumentationItemType_1.DocumentationItemType.group);\n    }\n    /** Children filtered to be only pages */\n    get pages() {\n        return this.children.filter(c => c.type === SDKDocumentationItemType_1.DocumentationItemType.page);\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    addChild(item) {\n        this.children.push(item);\n    }\n    addChildren(groups) {\n        this.children = this.children.concat(groups);\n    }\n    setParent(parent) {\n        this.parent = parent !== null && parent !== void 0 ? parent : null;\n    }\n    /** Internal: Modifies object with new paths. Don't use outside SDK environment as it doesn't propagate the data back to source */\n    internalOverridePaths(relative, deployed) {\n        this.relativeFirstPageUrl = relative;\n        this.deployedFirstPageUrl = deployed;\n    }\n    /** Retrieve relative page path without the associated domain for the first page in the group. Will work even when documentation was not yet deployed */\n    relativeDocsPageUrl() {\n        return this.relativeFirstPageUrl;\n    }\n    /** Retrieve page url for the first page in the group, if the documentation was already deployed (either default or custom domain) */\n    deployedDocsPageUrl() {\n        return this.deployedFirstPageUrl;\n    }\n}\nexports.DocumentationGroup = DocumentationGroup;\n","\"use strict\";\n//\n//  DocumentationItem.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationItem = void 0;\nconst SDKDocumentationItemConfiguration_1 = require(\"./configuration/SDKDocumentationItemConfiguration\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationItem {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a;\n        this.id = model.id;\n        this.persistentId = model.persistentId;\n        this.type = model.type;\n        this.configuration = new SDKDocumentationItemConfiguration_1.DocumentationItemConfiguration(model.configuration);\n        this.slug = model.slug;\n        this.userSlug = (_a = model.userSlug) !== null && _a !== void 0 ? _a : null;\n        this.title = model.title;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n}\nexports.DocumentationItem = DocumentationItem;\n","\"use strict\";\n//\n//  DocumentationPage.ts\n//  SDKSupernova \n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPage = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDocumentationBlockBuilder_1 = require(\"./builder/SDKDocumentationBlockBuilder\");\nconst SDKDocumentationItem_1 = require(\"./SDKDocumentationItem\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPage extends SDKDocumentationItem_1.DocumentationItem {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model);\n        if (model.blocks) {\n            this.blocks = model.blocks.map(b => SDKDocumentationBlockBuilder_1.DocumentationBlockBuilder.fromGenericModel(b, customBlocks, configuration));\n        }\n        this.deployedUrl = null;\n        this.relativeUrl = null;\n        this.editorUrl = null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    /** Internal: Modifies object with new paths. Don't use outside SDK environment as it doesn't propagate the data back to source */\n    internalOverridePaths(deployed, editor, relative) {\n        this.editorUrl = editor;\n        this.deployedUrl = deployed;\n        this.relativeUrl = relative;\n    }\n    /** Internal: Sets new parent. Used when manipulating with object internally. Don't use outside SDK environment */\n    setParent(parent) {\n        this.parent = parent;\n    }\n    /** Retrieve editor page URL that can be opened */\n    editorPageUrl() {\n        return this.editorUrl;\n    }\n    /** Retrieve documentation page URL, if the documentation was already deployed (either default or custom domain) */\n    deployedPageUrl() {\n        return this.deployedUrl;\n    }\n    /** Retrieve relative page path without the associated domain. Will work even when documentation was not yet deployed */\n    relativePageUrl() {\n        return this.relativeUrl;\n    }\n}\nexports.DocumentationPage = DocumentationPage;\n","\"use strict\";\n//\n//  SDKDocumentationPageBlock.ts\n//  Supernova \n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlock = void 0;\nconst SDKDocumentationBlockBuilder_1 = require(\"./builder/SDKDocumentationBlockBuilder\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b;\n        this.id = model.persistentId;\n        // Map children. Children that are not supported by the data model natively should be ignored\n        this.children = model.children.map(c => SDKDocumentationBlockBuilder_1.DocumentationBlockBuilder.fromGenericModel(c, customBlocks, configuration)).filter(c => c !== undefined);\n        this.type = model.type;\n        this.beginsTypeChain = true; // Will be computed by resolver\n        this.endsTypeChain = true; // Will be computed by resolver\n        this.theme = model.theme ? model.theme : null;\n        this.variantKey = (_a = model.variantKey) !== null && _a !== void 0 ? _a : null;\n        this.blacklistedElementProperties = (_b = model.blacklistedElementProperties) !== null && _b !== void 0 ? _b : null;\n        if (model.userMetadata) {\n            this.userMetadata = JSON.parse(model.userMetadata);\n        }\n        else {\n            this.userMetadata = null;\n        }\n    }\n}\nexports.DocumentationPageBlock = DocumentationPageBlock;\n","\"use strict\";\n//\n//  DocumentationRichText.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationRichText = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDocumentationRichTextSpan_1 = require(\"./SDKDocumentationRichTextSpan\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationRichText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.spans = model.spans.map(s => new SDKDocumentationRichTextSpan_1.RichTextSpan(s));\n    }\n    /** Convert block into plain text, omitting any formatting */\n    asPlainText() {\n        return this.spans.map(s => s.text).join(\"\");\n    }\n}\nexports.DocumentationRichText = DocumentationRichText;\n","\"use strict\";\n//\n//  SDKRichTextSpan.ts\n//  Supernova \n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RichTextSpan = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDocumentationRichTextSpanAttribute_1 = require(\"./SDKDocumentationRichTextSpanAttribute\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass RichTextSpan {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.text = model.text;\n        this.attributes = model.attributes.map(a => new SDKDocumentationRichTextSpanAttribute_1.RichTextSpanAttribute(a));\n    }\n}\nexports.RichTextSpan = RichTextSpan;\n","\"use strict\";\n//\n//  SDKRichTextSpanAttribute.ts\n//  Supernova \n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RichTextSpanAttribute = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass RichTextSpanAttribute {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b;\n        this.type = model.type;\n        this.link = (_a = model.link) !== null && _a !== void 0 ? _a : null;\n        if (model.hasOwnProperty(\"openInNewWindow\")) {\n            this.openInNewWindow = model.openInNewWindow;\n        }\n        else {\n            this.openInNewWindow = false;\n        }\n        this.documentationItemId = (_b = model.documentationItemId) !== null && _b !== void 0 ? _b : null;\n    }\n}\nexports.RichTextSpanAttribute = RichTextSpanAttribute;\n","\"use strict\";\n//\n//  SDKDocumentationPageBlockAsset.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockAsset = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockAsset {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, blockBackgroundColor) {\n        var _a, _b, _c, _d;\n        this.assetId = model.componentAssetId;\n        this.title = ((_a = model.title) === null || _a === void 0 ? void 0 : _a.length) > 0 ? model.title : null;\n        this.description = ((_b = model.description) === null || _b === void 0 ? void 0 : _b.length) > 0 ? model.description : null;\n        this.backgroundColor = (_d = (_c = model.backgroundColor) !== null && _c !== void 0 ? _c : blockBackgroundColor) !== null && _d !== void 0 ? _d : null;\n    }\n}\nexports.DocumentationPageBlockAsset = DocumentationPageBlockAsset;\n","\"use strict\";\n//\n//  SDKDocumentationPageBlockAssets.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockAssets = void 0;\nconst SDKFrameAlignment_1 = require(\"../../enums/SDKFrameAlignment\");\nconst SDKFrameLayout_1 = require(\"../../enums/SDKFrameLayout\");\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\nconst SDKDocumentationPageBlockAsset_1 = require(\"./SDKDocumentationPageBlockAsset\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockAssets extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b, _c, _d, _e, _f;\n        super(model, customBlocks, configuration);\n        let color = (_b = (_a = model.figmaFrameProperties) === null || _a === void 0 ? void 0 : _a.color) !== null && _b !== void 0 ? _b : null;\n        this.properties = {\n            backgroundColor: color,\n            alignment: (_d = (_c = model.figmaFrameProperties) === null || _c === void 0 ? void 0 : _c.alignment) !== null && _d !== void 0 ? _d : SDKFrameAlignment_1.FrameAlignment.center,\n            layout: (_f = (_e = model.figmaFrameProperties) === null || _e === void 0 ? void 0 : _e.layout) !== null && _f !== void 0 ? _f : SDKFrameLayout_1.FrameLayout.c4\n        };\n        this.assets = model.componentAssets.map(f => new SDKDocumentationPageBlockAsset_1.DocumentationPageBlockAsset(f, color));\n    }\n}\nexports.DocumentationPageBlockAssets = DocumentationPageBlockAssets;\n","\"use strict\";\n//\n//  DocumentationPageBlockCallout.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockCallout = void 0;\nconst SDKDocumentationPageBlockText_1 = require(\"./SDKDocumentationPageBlockText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockCallout extends SDKDocumentationPageBlockText_1.DocumentationPageBlockText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.calloutType = model.calloutType;\n    }\n}\nexports.DocumentationPageBlockCallout = DocumentationPageBlockCallout;\n","\"use strict\";\n//\n//  DocumentationPageBlockCode.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockCode = void 0;\nconst SDKDocumentationPageBlockText_1 = require(\"./SDKDocumentationPageBlockText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockCode extends SDKDocumentationPageBlockText_1.DocumentationPageBlockText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b;\n        super(model, customBlocks, configuration);\n        this.codeLanguage = (_a = model.codeLanguage) !== null && _a !== void 0 ? _a : null;\n        this.caption = (_b = model.caption) !== null && _b !== void 0 ? _b : null;\n    }\n}\nexports.DocumentationPageBlockCode = DocumentationPageBlockCode;\n","\"use strict\";\n//\n//  DocumentationPageBlockColumn.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockColumn = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockColumn extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockColumn = DocumentationPageBlockColumn;\n","\"use strict\";\n//\n//  DocumentationPageBlockColumnItem.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockColumnItem = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockColumnItem extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.width = model.width;\n    }\n}\nexports.DocumentationPageBlockColumnItem = DocumentationPageBlockColumnItem;\n","\"use strict\";\n//\n//  DocumentationPageBlockCustom.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockCustom = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockCustom extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.key = model.customBlockKey;\n        // Attach custom block\n        this.block = null;\n        for (let customBlock of customBlocks) {\n            if (customBlock.key === model.customBlockKey) {\n                this.block = customBlock;\n            }\n        }\n        // If there is no block attached, it means the block was removed - ignore the payload resolution\n        if (!this.block) {\n            this.properties = {};\n            return;\n        }\n        // With proper custom block found, add default values for properties first\n        let properties = {};\n        for (let property of this.block.properties) {\n            properties[property.key] = property.default;\n        }\n        // Add overrides\n        for (let property of model.customBlockProperties) {\n            properties[property.key] = property.value;\n        }\n        this.properties = properties;\n    }\n}\nexports.DocumentationPageBlockCustom = DocumentationPageBlockCustom;\n","\"use strict\";\n//\n//  DocumentationPageBlockDivider.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockDivider = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockDivider extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockDivider = DocumentationPageBlockDivider;\n","\"use strict\";\n//\n//  DocumentationPageBlockEmbedFigma.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockEmbedFigma = void 0;\nconst SDKDocumentationPageBlockEmbedGeneric_1 = require(\"./SDKDocumentationPageBlockEmbedGeneric\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockEmbedFigma extends SDKDocumentationPageBlockEmbedGeneric_1.DocumentationPageBlockEmbedGeneric {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockEmbedFigma = DocumentationPageBlockEmbedFigma;\n","\"use strict\";\n//\n//  DocumentationPageBlockEmbedGeneric.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockEmbedGeneric = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKSize_1 = require(\"../../support/SDKSize\");\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockEmbedGeneric extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b, _c;\n        super(model, customBlocks, configuration);\n        this.url = (_a = model.url) !== null && _a !== void 0 ? _a : null;\n        this.size = new SDKSize_1.Size((_b = model.size) !== null && _b !== void 0 ? _b : null);\n        this.caption = (_c = model.caption) !== null && _c !== void 0 ? _c : null;\n    }\n}\nexports.DocumentationPageBlockEmbedGeneric = DocumentationPageBlockEmbedGeneric;\n","\"use strict\";\n//\n//  DocumentationPageBlockEmbedLink.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockEmbedLink = void 0;\nconst SDKDocumentationPageBlockEmbedGeneric_1 = require(\"./SDKDocumentationPageBlockEmbedGeneric\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockEmbedLink extends SDKDocumentationPageBlockEmbedGeneric_1.DocumentationPageBlockEmbedGeneric {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b, _c, _d, _e, _f;\n        super(model, customBlocks, configuration);\n        this.title = (_b = (_a = model.urlPreview) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : null;\n        this.description = (_d = (_c = model.urlPreview) === null || _c === void 0 ? void 0 : _c.description) !== null && _d !== void 0 ? _d : null;\n        this.thumbnailUrl = (_f = (_e = model.urlPreview) === null || _e === void 0 ? void 0 : _e.thumbnailUrl) !== null && _f !== void 0 ? _f : null;\n    }\n}\nexports.DocumentationPageBlockEmbedLink = DocumentationPageBlockEmbedLink;\n","\"use strict\";\n//\n//  DocumentationPageBlockEmbedStorybook.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockEmbedStorybook = void 0;\nconst SDKDocumentationPageBlockEmbedGeneric_1 = require(\"./SDKDocumentationPageBlockEmbedGeneric\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockEmbedStorybook extends SDKDocumentationPageBlockEmbedGeneric_1.DocumentationPageBlockEmbedGeneric {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockEmbedStorybook = DocumentationPageBlockEmbedStorybook;\n","\"use strict\";\n//\n//  DocumentationPageBlockEmbedYoutube.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockEmbedYoutube = void 0;\nconst SDKDocumentationPageBlockEmbedGeneric_1 = require(\"./SDKDocumentationPageBlockEmbedGeneric\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockEmbedYoutube extends SDKDocumentationPageBlockEmbedGeneric_1.DocumentationPageBlockEmbedGeneric {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockEmbedYoutube = DocumentationPageBlockEmbedYoutube;\n","\"use strict\";\n//\n//  DocumentationPageBlockFrame.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockFrame = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockFrame {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, blockBackgroundColor) {\n        var _a, _b, _c;\n        this.sourceFileId = model.sourceFileId;\n        this.sourceFrameId = model.sourceFrameId;\n        this.sourceFileName = model.origin.sourceFileName;\n        this.title = model.title.length > 0 ? model.title : (_a = model.origin.title) !== null && _a !== void 0 ? _a : null;\n        this.description = model.description.length > 0 ? model.description : null;\n        this.previewUrl = model.origin.previewUrl;\n        this.backgroundColor = (_c = (_b = model.backgroundColor) !== null && _b !== void 0 ? _b : blockBackgroundColor) !== null && _c !== void 0 ? _c : null;\n    }\n}\nexports.DocumentationPageBlockFrame = DocumentationPageBlockFrame;\n","\"use strict\";\n//\n//  DocumentationPageBlockFrames.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockFrames = void 0;\nconst SDKFrameAlignment_1 = require(\"../../enums/SDKFrameAlignment\");\nconst SDKFrameLayout_1 = require(\"../../enums/SDKFrameLayout\");\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\nconst SDKDocumentationPageBlockFrame_1 = require(\"./SDKDocumentationPageBlockFrame\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockFrames extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b, _c, _d, _e, _f;\n        super(model, customBlocks, configuration);\n        let color = (_b = (_a = model.figmaFrameProperties) === null || _a === void 0 ? void 0 : _a.color) !== null && _b !== void 0 ? _b : null;\n        this.properties = {\n            backgroundColor: color,\n            showTitles: model.figmaFrameProperties.showTitles,\n            alignment: (_d = (_c = model.figmaFrameProperties) === null || _c === void 0 ? void 0 : _c.alignment) !== null && _d !== void 0 ? _d : SDKFrameAlignment_1.FrameAlignment.center,\n            layout: (_f = (_e = model.figmaFrameProperties) === null || _e === void 0 ? void 0 : _e.layout) !== null && _f !== void 0 ? _f : SDKFrameLayout_1.FrameLayout.c4\n        };\n        this.frames = model.figmaFrames.map(f => new SDKDocumentationPageBlockFrame_1.DocumentationPageBlockFrame(f, color));\n    }\n}\nexports.DocumentationPageBlockFrames = DocumentationPageBlockFrames;\n","\"use strict\";\n//\n//  DocumentationPageBlockHeading.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockHeading = void 0;\nconst SDKDocumentationPageBlockText_1 = require(\"./SDKDocumentationPageBlockText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockHeading extends SDKDocumentationPageBlockText_1.DocumentationPageBlockText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.headingType = model.headingType;\n    }\n}\nexports.DocumentationPageBlockHeading = DocumentationPageBlockHeading;\n","\"use strict\";\n//\n//  DocumentationPageBlockImage.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockImage = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockImage extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b;\n        super(model, customBlocks, configuration);\n        this.url = (_a = model.assetUrl) !== null && _a !== void 0 ? _a : null;\n        this.caption = (_b = model.caption) !== null && _b !== void 0 ? _b : null;\n        this.alignment = model.alignment;\n    }\n}\nexports.DocumentationPageBlockImage = DocumentationPageBlockImage;\n","\"use strict\";\n//\n//  DocumentationPageOrderedListModel.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageOrderedList = void 0;\nconst SDKDocumentationPageBlockText_1 = require(\"./SDKDocumentationPageBlockText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageOrderedList extends SDKDocumentationPageBlockText_1.DocumentationPageBlockText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageOrderedList = DocumentationPageOrderedList;\n","\"use strict\";\n//\n//  DocumentationPageBlockQuote.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockQuote = void 0;\nconst SDKDocumentationPageBlockText_1 = require(\"./SDKDocumentationPageBlockText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockQuote extends SDKDocumentationPageBlockText_1.DocumentationPageBlockText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockQuote = DocumentationPageBlockQuote;\n","\"use strict\";\n//\n//  DocumentationPageBlockRenderCode.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockRenderCode = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst abab_1 = require(\"abab\");\nconst SDKAlignment_1 = require(\"../../enums/SDKAlignment\");\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\nvar DocumentationPageBlockRenderCodeSandboxAlignment;\n(function (DocumentationPageBlockRenderCodeSandboxAlignment) {\n    DocumentationPageBlockRenderCodeSandboxAlignment[\"start\"] = \"start\";\n    DocumentationPageBlockRenderCodeSandboxAlignment[\"center\"] = \"center\";\n    DocumentationPageBlockRenderCodeSandboxAlignment[\"end\"] = \"end\";\n})(DocumentationPageBlockRenderCodeSandboxAlignment || (DocumentationPageBlockRenderCodeSandboxAlignment = {}));\nvar DocumentationPageBlockRenderCodeEnvironmentType;\n(function (DocumentationPageBlockRenderCodeEnvironmentType) {\n    DocumentationPageBlockRenderCodeEnvironmentType[\"react\"] = \"react\";\n})(DocumentationPageBlockRenderCodeEnvironmentType || (DocumentationPageBlockRenderCodeEnvironmentType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockRenderCode extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        var _a, _b, _c, _d;\n        super(model, customBlocks, configuration);\n        this.alignment = model.alignment;\n        this.backgroundColor = (_b = (_a = model.backgroundColor) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n        this.showCode = model.renderCodeProperties.showCode;\n        this.height = (_d = (_c = model.size) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : null;\n        this.code = model.text.spans.map(s => s.text).join(\"\");\n        this.packageJSON = configuration.packageJson;\n        this.sandboxData = this.encodeSandboxData(configuration);\n        this.sandboxType = DocumentationPageBlockRenderCodeEnvironmentType.react;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Sandbox data encoding\n    encodeSandboxData(configuration) {\n        var _a, _b;\n        let localAlignment;\n        switch (this.alignment) {\n            case SDKAlignment_1.Alignment.center:\n                localAlignment = DocumentationPageBlockRenderCodeSandboxAlignment.center;\n                break;\n            default:\n                localAlignment = DocumentationPageBlockRenderCodeSandboxAlignment.start;\n                break;\n        }\n        let definition = {\n            type: DocumentationPageBlockRenderCodeEnvironmentType.react,\n            code: this.code,\n            packageJSON: configuration.packageJson,\n            visual: {\n                forcedHeight: this.height,\n                horizontalAlignment: localAlignment,\n                verticalAlignment: DocumentationPageBlockRenderCodeSandboxAlignment.center,\n                backgroundHex: (_a = this.backgroundColor) !== null && _a !== void 0 ? _a : null\n            },\n            registry: (_b = configuration.npmRegistry) !== null && _b !== void 0 ? _b : null\n        };\n        return this.btoaUnicode(JSON.stringify(definition));\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Data decoding unicode support\n    // Encoding UTF8 ⇢ base64\n    btoaUnicode(str) {\n        return abab_1.btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n    // Decoding base64 ⇢ UTF8\n    atobUnicode(str) {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n}\nexports.DocumentationPageBlockRenderCode = DocumentationPageBlockRenderCode;\n","\"use strict\";\n//\n//  DocumentationPageBlockShortcut.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockShortcut = exports.DocumentationPageBlockShortcutType = void 0;\nvar DocumentationPageBlockShortcutType;\n(function (DocumentationPageBlockShortcutType) {\n    DocumentationPageBlockShortcutType[\"external\"] = \"External\";\n    DocumentationPageBlockShortcutType[\"internal\"] = \"Internal\";\n})(DocumentationPageBlockShortcutType = exports.DocumentationPageBlockShortcutType || (exports.DocumentationPageBlockShortcutType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockShortcut {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a;\n        // First, configure type of the block properly\n        if (model.url) {\n            this.type = DocumentationPageBlockShortcutType.external;\n        }\n        else {\n            this.type = DocumentationPageBlockShortcutType.internal;\n        }\n        // Configure visual block information\n        this.title = this.shortcutTitleFromModel(model, this.type);\n        this.description = this.shortcutDescriptionFromModel(model, this.type);\n        this.previewUrl = this.shortcutPreviewUrlFromModel(model, this.type);\n        // Configure linking for pages and group inside documentation\n        if (this.type === DocumentationPageBlockShortcutType.internal &&\n            ((_a = model.documentationItemPreview) === null || _a === void 0 ? void 0 : _a.valid) &&\n            model.documentationItemId) {\n            this.internalId = model.documentationItemId;\n        }\n        else {\n            this.internalId = null;\n            // Configure for external URLs\n            if (this.type === DocumentationPageBlockShortcutType.external && model.url) {\n                this.externalUrl = model.url;\n            }\n            else {\n                this.externalUrl = null;\n            }\n        }\n    }\n    shortcutTitleFromModel(model, type) {\n        var _a, _b, _c, _d, _e;\n        let result = null;\n        if (model.title && model.title.trim().length > 0) {\n            result = model.title;\n        }\n        else if (type === DocumentationPageBlockShortcutType.internal) {\n            result = (_b = (_a = model.documentationItemPreview) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : null;\n        }\n        else if (type === DocumentationPageBlockShortcutType.external) {\n            result = (_e = (_d = (_c = model.urlPreview) === null || _c === void 0 ? void 0 : _c.title) !== null && _d !== void 0 ? _d : model.url) !== null && _e !== void 0 ? _e : null;\n        }\n        if (!result || result.trim().length === 0) {\n            return null;\n        }\n        return result;\n    }\n    shortcutDescriptionFromModel(model, type) {\n        var _a;\n        let result = null;\n        if (model.description && model.description.trim().length > 0) {\n            result = model.description;\n        }\n        else if (type === DocumentationPageBlockShortcutType.external) {\n            result = (_a = model.urlPreview) === null || _a === void 0 ? void 0 : _a.description;\n        }\n        if (!result || result.trim().length === 0) {\n            return null;\n        }\n        return result;\n    }\n    shortcutPreviewUrlFromModel(model, type) {\n        var _a, _b, _c;\n        return (_c = (_a = model.assetUrl) !== null && _a !== void 0 ? _a : (_b = model.urlPreview) === null || _b === void 0 ? void 0 : _b.thumbnailUrl) !== null && _c !== void 0 ? _c : null;\n    }\n}\nexports.DocumentationPageBlockShortcut = DocumentationPageBlockShortcut;\n","\"use strict\";\n//\n//  DocumentationPageBlockShortcuts.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockShortcuts = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\nconst SDKDocumentationPageBlockShortcut_1 = require(\"./SDKDocumentationPageBlockShortcut\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockShortcuts extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.shortcuts = model.shortcuts.map(s => new SDKDocumentationPageBlockShortcut_1.DocumentationPageBlockShortcut(s));\n    }\n}\nexports.DocumentationPageBlockShortcuts = DocumentationPageBlockShortcuts;\n","\"use strict\";\n//\n//  DocumentationPageBlockTab.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTab = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTab extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockTab = DocumentationPageBlockTab;\n","\"use strict\";\n//\n//  DocumentationPageBlockTabItem.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTabItem = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTabItem extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.caption = model.caption;\n    }\n}\nexports.DocumentationPageBlockTabItem = DocumentationPageBlockTabItem;\n","\"use strict\";\n//\n//  DocumentationPageBlockTable.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTable = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\nconst SDKDocumentationPageBlockTableColumn_1 = require(\"./SDKDocumentationPageBlockTableColumn\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTable extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.tableProperties = {\n            showBorders: model.tableProperties.showBorders,\n            showHeaderRow: model.tableProperties.showHeaderRow,\n            showHeaderColumn: model.tableProperties.showHeaderColumn,\n            columns: model.tableProperties.columns.map(c => new SDKDocumentationPageBlockTableColumn_1.DocumentationPageBlockTableColumn(c))\n        };\n    }\n}\nexports.DocumentationPageBlockTable = DocumentationPageBlockTable;\n","\"use strict\";\n//\n//  DocumentationPageBlockTableCell.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTableCell = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTableCell extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.columnId = model.columnId;\n        this.alignment = model.alignment;\n    }\n}\nexports.DocumentationPageBlockTableCell = DocumentationPageBlockTableCell;\n","\"use strict\";\n//\n//  DocumentationPageBlockTableColumn.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTableColumn = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTableColumn {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.id = model.id;\n        this.width = model.width;\n    }\n}\nexports.DocumentationPageBlockTableColumn = DocumentationPageBlockTableColumn;\n","\"use strict\";\n//\n//  DocumentationPageBlockTableRow.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTableRow = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTableRow extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageBlockTableRow = DocumentationPageBlockTableRow;\n","\"use strict\";\n//\n//  DocumentationPageBlockText.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockText = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\nconst SDKDocumentationRichText_1 = require(\"../SDKDocumentationRichText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockText extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.text = new SDKDocumentationRichText_1.DocumentationRichText(model.text);\n    }\n}\nexports.DocumentationPageBlockText = DocumentationPageBlockText;\n","\"use strict\";\n//\n//  DocumentationPageBlockToken.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockToken = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockToken extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.tokenId = model.designObjectId;\n    }\n}\nexports.DocumentationPageBlockToken = DocumentationPageBlockToken;\n","\"use strict\";\n//\n//  DocumentationPageBlockTokenGroup.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTokenGroup = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTokenGroup extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.groupId = model.designObjectId;\n        this.showNestedGroups = model.showNestedGroups;\n    }\n}\nexports.DocumentationPageBlockTokenGroup = DocumentationPageBlockTokenGroup;\n","\"use strict\";\n//\n//  DocumentationPageBlockTokenList.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockTokenList = void 0;\nconst SDKDocumentationPageBlock_1 = require(\"../SDKDocumentationPageBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageBlockTokenList extends SDKDocumentationPageBlock_1.DocumentationPageBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n        this.tokenIds = model.designObjectIds;\n    }\n}\nexports.DocumentationPageBlockTokenList = DocumentationPageBlockTokenList;\n","\"use strict\";\n//\n//  DocumentationPageUnorderedList.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageUnorderedList = void 0;\nconst SDKDocumentationPageBlockText_1 = require(\"./SDKDocumentationPageBlockText\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationPageUnorderedList extends SDKDocumentationPageBlockText_1.DocumentationPageBlockText {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, customBlocks, configuration) {\n        super(model, customBlocks, configuration);\n    }\n}\nexports.DocumentationPageUnorderedList = DocumentationPageUnorderedList;\n","\"use strict\";\n//\n//  DocumentationPageBlock.ts\n//  Pulsar Language\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationBlockBuilder = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDocumentationPageBlockType_1 = require(\"../../enums/SDKDocumentationPageBlockType\");\nconst SDKDocumentationPageBlockAssets_1 = require(\"../blocks/SDKDocumentationPageBlockAssets\");\nconst SDKDocumentationPageBlockCallout_1 = require(\"../blocks/SDKDocumentationPageBlockCallout\");\nconst SDKDocumentationPageBlockCode_1 = require(\"../blocks/SDKDocumentationPageBlockCode\");\nconst SDKDocumentationPageBlockColumn_1 = require(\"../blocks/SDKDocumentationPageBlockColumn\");\nconst SDKDocumentationPageBlockColumnItem_1 = require(\"../blocks/SDKDocumentationPageBlockColumnItem\");\nconst SDKDocumentationPageBlockCustom_1 = require(\"../blocks/SDKDocumentationPageBlockCustom\");\nconst SDKDocumentationPageBlockDivider_1 = require(\"../blocks/SDKDocumentationPageBlockDivider\");\nconst SDKDocumentationPageBlockEmbedFigma_1 = require(\"../blocks/SDKDocumentationPageBlockEmbedFigma\");\nconst SDKDocumentationPageBlockEmbedGeneric_1 = require(\"../blocks/SDKDocumentationPageBlockEmbedGeneric\");\nconst SDKDocumentationPageBlockEmbedLink_1 = require(\"../blocks/SDKDocumentationPageBlockEmbedLink\");\nconst SDKDocumentationPageBlockEmbedStorybook_1 = require(\"../blocks/SDKDocumentationPageBlockEmbedStorybook\");\nconst SDKDocumentationPageBlockEmbedYoutube_1 = require(\"../blocks/SDKDocumentationPageBlockEmbedYoutube\");\nconst SDKDocumentationPageBlockFrames_1 = require(\"../blocks/SDKDocumentationPageBlockFrames\");\nconst SDKDocumentationPageBlockHeading_1 = require(\"../blocks/SDKDocumentationPageBlockHeading\");\nconst SDKDocumentationPageBlockImage_1 = require(\"../blocks/SDKDocumentationPageBlockImage\");\nconst SDKDocumentationPageBlockOrderedList_1 = require(\"../blocks/SDKDocumentationPageBlockOrderedList\");\nconst SDKDocumentationPageBlockQuote_1 = require(\"../blocks/SDKDocumentationPageBlockQuote\");\nconst SDKDocumentationPageBlockRenderCode_1 = require(\"../blocks/SDKDocumentationPageBlockRenderCode\");\nconst SDKDocumentationPageBlockShortcuts_1 = require(\"../blocks/SDKDocumentationPageBlockShortcuts\");\nconst SDKDocumentationPageBlockTab_1 = require(\"../blocks/SDKDocumentationPageBlockTab\");\nconst SDKDocumentationPageBlockTabItem_1 = require(\"../blocks/SDKDocumentationPageBlockTabItem\");\nconst SDKDocumentationPageBlockTable_1 = require(\"../blocks/SDKDocumentationPageBlockTable\");\nconst SDKDocumentationPageBlockTableCell_1 = require(\"../blocks/SDKDocumentationPageBlockTableCell\");\nconst SDKDocumentationPageBlockTableRow_1 = require(\"../blocks/SDKDocumentationPageBlockTableRow\");\nconst SDKDocumentationPageBlockText_1 = require(\"../blocks/SDKDocumentationPageBlockText\");\nconst SDKDocumentationPageBlockToken_1 = require(\"../blocks/SDKDocumentationPageBlockToken\");\nconst SDKDocumentationPageBlockTokenGroup_1 = require(\"../blocks/SDKDocumentationPageBlockTokenGroup\");\nconst SDKDocumentationPageBlockTokenList_1 = require(\"../blocks/SDKDocumentationPageBlockTokenList\");\nconst SDKDocumentationPageBlockUnorderedList_1 = require(\"../blocks/SDKDocumentationPageBlockUnorderedList\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationBlockBuilder {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static\n    static fromGenericModel(model, customBlocks, configuration) {\n        switch (model.type) {\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.text:\n                return new SDKDocumentationPageBlockText_1.DocumentationPageBlockText(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.heading:\n                return new SDKDocumentationPageBlockHeading_1.DocumentationPageBlockHeading(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.code:\n                return new SDKDocumentationPageBlockCode_1.DocumentationPageBlockCode(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.unorderedList:\n                return new SDKDocumentationPageBlockUnorderedList_1.DocumentationPageUnorderedList(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.orderedList:\n                return new SDKDocumentationPageBlockOrderedList_1.DocumentationPageOrderedList(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.quote:\n                return new SDKDocumentationPageBlockQuote_1.DocumentationPageBlockQuote(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.callout:\n                return new SDKDocumentationPageBlockCallout_1.DocumentationPageBlockCallout(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.divider:\n                return new SDKDocumentationPageBlockDivider_1.DocumentationPageBlockDivider(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.image:\n                return new SDKDocumentationPageBlockImage_1.DocumentationPageBlockImage(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.link:\n                return new SDKDocumentationPageBlockEmbedLink_1.DocumentationPageBlockEmbedLink(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.token:\n                return new SDKDocumentationPageBlockToken_1.DocumentationPageBlockToken(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tokenGroup:\n                return new SDKDocumentationPageBlockTokenGroup_1.DocumentationPageBlockTokenGroup(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tokenList:\n                return new SDKDocumentationPageBlockTokenList_1.DocumentationPageBlockTokenList(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.shortcuts:\n                return new SDKDocumentationPageBlockShortcuts_1.DocumentationPageBlockShortcuts(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.figmaEmbed:\n                return new SDKDocumentationPageBlockEmbedFigma_1.DocumentationPageBlockEmbedFigma(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.youtubeEmbed:\n                return new SDKDocumentationPageBlockEmbedYoutube_1.DocumentationPageBlockEmbedYoutube(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.storybookEmbed:\n                return new SDKDocumentationPageBlockEmbedStorybook_1.DocumentationPageBlockEmbedStorybook(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.genericEmbed:\n                return new SDKDocumentationPageBlockEmbedGeneric_1.DocumentationPageBlockEmbedGeneric(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.figmaFrames:\n                return new SDKDocumentationPageBlockFrames_1.DocumentationPageBlockFrames(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.componentAssets:\n                return new SDKDocumentationPageBlockAssets_1.DocumentationPageBlockAssets(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.custom:\n                return new SDKDocumentationPageBlockCustom_1.DocumentationPageBlockCustom(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.renderCode:\n                return new SDKDocumentationPageBlockRenderCode_1.DocumentationPageBlockRenderCode(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.column:\n                return new SDKDocumentationPageBlockColumn_1.DocumentationPageBlockColumn(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.columnItem:\n                return new SDKDocumentationPageBlockColumnItem_1.DocumentationPageBlockColumnItem(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tabs:\n                return new SDKDocumentationPageBlockTab_1.DocumentationPageBlockTab(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tabItem:\n                return new SDKDocumentationPageBlockTabItem_1.DocumentationPageBlockTabItem(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.table:\n                return new SDKDocumentationPageBlockTable_1.DocumentationPageBlockTable(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tableCell:\n                return new SDKDocumentationPageBlockTableCell_1.DocumentationPageBlockTableCell(model, customBlocks, configuration);\n            case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tableRow:\n                return new SDKDocumentationPageBlockTableRow_1.DocumentationPageBlockTableRow(model, customBlocks, configuration);\n            default:\n                throw new Error(`Unsupported native documentation block type ${model.type}, please add core definition of the block`);\n        }\n    }\n}\nexports.DocumentationBlockBuilder = DocumentationBlockBuilder;\n","\"use strict\";\n//\n//  DocumentationItemConfiguration.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationItemConfiguration = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKDocumentationItemHeader_1 = require(\"./SDKDocumentationItemHeader\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationItemConfiguration {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.header = new SDKDocumentationItemHeader_1.DocumentationItemHeader(model.header);\n        this.showSidebar = model.showSidebar;\n    }\n}\nexports.DocumentationItemConfiguration = DocumentationItemConfiguration;\n","\"use strict\";\n//\n//  SDKDocumentationItemHeader.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationItemHeader = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DocumentationItemHeader {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b, _c, _d;\n        this.backgroundImageAssetUrl = (_a = model.backgroundImageAssetUrl) !== null && _a !== void 0 ? _a : null;\n        this.backgroundImageAssetId = (_b = model.backgroundImageAssetId) !== null && _b !== void 0 ? _b : null;\n        this.backgroundImageScaleType = model.backgroundImageScaleType;\n        this.description = model.description;\n        this.alignment = model.alignment;\n        this.foregroundColor = (_c = model.foregroundColor) !== null && _c !== void 0 ? _c : null;\n        this.backgroundColor = (_d = model.backgroundColor) !== null && _d !== void 0 ? _d : null;\n        this.showBackgroundOverlay = model.showBackgroundOverlay;\n        this.showCoverText = model.showCoverText;\n        this.minHeight = model.minHeight;\n    }\n}\nexports.DocumentationItemHeader = DocumentationItemHeader;\n","\"use strict\";\n//\n//  ElementProperty.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementProperty = exports.ElementPropertyLinkElementType = exports.ElementPropertyTargetElementType = exports.ElementPropertyType = void 0;\nconst SDKElementPropertyOption_1 = require(\"./SDKElementPropertyOption\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\nvar ElementPropertyType;\n(function (ElementPropertyType) {\n    ElementPropertyType[\"text\"] = \"Text\";\n    ElementPropertyType[\"number\"] = \"Number\";\n    ElementPropertyType[\"boolean\"] = \"Boolean\";\n    ElementPropertyType[\"select\"] = \"Select\";\n    ElementPropertyType[\"generic\"] = \"Generic\";\n    ElementPropertyType[\"link\"] = \"Link\";\n    ElementPropertyType[\"url\"] = \"URL\";\n})(ElementPropertyType = exports.ElementPropertyType || (exports.ElementPropertyType = {}));\nvar ElementPropertyTargetElementType;\n(function (ElementPropertyTargetElementType) {\n    ElementPropertyTargetElementType[\"token\"] = \"Token\";\n    ElementPropertyTargetElementType[\"component\"] = \"Component\";\n    ElementPropertyTargetElementType[\"documentationPage\"] = \"DocumentationPage\";\n})(ElementPropertyTargetElementType = exports.ElementPropertyTargetElementType || (exports.ElementPropertyTargetElementType = {}));\nvar ElementPropertyLinkElementType;\n(function (ElementPropertyLinkElementType) {\n    ElementPropertyLinkElementType[\"documentationItem\"] = \"DocumentationItem\";\n    ElementPropertyLinkElementType[\"figmaComponent\"] = \"FigmaComponent\";\n})(ElementPropertyLinkElementType = exports.ElementPropertyLinkElementType || (exports.ElementPropertyLinkElementType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ElementProperty {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b;\n        this.id = model.id;\n        this.persistentId = model.persistentId;\n        this.designSystemVersionId = model.designSystemVersionId;\n        this.name = model.meta.name;\n        this.codeName = model.codeName;\n        this.description = (_a = model.meta.description) !== null && _a !== void 0 ? _a : null;\n        this.propertyType = model.type;\n        this.targetElementType = model.targetElementType;\n        this.linkElementType = (_b = model.linkElementType) !== null && _b !== void 0 ? _b : null;\n        this.options = model.options ? model.options.map(o => new SDKElementPropertyOption_1.ElementPropertyOption(o)) : null;\n    }\n}\nexports.ElementProperty = ElementProperty;\n","\"use strict\";\n//\n//  ElementPropertyOption.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementPropertyOption = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ElementPropertyOption {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b;\n        this.id = model.id;\n        this.name = model.name;\n        this.backgroundColor = (_b = (_a = model.backgroundColor) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n    }\n}\nexports.ElementPropertyOption = ElementPropertyOption;\n","\"use strict\";\n//\n//  ElementPropertyValue.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElementPropertyValue = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ElementPropertyValue {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.id = model.id;\n        this.designSystemVersionId = model.designSystemVersionId;\n        if (model.hasOwnProperty(\"value\")) {\n            this.value = model.value;\n        }\n        else {\n            this.value = null;\n        }\n        this.definitionId = model.definitionId;\n        this.targetElementId = model.targetElementId;\n    }\n}\nexports.ElementPropertyValue = ElementPropertyValue;\n","\"use strict\";\n//\n//  SDKAlignment.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Alignment = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar Alignment;\n(function (Alignment) {\n    Alignment[\"left\"] = \"Left\";\n    Alignment[\"center\"] = \"Center\";\n    Alignment[\"stretch\"] = \"Stretch\";\n})(Alignment = exports.Alignment || (exports.Alignment = {}));\n","\"use strict\";\n//\n//  SDKAssetFormat.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssetFormat = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar AssetFormat;\n(function (AssetFormat) {\n    AssetFormat[\"png\"] = \"png\";\n    AssetFormat[\"pdf\"] = \"pdf\";\n    AssetFormat[\"svg\"] = \"svg\";\n})(AssetFormat = exports.AssetFormat || (exports.AssetFormat = {}));\n","\"use strict\";\n//\n//  SDKAssetScale.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssetScale = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar AssetScale;\n(function (AssetScale) {\n    AssetScale[\"x1\"] = \"x1\";\n    AssetScale[\"x2\"] = \"x2\";\n    AssetScale[\"x3\"] = \"x3\";\n    AssetScale[\"x4\"] = \"x4\";\n})(AssetScale = exports.AssetScale || (exports.AssetScale = {}));\n","\"use strict\";\n//\n//  SDKAssetScaleType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssetScaleType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar AssetScaleType;\n(function (AssetScaleType) {\n    AssetScaleType[\"aspectFill\"] = \"AspectFill\";\n    AssetScaleType[\"aspectFit\"] = \"AspectFit\";\n})(AssetScaleType = exports.AssetScaleType || (exports.AssetScaleType = {}));\n","\"use strict\";\n//\n//  SDKBlurType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlurType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar BlurType;\n(function (BlurType) {\n    BlurType[\"layer\"] = \"Layer\";\n    BlurType[\"background\"] = \"Background\";\n})(BlurType = exports.BlurType || (exports.BlurType = {}));\n","\"use strict\";\n//\n//  SDKBorderPosition.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BorderPosition = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar BorderPosition;\n(function (BorderPosition) {\n    BorderPosition[\"inside\"] = \"Inside\";\n    BorderPosition[\"center\"] = \"Center\";\n    BorderPosition[\"outside\"] = \"Outside\";\n})(BorderPosition = exports.BorderPosition || (exports.BorderPosition = {}));\n","\"use strict\";\n//\n//  SDKDocumentationCalloutType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationCalloutType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar DocumentationCalloutType;\n(function (DocumentationCalloutType) {\n    DocumentationCalloutType[\"info\"] = \"Info\";\n    DocumentationCalloutType[\"success\"] = \"Success\";\n    DocumentationCalloutType[\"warning\"] = \"Warning\";\n    DocumentationCalloutType[\"error\"] = \"Error\";\n})(DocumentationCalloutType = exports.DocumentationCalloutType || (exports.DocumentationCalloutType = {}));\n","\"use strict\";\n//\n//  SDKDocumentationGroupBehavior.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationGroupBehavior = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar DocumentationGroupBehavior;\n(function (DocumentationGroupBehavior) {\n    DocumentationGroupBehavior[\"group\"] = \"Group\";\n    DocumentationGroupBehavior[\"tabs\"] = \"Tabs\";\n})(DocumentationGroupBehavior = exports.DocumentationGroupBehavior || (exports.DocumentationGroupBehavior = {}));\n","\"use strict\";\n//\n//  SDKDocumentationHeadingType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationHeadingType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar DocumentationHeadingType;\n(function (DocumentationHeadingType) {\n    DocumentationHeadingType[DocumentationHeadingType[\"h1\"] = 1] = \"h1\";\n    DocumentationHeadingType[DocumentationHeadingType[\"h2\"] = 2] = \"h2\";\n    DocumentationHeadingType[DocumentationHeadingType[\"h3\"] = 3] = \"h3\";\n})(DocumentationHeadingType = exports.DocumentationHeadingType || (exports.DocumentationHeadingType = {}));\n","\"use strict\";\n//\n//  SDKDocumentationItemType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationItemType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar DocumentationItemType;\n(function (DocumentationItemType) {\n    DocumentationItemType[\"group\"] = \"Group\";\n    DocumentationItemType[\"page\"] = \"Page\";\n})(DocumentationItemType = exports.DocumentationItemType || (exports.DocumentationItemType = {}));\n","\"use strict\";\n//\n//  DocumentationPageBlockThemeType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockThemeType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar DocumentationPageBlockThemeType;\n(function (DocumentationPageBlockThemeType) {\n    DocumentationPageBlockThemeType[\"override\"] = \"Override\";\n    DocumentationPageBlockThemeType[\"comparison\"] = \"Comparison\";\n})(DocumentationPageBlockThemeType = exports.DocumentationPageBlockThemeType || (exports.DocumentationPageBlockThemeType = {}));\n","\"use strict\";\n//\n//  SDKDocumentationPageBlockType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentationPageBlockType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar DocumentationPageBlockType;\n(function (DocumentationPageBlockType) {\n    DocumentationPageBlockType[\"text\"] = \"Text\";\n    DocumentationPageBlockType[\"heading\"] = \"Heading\";\n    DocumentationPageBlockType[\"code\"] = \"Code\";\n    DocumentationPageBlockType[\"unorderedList\"] = \"UnorderedList\";\n    DocumentationPageBlockType[\"orderedList\"] = \"OrderedList\";\n    DocumentationPageBlockType[\"quote\"] = \"Quote\";\n    DocumentationPageBlockType[\"callout\"] = \"Callout\";\n    DocumentationPageBlockType[\"divider\"] = \"Divider\";\n    DocumentationPageBlockType[\"image\"] = \"Image\";\n    DocumentationPageBlockType[\"token\"] = \"Token\";\n    DocumentationPageBlockType[\"tokenList\"] = \"TokenList\";\n    DocumentationPageBlockType[\"tokenGroup\"] = \"TokenGroup\";\n    DocumentationPageBlockType[\"shortcuts\"] = \"Shortcuts\";\n    DocumentationPageBlockType[\"link\"] = \"Link\";\n    DocumentationPageBlockType[\"figmaEmbed\"] = \"FigmaEmbed\";\n    DocumentationPageBlockType[\"youtubeEmbed\"] = \"YoutubeEmbed\";\n    DocumentationPageBlockType[\"storybookEmbed\"] = \"StorybookEmbed\";\n    DocumentationPageBlockType[\"genericEmbed\"] = \"Embed\";\n    DocumentationPageBlockType[\"figmaFrames\"] = \"FigmaFrames\";\n    DocumentationPageBlockType[\"custom\"] = \"Custom\";\n    DocumentationPageBlockType[\"renderCode\"] = \"RenderCode\";\n    DocumentationPageBlockType[\"componentAssets\"] = \"ComponentAssets\";\n    DocumentationPageBlockType[\"column\"] = \"Column\";\n    DocumentationPageBlockType[\"columnItem\"] = \"ColumnItem\";\n    DocumentationPageBlockType[\"tabs\"] = \"Tabs\";\n    DocumentationPageBlockType[\"tabItem\"] = \"TabItem\";\n    DocumentationPageBlockType[\"table\"] = \"Table\";\n    DocumentationPageBlockType[\"tableCell\"] = \"TableCell\";\n    DocumentationPageBlockType[\"tableRow\"] = \"TableRow\";\n})(DocumentationPageBlockType = exports.DocumentationPageBlockType || (exports.DocumentationPageBlockType = {}));\n","\"use strict\";\n//\n//  SDKFrameAlignment.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameAlignment = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar FrameAlignment;\n(function (FrameAlignment) {\n    FrameAlignment[\"frameHeight\"] = \"FrameHeight\";\n    FrameAlignment[\"center\"] = \"Center\";\n})(FrameAlignment = exports.FrameAlignment || (exports.FrameAlignment = {}));\n","\"use strict\";\n//\n//  SDKFrameLayout.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameLayout = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar FrameLayout;\n(function (FrameLayout) {\n    FrameLayout[\"c8\"] = \"C8\";\n    FrameLayout[\"c7\"] = \"C7\";\n    FrameLayout[\"c6\"] = \"C6\";\n    FrameLayout[\"c5\"] = \"C5\";\n    FrameLayout[\"c4\"] = \"C4\";\n    FrameLayout[\"c3\"] = \"C3\";\n    FrameLayout[\"c2\"] = \"C2\";\n    FrameLayout[\"c1\"] = \"C1\";\n    FrameLayout[\"c175\"] = \"C1_75\";\n})(FrameLayout = exports.FrameLayout || (exports.FrameLayout = {}));\n","\"use strict\";\n//\n//  SDKGradientType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GradientType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"Linear\";\n    GradientType[\"radial\"] = \"Radial\";\n    GradientType[\"angular\"] = \"Angular\";\n})(GradientType = exports.GradientType || (exports.GradientType = {}));\n","\"use strict\";\n//\n//  SDKRichTextSpanAttributeType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RichTextSpanAttributeType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar RichTextSpanAttributeType;\n(function (RichTextSpanAttributeType) {\n    RichTextSpanAttributeType[\"bold\"] = \"Bold\";\n    RichTextSpanAttributeType[\"italic\"] = \"Italic\";\n    RichTextSpanAttributeType[\"link\"] = \"Link\";\n    RichTextSpanAttributeType[\"strikethrough\"] = \"Strikethrough\";\n    RichTextSpanAttributeType[\"code\"] = \"Code\";\n})(RichTextSpanAttributeType = exports.RichTextSpanAttributeType || (exports.RichTextSpanAttributeType = {}));\n","\"use strict\";\n//\n//  SDKShadowType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShadowType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar ShadowType;\n(function (ShadowType) {\n    ShadowType[\"drop\"] = \"Drop\";\n    ShadowType[\"inner\"] = \"Inner\";\n})(ShadowType = exports.ShadowType || (exports.ShadowType = {}));\n","\"use strict\";\n//\n//  SDKTextCase.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextCase = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar TextCase;\n(function (TextCase) {\n    TextCase[\"original\"] = \"Original\";\n    TextCase[\"upper\"] = \"Upper\";\n    TextCase[\"lower\"] = \"Lower\";\n    TextCase[\"camel\"] = \"Camel\";\n})(TextCase = exports.TextCase || (exports.TextCase = {}));\n","\"use strict\";\n//\n//  SDKTextDecoration.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDecoration = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Source type enum\nvar TextDecoration;\n(function (TextDecoration) {\n    TextDecoration[\"original\"] = \"None\";\n    TextDecoration[\"underline\"] = \"Underline\";\n    TextDecoration[\"strikethrough\"] = \"Strikethrough\";\n})(TextDecoration = exports.TextDecoration || (exports.TextDecoration = {}));\n","\"use strict\";\n//\n//  SDKTokenType.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Token type enum\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"color\"] = \"Color\";\n    TokenType[\"typography\"] = \"Typography\";\n    TokenType[\"radius\"] = \"Radius\";\n    TokenType[\"font\"] = \"Font\";\n    TokenType[\"measure\"] = \"Measure\";\n    TokenType[\"shadow\"] = \"Shadow\";\n    TokenType[\"border\"] = \"Border\";\n    TokenType[\"gradient\"] = \"Gradient\";\n    TokenType[\"text\"] = \"Text\";\n    TokenType[\"blur\"] = \"Blur\";\n    TokenType[\"generic\"] = \"GenericToken\";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\n","\"use strict\";\n//\n//  SDKUnit.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Unit = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Token type enum\nvar Unit;\n(function (Unit) {\n    Unit[\"pixels\"] = \"Pixels\";\n    Unit[\"points\"] = \"Points\";\n    Unit[\"percent\"] = \"Percent\";\n    Unit[\"ems\"] = \"Ems\";\n})(Unit = exports.Unit || (exports.Unit = {}));\n","\"use strict\";\n//\n//  SDKExporter.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Exporter = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKExporterCustomBlock_1 = require(\"./custom_blocks/SDKExporterCustomBlock\");\nconst SDKExporterCustomBlockVariant_1 = require(\"./custom_blocks/SDKExporterCustomBlockVariant\");\nconst SDKExporterConfigurationProperty_1 = require(\"./custom_properties/SDKExporterConfigurationProperty\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- -- - --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass Exporter {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(data) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.id = data.id;\n        this.packageId = data.packageId;\n        this.isPrivate = data.isPrivate;\n        this.isDefaultDocumentationExporter = data.isDefaultDocumentationExporter;\n        this.usesBrands = data.usesBrands;\n        this.name = data.name;\n        this.description = (_a = data.description) !== null && _a !== void 0 ? _a : null;\n        this.version = data.version;\n        this.author = (_b = data.author) !== null && _b !== void 0 ? _b : null;\n        this.organization = (_c = data.organization) !== null && _c !== void 0 ? _c : null;\n        this.homepage = (_d = data.homepage) !== null && _d !== void 0 ? _d : null;\n        this.readme = (_e = data.readme) !== null && _e !== void 0 ? _e : null;\n        this.iconURL = (_f = data.iconURL) !== null && _f !== void 0 ? _f : null;\n        this.tags = (_g = data.tags) !== null && _g !== void 0 ? _g : [];\n        this.origin = {\n            repositoryUrl: data.githubUrl,\n            repositoryBranch: (_h = data.githubBranch) !== null && _h !== void 0 ? _h : null,\n            repositoryDirectory: (_j = data.githubDirectory) !== null && _j !== void 0 ? _j : null\n        };\n        let variants = new Array();\n        if (data.blockVariants) {\n            for (let [key, value] of Object.entries(data.blockVariants)) {\n                for (let v of value) {\n                    let variant = new SDKExporterCustomBlockVariant_1.ExporterCustomBlockVariant(v, key);\n                    variants.push(variant);\n                }\n            }\n        }\n        this.contributes = {\n            blockVariants: variants,\n            blocks: data.customBlocks ? data.customBlocks.map(b => new SDKExporterCustomBlock_1.ExporterCustomBlock(b)) : [],\n            configuration: data.configurationProperties ? data.configurationProperties.map(c => new SDKExporterConfigurationProperty_1.ExporterConfigurationProperty(c, null)) : [] // in this case, configuration property is just settings and so it doesn't have value\n        };\n    }\n}\nexports.Exporter = Exporter;\n","\"use strict\";\n//\n//  SDKExporterCustomBlock.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExporterCustomBlock = exports.ExporterCustomBlockMode = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKExporterCustomBlockProperty_1 = require(\"./SDKExporterCustomBlockProperty\");\nvar ExporterCustomBlockMode;\n(function (ExporterCustomBlockMode) {\n    ExporterCustomBlockMode[\"block\"] = \"block\";\n})(ExporterCustomBlockMode = exports.ExporterCustomBlockMode || (exports.ExporterCustomBlockMode = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ExporterCustomBlock {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a;\n        this.key = model.key;\n        this.title = model.title;\n        this.description = model.description;\n        this.category = model.category;\n        this.iconUrl = (_a = model.iconURL) !== null && _a !== void 0 ? _a : null;\n        this.mode = model.mode;\n        this.properties = model.properties.map(p => new SDKExporterCustomBlockProperty_1.ExporterCustomBlockProperty(p));\n    }\n}\nexports.ExporterCustomBlock = ExporterCustomBlock;\n","\"use strict\";\n//\n//  SDKExporterCustomBlockProperty.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExporterCustomBlockProperty = exports.ExporterCustomBlockPropertyInputType = exports.ExporterCustomBlockPropertyType = void 0;\nvar ExporterCustomBlockPropertyType;\n(function (ExporterCustomBlockPropertyType) {\n    ExporterCustomBlockPropertyType[\"string\"] = \"string\";\n    ExporterCustomBlockPropertyType[\"number\"] = \"number\";\n    ExporterCustomBlockPropertyType[\"boolean\"] = \"boolean\";\n    ExporterCustomBlockPropertyType[\"enum\"] = \"enum\";\n    ExporterCustomBlockPropertyType[\"image\"] = \"image\";\n    ExporterCustomBlockPropertyType[\"color\"] = \"color\";\n    ExporterCustomBlockPropertyType[\"typography\"] = \"typography\";\n})(ExporterCustomBlockPropertyType = exports.ExporterCustomBlockPropertyType || (exports.ExporterCustomBlockPropertyType = {}));\nvar ExporterCustomBlockPropertyInputType;\n(function (ExporterCustomBlockPropertyInputType) {\n    ExporterCustomBlockPropertyInputType[\"plain\"] = \"plain\";\n    ExporterCustomBlockPropertyInputType[\"code\"] = \"code\";\n})(ExporterCustomBlockPropertyInputType = exports.ExporterCustomBlockPropertyInputType || (exports.ExporterCustomBlockPropertyInputType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ExporterCustomBlockProperty {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(data) {\n        var _a, _b, _c;\n        this.label = data.label;\n        this.key = data.key;\n        this.type = data.type;\n        this.inputType = (_a = data.inputType) !== null && _a !== void 0 ? _a : ExporterCustomBlockPropertyInputType.plain;\n        this.isMultiline = data.isMultiline;\n        this.default = (_b = data.default) !== null && _b !== void 0 ? _b : null;\n        this.values = (_c = data.values) !== null && _c !== void 0 ? _c : [];\n    }\n}\nexports.ExporterCustomBlockProperty = ExporterCustomBlockProperty;\n","\"use strict\";\n//\n//  SDKExporterCustomBlockVariant.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExporterCustomBlockVariant = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ExporterCustomBlockVariant {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, blockKey) {\n        this.blockKey = blockKey;\n        this.variantKey = model.key;\n        this.name = model.name;\n        this.isDefault = model.hasOwnProperty(\"isDefault\") ? model.isDefault : false;\n    }\n}\nexports.ExporterCustomBlockVariant = ExporterCustomBlockVariant;\n","\"use strict\";\n//\n//  SDKExporterConfigurationProperty.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExporterConfigurationProperty = exports.ExporterConfigurationPropertyInputType = exports.ExporterConfigurationPropertyType = void 0;\nvar ExporterConfigurationPropertyType;\n(function (ExporterConfigurationPropertyType) {\n    ExporterConfigurationPropertyType[\"string\"] = \"string\";\n    ExporterConfigurationPropertyType[\"number\"] = \"number\";\n    ExporterConfigurationPropertyType[\"boolean\"] = \"boolean\";\n    ExporterConfigurationPropertyType[\"enum\"] = \"enum\";\n    ExporterConfigurationPropertyType[\"image\"] = \"image\";\n    ExporterConfigurationPropertyType[\"color\"] = \"color\";\n    ExporterConfigurationPropertyType[\"typography\"] = \"typography\";\n})(ExporterConfigurationPropertyType = exports.ExporterConfigurationPropertyType || (exports.ExporterConfigurationPropertyType = {}));\nvar ExporterConfigurationPropertyInputType;\n(function (ExporterConfigurationPropertyInputType) {\n    ExporterConfigurationPropertyInputType[\"plain\"] = \"plain\";\n    ExporterConfigurationPropertyInputType[\"code\"] = \"code\";\n})(ExporterConfigurationPropertyInputType = exports.ExporterConfigurationPropertyInputType || (exports.ExporterConfigurationPropertyInputType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ExporterConfigurationProperty {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(data, value) {\n        var _a, _b, _c;\n        this.label = data.label;\n        this.category = data.category;\n        this.description = data.description;\n        this.key = data.key;\n        this.type = data.type;\n        this.inputType = (_a = data.inputType) !== null && _a !== void 0 ? _a : ExporterConfigurationPropertyInputType.plain;\n        this.isMultiline = data.isMultiline;\n        this.default = (_b = data.default) !== null && _b !== void 0 ? _b : null;\n        this.values = (_c = data.values) !== null && _c !== void 0 ? _c : [];\n        this.value = value !== null && value !== void 0 ? value : this.default;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Methods\n    updateValue(value) {\n        this.value = value;\n    }\n}\nexports.ExporterConfigurationProperty = ExporterConfigurationProperty;\n","\"use strict\";\n//\n//  SDKAssetGroup.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssetGroup = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass AssetGroup {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.id = model.persistentId;\n        this.brandId = model.brandId;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.isRoot = model.isRoot;\n        this.childrenIds = model.childrenIds;\n        this.path = new Array();\n        this.assetIds = new Array();\n        this.subgroups = new Array();\n        this.parent = null;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    addChild(group) {\n        this.subgroups.push(group);\n    }\n    addChildren(groups) {\n        this.subgroups = this.subgroups.concat(groups);\n    }\n    setPath(segments) {\n        this.path = segments;\n    }\n    setParent(parent) {\n        this.parent = parent !== null && parent !== void 0 ? parent : null;\n    }\n}\nexports.AssetGroup = AssetGroup;\n","\"use strict\";\n//\n//  SDKTokenGroup.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DesignComponentGroup = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DesignComponentGroup {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.id = model.persistentId;\n        this.brandId = model.brandId;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.isRoot = model.isRoot;\n        this.childrenIds = model.childrenIds;\n        this.path = new Array();\n        this.componentIds = new Array();\n        this.subgroups = new Array();\n        this.parent = null;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    addChild(group) {\n        this.subgroups.push(group);\n    }\n    addChildren(groups) {\n        this.subgroups = this.subgroups.concat(groups);\n    }\n    setPath(segments) {\n        this.path = segments;\n    }\n    setParent(parent) {\n        this.parent = parent !== null && parent !== void 0 ? parent : null;\n    }\n}\nexports.DesignComponentGroup = DesignComponentGroup;\n","\"use strict\";\n//\n//  SDKTokenGroup.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenGroup = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TokenGroup {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.id = model.persistentId;\n        this.versionedId = model.id;\n        this.brandId = model.brandId;\n        this.designSystemVersionId = model.designSystemVersionId;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.isRoot = model.isRoot;\n        this.tokenType = model.tokenType;\n        this.childrenIds = model.childrenIds;\n        this.path = new Array();\n        this.tokenIds = new Array();\n        this.subgroups = new Array();\n        this.parent = null;\n        // Set unordered when constructing\n        this.sortOrder = -1;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    addChild(group) {\n        this.subgroups.push(group);\n    }\n    addChildren(groups) {\n        this.subgroups = this.subgroups.concat(groups);\n    }\n    setPath(segments) {\n        this.path = segments;\n    }\n    setParent(parent) {\n        this.parent = parent !== null && parent !== void 0 ? parent : null;\n    }\n    setSortOrder(order) {\n        this.sortOrder = order;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Write\n    toWriteObject() {\n        return {\n            id: this.versionedId,\n            brandId: this.brandId,\n            tokenType: this.tokenType,\n            designSystemVersionId: this.designSystemVersionId,\n            persistentId: this.id,\n            isRoot: this.isRoot,\n            meta: {\n                name: this.name,\n                description: this.description\n            },\n            childrenIds: this.childrenIds\n        };\n    }\n    toMutatedObject(childrenIds) {\n        let group = new TokenGroup({\n            id: this.versionedId,\n            brandId: this.brandId,\n            tokenType: this.tokenType,\n            designSystemVersionId: this.designSystemVersionId,\n            persistentId: this.id,\n            isRoot: this.isRoot,\n            meta: {\n                name: this.name,\n                description: this.description\n            },\n            childrenIds: childrenIds\n        });\n        group.parent = this.parent;\n        group.sortOrder = this.sortOrder;\n        return group;\n    }\n}\nexports.TokenGroup = TokenGroup;\n","\"use strict\";\n//\n//  SDKDesignComponentOrigin.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DesignComponentOrigin = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass DesignComponentOrigin {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, sources) {\n        var _a, _b, _c, _d, _e, _f;\n        this.sourceId = (_a = model.sourceId) !== null && _a !== void 0 ? _a : null;\n        this.id = (_b = model.id) !== null && _b !== void 0 ? _b : null;\n        this.nodeId = (_c = model.nodeId) !== null && _c !== void 0 ? _c : null;\n        this.name = (_d = model.name) !== null && _d !== void 0 ? _d : null;\n        this.fileId = null;\n        this.fileName = null;\n        if (model.sourceId) {\n            let remoteSource = sources.filter(s => s.id === model.sourceId)[0];\n            if (remoteSource) {\n                this.sourceType = remoteSource.type;\n                this.fileId = (_e = remoteSource.fileId) !== null && _e !== void 0 ? _e : null;\n                this.fileName = (_f = remoteSource.fileName) !== null && _f !== void 0 ? _f : null;\n            }\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Conveniences\n    get remoteDesignComponentUrl() {\n        var _a;\n        if (this.sourceType === \"Figma\" && this.fileId && this.nodeId) {\n            return `https://www.figma.com/file/${this.fileId}/${(_a = this.fileName) !== null && _a !== void 0 ? _a : \"unknown\"}?node-id=${this.nodeId}`;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nexports.DesignComponentOrigin = DesignComponentOrigin;\n","\"use strict\";\n//\n//  SDKSize.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Size = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass Size {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b;\n        this.width = (_a = model === null || model === void 0 ? void 0 : model.width) !== null && _a !== void 0 ? _a : null;\n        this.height = (_b = model === null || model === void 0 ? void 0 : model.height) !== null && _b !== void 0 ? _b : null;\n    }\n}\nexports.Size = Size;\n","\"use strict\";\n//\n//  SDKSource.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Source = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass Source {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n        this.type = model.type;\n        this.id = model.id;\n        this.fileName = (_a = model.fileName) !== null && _a !== void 0 ? _a : null;\n        this.fileId = (_c = (_b = model.cloud) === null || _b === void 0 ? void 0 : _b.fileId) !== null && _c !== void 0 ? _c : null;\n        this.autoImportMode = (_e = (_d = model.cloud) === null || _d === void 0 ? void 0 : _d.autoImportMode) !== null && _e !== void 0 ? _e : null;\n        this.fileThumbnailUrl = (_g = (_f = model.cloud) === null || _f === void 0 ? void 0 : _f.fileThumbnailUrl) !== null && _g !== void 0 ? _g : null;\n        this.lastUpdatesCheckedAt = (_j = (_h = model.cloud) === null || _h === void 0 ? void 0 : _h.lastUpdatesCheckedAt) !== null && _j !== void 0 ? _j : null;\n        if ((_k = model.cloud) === null || _k === void 0 ? void 0 : _k.lastImportedVersion) {\n            this.lastImportedVersion = {\n                id: model.cloud.lastImportedVersion.id,\n                created_at: model.cloud.lastImportedVersion.created_at,\n                label: (_l = model.cloud.lastImportedVersion.label) !== null && _l !== void 0 ? _l : null,\n                description: model.cloud.lastImportedVersion.description,\n            };\n        }\n        else {\n            this.lastImportedVersion = null;\n        }\n        this.lastImportedAt = (_o = (_m = model.cloud) === null || _m === void 0 ? void 0 : _m.lastImportedAt) !== null && _o !== void 0 ? _o : null;\n        if ((_p = model.cloud) === null || _p === void 0 ? void 0 : _p.lastImportResult) {\n            this.lastImportResult = {\n                sourceId: model.cloud.lastImportResult.sourceId,\n                brandId: model.cloud.lastImportResult.brandId,\n                tokensCreated: model.cloud.lastImportResult.tokensCreated,\n                tokensUpdated: model.cloud.lastImportResult.tokensUpdated,\n                tokensDeleted: model.cloud.lastImportResult.tokensDeleted,\n                componentsCreated: model.cloud.lastImportResult.componentsCreated,\n                componentsUpdated: model.cloud.lastImportResult.componentsUpdated,\n                componentsDeleted: model.cloud.lastImportResult.componentsDeleted,\n                componentAssetsCreated: model.cloud.lastImportResult.componentAssetsCreated,\n                componentAssetsUpdated: model.cloud.lastImportResult.componentAssetsUpdated,\n                componentAssetsDeleted: model.cloud.lastImportResult.componentAssetsDeleted,\n                isFailed: model.cloud.lastImportResult.isFailed,\n                versionId: model.cloud.lastImportResult.versionId,\n                fileSize: (_q = model.cloud.lastImportResult.fileSize) !== null && _q !== void 0 ? _q : null\n            };\n        }\n        else {\n            this.lastImportResult = null;\n        }\n        if ((_r = model.cloud) === null || _r === void 0 ? void 0 : _r.lastImportFramesResult) {\n            this.lastImportFramesResult = {\n                sourceId: model.cloud.lastImportFramesResult.sourceId,\n                isFailed: model.cloud.lastImportFramesResult.isFailed,\n                error: (_s = model.cloud.lastImportFramesResult.error) !== null && _s !== void 0 ? _s : null,\n                assetsInFile: model.cloud.lastImportFramesResult.assetsInFile ? {\n                    frames: model.cloud.lastImportFramesResult.assetsInFile.frames,\n                    components: model.cloud.lastImportFramesResult.assetsInFile.components,\n                } : null,\n                invalidReferencesCount: (_t = model.cloud.lastImportFramesResult.invalidReferencesCount) !== null && _t !== void 0 ? _t : null,\n            };\n        }\n        else {\n            this.lastImportFramesResult = null;\n        }\n        this.ownerId = (_v = (_u = model.cloud) === null || _u === void 0 ? void 0 : _u.ownerId) !== null && _v !== void 0 ? _v : null;\n        this.ownerUserName = (_x = (_w = model.cloud) === null || _w === void 0 ? void 0 : _w.ownerUserName) !== null && _x !== void 0 ? _x : null;\n        this.state = (_z = (_y = model.cloud) === null || _y === void 0 ? void 0 : _y.state) !== null && _z !== void 0 ? _z : null;\n        this.linkType = model.linkType;\n        this.brandId = (_0 = model.brandId) !== null && _0 !== void 0 ? _0 : null;\n    }\n}\nexports.Source = Source;\n","\"use strict\";\n//\n//  SDKTokenOrigin.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenOrigin = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TokenOrigin {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        var _a, _b, _c;\n        this.id = (_a = model.id) !== null && _a !== void 0 ? _a : null;\n        this.name = (_b = model.name) !== null && _b !== void 0 ? _b : null;\n        this.sourceId = (_c = model.sourceId) !== null && _c !== void 0 ? _c : null;\n    }\n}\nexports.TokenOrigin = TokenOrigin;\n","\"use strict\";\n//\n//  SDKWorkspaceNPMRegistry.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceNPMRegistry = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass WorkspaceNPMRegistry {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model) {\n        this.enabledScopes = model.enabledScopes;\n        this.limitToScopes = model.limitToScopes;\n        this.registryUrl = model.registryUrl;\n        this.proxyUrl = model.proxyUrl;\n    }\n}\nexports.WorkspaceNPMRegistry = WorkspaceNPMRegistry;\n","\"use strict\";\n//\n//  SDKThemeUtilities.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeUtilities = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst __1 = require(\"../..\");\nconst SDKBlurToken_1 = require(\"../tokens/SDKBlurToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ThemeUtilities {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Helpers\n    /** Creates duplicate of the token */\n    static replicateTokenAsThemePrefabWithoutValue(token, themeId, origin, version) {\n        let replica;\n        switch (token.tokenType) {\n            case __1.TokenType.blur:\n                replica = new SDKBlurToken_1.BlurToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.border:\n                replica = new __1.BorderToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.color:\n                replica = new __1.ColorToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.font:\n                replica = new __1.FontToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.generic:\n                replica = new __1.GenericToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.gradient:\n                replica = new __1.GradientToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.measure:\n                replica = new __1.MeasureToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.radius:\n                replica = new __1.RadiusToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.shadow:\n                replica = new __1.ShadowToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.text:\n                replica = new __1.TextToken(version, {}, null, null, [], []);\n                break;\n            case __1.TokenType.typography:\n                replica = new __1.TypographyToken(version, {}, null, null, [], []);\n                break;\n            default: throw new Error(`Unsupported type ${token.tokenType}`);\n        }\n        replica.id = token.id;\n        replica.versionedId = token.versionedId;\n        replica.brandId = token.brandId;\n        replica.themeId = themeId; // Assign just-created theme\n        replica.designSystemVersionId = token.designSystemVersionId;\n        replica.name = token.name;\n        replica.description = token.description;\n        replica.tokenType = token.tokenType;\n        replica.origin = origin !== null && origin !== void 0 ? origin : null; // Re-direct origin to the other origin\n        replica.parent = token.parent;\n        replica.sortOrder = token.sortOrder;\n        replica.properties = token.properties;\n        replica.propertyValues = token.propertyValues;\n        replica.createdAt = token.createdAt;\n        replica.updatedAt = token.updatedAt;\n        // No replication of value - value will get replaced by the override\n        return replica;\n    }\n}\nexports.ThemeUtilities = ThemeUtilities;\n","\"use strict\";\n//\n//  SDKTokenTheme.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenTheme = void 0;\nconst __1 = require(\"../..\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TokenTheme {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, dsVersion) {\n        this.id = model.persistentId;\n        this.versionedId = model.id;\n        this.brandId = model.brandId;\n        this.designSystemVersionId = dsVersion.id;\n        this.name = model.meta.name;\n        this.description = model.meta.description;\n        this.codeName = model.codeName;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n        // Note overrides are provided from the resolver when they are computed\n        this.overriddenTokens = [];\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    addOverride(override) {\n        this.overriddenTokens.push(override);\n    }\n    addOverrides(overrides) {\n        this.overriddenTokens = this.overriddenTokens.concat(overrides);\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Manipulation\n    toWriteObject() {\n        var _a;\n        return {\n            id: this.versionedId,\n            brandId: this.brandId,\n            designSystemVersionId: this.designSystemVersionId,\n            persistentId: this.id,\n            meta: {\n                name: this.name,\n                description: (_a = this.description) !== null && _a !== void 0 ? _a : ''\n            },\n            createdAt: this.createdAt ? this.createdAt.toISOString() : undefined,\n            updatedAt: this.updatedAt ? this.updatedAt.toISOString() : undefined,\n            codeName: this.codeName,\n            overrides: this.tokensToOverrides()\n        };\n    }\n    tokensToOverrides() {\n        // return this.overriddenTokens.map(o => this.toWriteOverrideObject(o))\n        let counter = 0;\n        let result = new Array();\n        for (let override of this.overriddenTokens) {\n            if (override.tokenType === __1.TokenType.color) {\n                result.push(this.toWriteOverrideObject(override));\n            }\n            counter++;\n        }\n        return result;\n    }\n    toWriteOverrideObject(token) {\n        var _a, _b, _c;\n        let model = {\n            data: this.valueToWriteObject(token.value, token.tokenType),\n            tokenPersistentId: token.id,\n            type: token.tokenType,\n            origin: token.origin\n                ? {\n                    id: (_a = token.origin.id) !== null && _a !== void 0 ? _a : undefined,\n                    name: (_b = token.origin.name) !== null && _b !== void 0 ? _b : undefined,\n                    sourceId: (_c = token.origin.sourceId) !== null && _c !== void 0 ? _c : undefined\n                }\n                : undefined,\n            createdAt: token.createdAt ? token.createdAt.toISOString() : undefined,\n            updatedAt: token.updatedAt ? token.updatedAt.toISOString() : undefined,\n        };\n        if (!model.data.aliasTo && !model.data.value) {\n            throw new Error(\"Token doesn't have value or alias to\");\n        }\n        return model;\n    }\n    valueToWriteObject(value, type) {\n        switch (type) {\n            case __1.TokenType.blur: return __1.BlurToken.valueToWriteObject(value);\n            case __1.TokenType.border: return __1.BorderToken.valueToWriteObject(value);\n            case __1.TokenType.color: return __1.ColorToken.valueToWriteObject(value);\n            case __1.TokenType.font: return __1.FontToken.valueToWriteObject(value);\n            case __1.TokenType.generic: return __1.GenericToken.valueToWriteObject(value);\n            case __1.TokenType.gradient: return __1.GradientToken.valueToWriteObject(value);\n            case __1.TokenType.measure: return __1.MeasureToken.valueToWriteObject(value);\n            case __1.TokenType.radius: return __1.RadiusToken.valueToWriteObject(value);\n            case __1.TokenType.shadow: return __1.ShadowToken.valueToWriteObject(value);\n            case __1.TokenType.text: return __1.TextToken.valueToWriteObject(value);\n            case __1.TokenType.typography: return __1.TypographyToken.valueToWriteObject(value);\n        }\n    }\n}\nexports.TokenTheme = TokenTheme;\n","\"use strict\";\n//\n//  SDKTokenThemeOverride.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenThemeOverride = void 0;\nconst __1 = require(\"../..\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TokenThemeOverride {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, value) {\n        this.value = value;\n        this.tokenId = model.tokenPersistentId;\n        this.type = model.type;\n        this.origin = model.origin ? new __1.TokenOrigin(model.origin) : null;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Manipulation\n    toWriteObject() {\n        var _a, _b, _c;\n        return {\n            data: this.valueToWriteObject(this.value, this.type),\n            tokenPersistentId: this.tokenId,\n            type: this.type,\n            origin: this.origin\n                ? {\n                    id: (_a = this.origin.id) !== null && _a !== void 0 ? _a : undefined,\n                    name: (_b = this.origin.name) !== null && _b !== void 0 ? _b : undefined,\n                    sourceId: (_c = this.origin.sourceId) !== null && _c !== void 0 ? _c : undefined\n                }\n                : undefined,\n            createdAt: this.createdAt ? this.createdAt.toISOString() : undefined,\n            updatedAt: this.updatedAt ? this.updatedAt.toISOString() : undefined,\n        };\n    }\n    valueToWriteObject(value, type) {\n        switch (type) {\n            case __1.TokenType.blur: return __1.BlurToken.valueToWriteObject(value);\n            case __1.TokenType.border: return __1.BorderToken.valueToWriteObject(value);\n            case __1.TokenType.color: return __1.ColorToken.valueToWriteObject(value);\n            case __1.TokenType.font: return __1.FontToken.valueToWriteObject(value);\n            case __1.TokenType.generic: return __1.GenericToken.valueToWriteObject(value);\n            case __1.TokenType.gradient: return __1.GradientToken.valueToWriteObject(value);\n            case __1.TokenType.measure: return __1.MeasureToken.valueToWriteObject(value);\n            case __1.TokenType.radius: return __1.RadiusToken.valueToWriteObject(value);\n            case __1.TokenType.shadow: return __1.ShadowToken.valueToWriteObject(value);\n            case __1.TokenType.text: return __1.TextToken.valueToWriteObject(value);\n            case __1.TokenType.typography: return __1.TypographyToken.valueToWriteObject(value);\n        }\n    }\n}\nexports.TokenThemeOverride = TokenThemeOverride;\n","\"use strict\";\n//\n//  SDKBlurToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlurToken = void 0;\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass BlurToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        this.blurLayers = new Array();\n        this.isVirtual = false;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = BlurToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken ? {\n            radius: {\n                aliasTo: undefined,\n                value: {\n                    measure: value.radius.measure,\n                    unit: value.radius.unit\n                }\n            },\n            type: value.type\n        } : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.BlurToken = BlurToken;\n","\"use strict\";\n//\n//  SDKBorderToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BorderToken = void 0;\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass BorderToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = BorderToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken\n            ? {\n                color: {\n                    aliasTo: value.color.referencedToken ? value.color.referencedToken.id : undefined,\n                    value: value.color.referencedToken ? null : value.color.hex\n                },\n                width: {\n                    aliasTo: value.width.referencedToken ? value.width.referencedToken.id : undefined,\n                    value: value.width.referencedToken\n                        ? null\n                        : {\n                            measure: value.width.measure,\n                            unit: value.width.unit\n                        }\n                },\n                position: value.position,\n                isEnabled: true\n            }\n            : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.BorderToken = BorderToken;\n","\"use strict\";\n//\n//  SDKColorToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorToken = void 0;\nconst SDKTokenType_1 = require(\"../enums/SDKTokenType\");\nconst SDKToken_1 = require(\"./SDKToken\");\nconst uuid_1 = require(\"uuid\");\nconst SDKSupernovaError_1 = require(\"../../core/errors/SDKSupernovaError\");\nconst parse_color_1 = __importDefault(require(\"parse-color\"));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ColorToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static building\n    static create(version, brand, name, description, value, alias, properties, propertyValues) {\n        let baseToken = {\n            id: undefined,\n            persistentId: uuid_1.v4(),\n            brandId: brand.persistentId,\n            designSystemVersionId: version.id,\n            type: SDKTokenType_1.TokenType.color,\n            meta: {\n                name: name,\n                description: description\n            },\n            data: {},\n            customPropertyOverrides: []\n        };\n        if (value) {\n            // Raw value\n            let tokenValue = this.colorValueFromDefinition(value);\n            return new ColorToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n        else if (alias) {\n            // Aliased value - copy and create raw from reference\n            let tokenValue = {\n                hex: alias.value.hex,\n                a: alias.value.a,\n                r: alias.value.r,\n                g: alias.value.g,\n                b: alias.value.b,\n                referencedToken: alias\n            };\n            return new ColorToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n    }\n    static colorValueFromDefinition(definition) {\n        let result = parse_color_1.default(definition);\n        if (!result || result.hex === undefined) {\n            throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Unable to parse provided color value '${definition}'. Hex, RGB, HSL, HSV or CMYK are supported`);\n        }\n        return {\n            hex: result.hex.length === 7 ? result.hex + 'ff' : result.hex,\n            r: result.rgba[0],\n            g: result.rgba[1],\n            b: result.rgba[2],\n            a: Math.max(0, Math.min(255, Math.round(result.rgba[3] * 255))),\n            referencedToken: null\n        };\n    }\n    static colorValueFromDefinitionOrReference(definition, referenceResolver) {\n        if (referenceResolver.valueIsReference(definition)) {\n            let reference = referenceResolver.lookupReferencedToken(definition);\n            return {\n                referencedToken: reference,\n                hex: reference.value.hex,\n                a: reference.value.a,\n                r: reference.value.r,\n                g: reference.value.g,\n                b: reference.value.b\n            };\n        }\n        else {\n            return this.colorValueFromDefinition(definition);\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = ColorToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken ? (value.hex.startsWith(\"#\") ? value.hex : `#${value.hex}`) : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.ColorToken = ColorToken;\n","\"use strict\";\n//\n//  SDKFontToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FontToken = void 0;\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass FontToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = FontToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken ? {\n            family: value.family,\n            subfamily: value.subfamily\n        } : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.FontToken = FontToken;\n","\"use strict\";\n//\n//  SDKGenericToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericToken = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../..\");\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass GenericToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static building\n    static create(version, brand, name, description, value, alias, properties, propertyValues) {\n        let baseToken = {\n            id: undefined,\n            persistentId: uuid_1.v4(),\n            brandId: brand.persistentId,\n            designSystemVersionId: version.id,\n            type: __1.TokenType.generic,\n            meta: {\n                name: name,\n                description: description\n            },\n            data: {},\n            customPropertyOverrides: []\n        };\n        if (value) {\n            // Raw value\n            let tokenValue = this.measureValueFromDefinition(value);\n            return new GenericToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n        else if (alias) {\n            // Aliased value - copy and create raw from reference\n            let tokenValue = {\n                text: alias.value.text,\n                referencedToken: alias\n            };\n            return new GenericToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n    }\n    static measureValueFromDefinition(definition) {\n        return {\n            text: definition ? definition : '',\n            referencedToken: null\n        };\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = GenericToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken ? value.text : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.GenericToken = GenericToken;\n","\"use strict\";\n//\n//  SDKGradientToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GradientToken = void 0;\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass GradientToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        this.gradientLayers = new Array();\n        this.isVirtual = false;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = GradientToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken\n            ? {\n                to: {\n                    x: value.to.x,\n                    y: value.to.y\n                },\n                from: {\n                    x: value.to.x,\n                    y: value.to.y\n                },\n                type: value.type,\n                aspectRatio: value.aspectRatio,\n                stops: value.stops.map(s => {\n                    return {\n                        position: s.position,\n                        color: {\n                            aliasTo: s.color.referencedToken ? s.color.referencedToken.id : undefined,\n                            value: s.color.referencedToken ? null : s.color.hex\n                        }\n                    };\n                })\n            }\n            : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.GradientToken = GradientToken;\n","\"use strict\";\n//\n//  SDKMeasureToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeasureToken = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../..\");\nconst SDKUnit_1 = require(\"../enums/SDKUnit\");\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass MeasureToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static building\n    static create(version, brand, name, description, value, alias, properties, propertyValues) {\n        let baseToken = {\n            id: undefined,\n            persistentId: uuid_1.v4(),\n            brandId: brand.persistentId,\n            designSystemVersionId: version.id,\n            type: __1.TokenType.measure,\n            meta: {\n                name: name,\n                description: description\n            },\n            data: {},\n            customPropertyOverrides: []\n        };\n        if (value) {\n            // Raw value\n            // TODO\n            let tokenValue = this.measureValueFromDefinition(value);\n            return new MeasureToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n        else if (alias) {\n            // Aliased value - copy and create raw from reference\n            let tokenValue = {\n                unit: SDKUnit_1.Unit.pixels,\n                measure: 0,\n                referencedToken: alias\n            };\n            return new MeasureToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n    }\n    static measureValueFromDefinition(definition) {\n        let result = this.parseMeasure(definition);\n        return {\n            measure: result.measure,\n            unit: result.unit,\n            referencedToken: null\n        };\n    }\n    static parseMeasure(definition) {\n        if (typeof definition !== \"string\") {\n            return {\n                measure: 1,\n                unit: SDKUnit_1.Unit.pixels\n            };\n        }\n        // Parse out unit\n        let measure = definition.replace(' ', '');\n        let unit = SDKUnit_1.Unit.pixels;\n        if (definition.endsWith('px')) {\n            measure = measure.substring(0, measure.length - 2);\n            unit = SDKUnit_1.Unit.pixels;\n        }\n        else if (definition.endsWith('%')) {\n            measure = measure.substring(0, measure.length - 1);\n            unit = SDKUnit_1.Unit.percent;\n        }\n        else if (definition.endsWith('em')) {\n            measure = measure.substring(0, measure.length - 2);\n            unit = SDKUnit_1.Unit.ems;\n        }\n        else if (definition.endsWith('pt')) {\n            measure = measure.substring(0, measure.length - 2);\n            unit = SDKUnit_1.Unit.points;\n        }\n        // For now, everything is pixels. Remove pixels when SN supports more units\n        unit = SDKUnit_1.Unit.pixels;\n        // Parse\n        let parsedMeasure = parseFloat(measure);\n        return {\n            measure: parsedMeasure,\n            unit: unit\n        };\n    }\n    static measureValueFromDefinitionOrReference(definition, referenceResolver) {\n        if (referenceResolver.valueNeedsComputing(definition)) {\n            // TODO: Do measure computing\n            let measure = MeasureToken.parseMeasure(\"0\");\n            return {\n                referencedToken: null,\n                measure: measure.measure,\n                unit: measure.unit,\n            };\n        }\n        else if (referenceResolver.valueIsReference(definition)) {\n            let reference = referenceResolver.lookupReferencedToken(definition);\n            return {\n                referencedToken: reference,\n                measure: reference.value.measure,\n                unit: reference.value.unit\n            };\n        }\n        else {\n            let measure = MeasureToken.parseMeasure(definition);\n            return {\n                referencedToken: null,\n                measure: measure.measure,\n                unit: measure.unit\n            };\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = MeasureToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken\n            ? {\n                measure: value.measure,\n                unit: value.unit\n            }\n            : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.MeasureToken = MeasureToken;\n","\"use strict\";\n//\n//  SDKRadiusToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RadiusToken = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../..\");\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass RadiusToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static building\n    static create(version, brand, name, description, value, alias, properties, propertyValues) {\n        let baseToken = {\n            id: undefined,\n            persistentId: uuid_1.v4(),\n            brandId: brand.persistentId,\n            designSystemVersionId: version.id,\n            type: __1.TokenType.radius,\n            meta: {\n                name: name,\n                description: description\n            },\n            data: {},\n            customPropertyOverrides: []\n        };\n        if (value) {\n            // Raw value\n            let tokenValue = this.radiusValueFromDefinition(value);\n            return new RadiusToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n        else if (alias) {\n            // Aliased value - copy and create raw from reference\n            let tokenValue = {\n                radius: {\n                    unit: alias.value.radius.unit,\n                    measure: alias.value.radius.measure,\n                    referencedToken: undefined\n                },\n                topLeft: alias.value.topLeft\n                    ? {\n                        unit: alias.value.topLeft.unit,\n                        measure: alias.value.topLeft.measure,\n                        referencedToken: undefined\n                    }\n                    : null,\n                topRight: alias.value.topRight\n                    ? {\n                        unit: alias.value.topRight.unit,\n                        measure: alias.value.topRight.measure,\n                        referencedToken: undefined\n                    }\n                    : null,\n                bottomLeft: alias.value.bottomLeft\n                    ? {\n                        unit: alias.value.bottomLeft.unit,\n                        measure: alias.value.bottomLeft.measure,\n                        referencedToken: undefined\n                    }\n                    : null,\n                bottomRight: alias.value.bottomRight\n                    ? {\n                        unit: alias.value.bottomRight.unit,\n                        measure: alias.value.bottomRight.measure,\n                        referencedToken: undefined\n                    }\n                    : null,\n                referencedToken: alias\n            };\n            return new RadiusToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n    }\n    static radiusValueFromDefinition(definition) {\n        let corners = definition.split(',');\n        if (corners.length === 1) {\n            // Uniform corner description\n            let measure = __1.MeasureToken.measureValueFromDefinition(definition);\n            return {\n                radius: measure,\n                topLeft: null,\n                topRight: null,\n                bottomLeft: null,\n                bottomRight: null,\n                referencedToken: null\n            };\n        }\n        else if (corners.length === 4) {\n            // 4 corner description\n            return {\n                radius: __1.MeasureToken.measureValueFromDefinition(corners[0]),\n                topLeft: __1.MeasureToken.measureValueFromDefinition(corners[0]),\n                topRight: __1.MeasureToken.measureValueFromDefinition(corners[1]),\n                bottomLeft: __1.MeasureToken.measureValueFromDefinition(corners[2]),\n                bottomRight: __1.MeasureToken.measureValueFromDefinition(corners[3]),\n                referencedToken: null\n            };\n        }\n        else {\n            return {\n                radius: __1.MeasureToken.measureValueFromDefinition('0'),\n                topLeft: null,\n                topRight: null,\n                bottomLeft: null,\n                bottomRight: null,\n                referencedToken: null\n            };\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = RadiusToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken\n            ? {\n                radius: {\n                    aliasTo: undefined,\n                    value: {\n                        measure: value.radius.measure,\n                        unit: value.radius.unit\n                    }\n                },\n                topLeft: value.topLeft\n                    ? {\n                        aliasTo: undefined,\n                        value: {\n                            measure: value.topLeft.measure,\n                            unit: value.topLeft.unit\n                        }\n                    }\n                    : null,\n                topRight: value.topRight\n                    ? {\n                        aliasTo: undefined,\n                        value: {\n                            measure: value.topRight.measure,\n                            unit: value.topRight.unit\n                        }\n                    }\n                    : null,\n                bottomLeft: value.bottomLeft\n                    ? {\n                        aliasTo: undefined,\n                        value: {\n                            measure: value.bottomLeft.measure,\n                            unit: value.bottomLeft.unit\n                        }\n                    }\n                    : null,\n                bottomRight: value.bottomRight\n                    ? {\n                        aliasTo: undefined,\n                        value: {\n                            measure: value.bottomRight.measure,\n                            unit: value.bottomRight.unit\n                        }\n                    }\n                    : null\n            }\n            : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.RadiusToken = RadiusToken;\n","\"use strict\";\n//\n//  SDKShadowToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShadowToken = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../..\");\nconst SDKSupernovaError_1 = require(\"../../core/errors/SDKSupernovaError\");\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass ShadowToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        this.shadowLayers = new Array();\n        this.isVirtual = false;\n        if (alias) {\n            value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static building\n    static create(version, brand, name, description, value, alias, referenceResolver, properties, propertyValues) {\n        let baseToken = {\n            id: undefined,\n            persistentId: uuid_1.v4(),\n            brandId: brand.persistentId,\n            designSystemVersionId: version.id,\n            type: __1.TokenType.shadow,\n            meta: {\n                name: name,\n                description: description\n            },\n            data: {},\n            customPropertyOverrides: []\n        };\n        if (value) {\n            // Raw value\n            let tokenValue = this.shadowValueFromDefinition(value, referenceResolver);\n            return new ShadowToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n        else if (alias) {\n            // Aliased value - copy and create raw from reference\n            let tokenValue = {\n                color: alias.value.color,\n                x: alias.value.x,\n                y: alias.value.y,\n                spread: alias.value.spread,\n                radius: alias.value.radius,\n                opacity: alias.value.opacity,\n                type: alias.value.type,\n                referencedToken: alias\n            };\n            return new ShadowToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n    }\n    static shadowValueFromDefinition(definition, referenceResolver) {\n        // For now, handle only one shadow in multiple shadow layers\n        if (definition instanceof Array) {\n            if (definition.length > 0) {\n                definition = definition[0];\n            }\n            else {\n                throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Box Shadow definition must contain at least one shadow layer`);\n            }\n        }\n        if (!definition.hasOwnProperty('x') ||\n            !definition.hasOwnProperty('y') ||\n            !definition.hasOwnProperty('blur') ||\n            !definition.hasOwnProperty('spread') ||\n            !definition.hasOwnProperty('color') ||\n            !definition.hasOwnProperty('type')) {\n            throw SDKSupernovaError_1.SupernovaError.fromSDKError(`Box Shadow definition is missing one of required properties (x, y, blur, spread, color, type), was ${JSON.stringify(definition)}`);\n        }\n        let value = {}; // Empty container\n        value.x = __1.MeasureToken.measureValueFromDefinitionOrReference(definition['x'], referenceResolver);\n        value.y = __1.MeasureToken.measureValueFromDefinitionOrReference(definition['y'], referenceResolver);\n        value.radius = __1.MeasureToken.measureValueFromDefinitionOrReference(definition['blur'], referenceResolver);\n        value.spread = __1.MeasureToken.measureValueFromDefinitionOrReference(definition['spread'], referenceResolver);\n        value.color = __1.ColorToken.colorValueFromDefinitionOrReference(definition['color'], referenceResolver);\n        value.opacity = 1;\n        value.type = definition['type'] === 'innerShadow' ? __1.ShadowType.inner : __1.ShadowType.drop;\n        return value;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = ShadowToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken\n            ? {\n                color: {\n                    aliasTo: value.color.referencedToken ? value.color.referencedToken.id : undefined,\n                    value: value.color.referencedToken ? null : value.color.hex\n                },\n                isEnabled: true,\n                x: {\n                    aliasTo: value.x.referencedToken ? value.x.referencedToken.id : undefined,\n                    value: value.x.referencedToken\n                        ? null\n                        : {\n                            measure: value.x.measure,\n                            unit: value.x.unit\n                        }\n                },\n                y: {\n                    aliasTo: value.y.referencedToken ? value.y.referencedToken.id : undefined,\n                    value: value.y.referencedToken\n                        ? null\n                        : {\n                            measure: value.y.measure,\n                            unit: value.y.unit\n                        }\n                },\n                spread: {\n                    aliasTo: value.spread.referencedToken ? value.spread.referencedToken.id : undefined,\n                    value: value.spread.referencedToken\n                        ? null\n                        : {\n                            measure: value.spread.measure,\n                            unit: value.spread.unit\n                        }\n                },\n                radius: {\n                    aliasTo: value.radius.referencedToken ? value.radius.referencedToken.id : undefined,\n                    value: value.radius.referencedToken\n                        ? null\n                        : {\n                            measure: value.radius.measure,\n                            unit: value.radius.unit\n                        }\n                },\n                opacity: value.opacity,\n                type: value.type\n            }\n            : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.ShadowToken = ShadowToken;\n","\"use strict\";\n//\n//  SDKTextToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextToken = void 0;\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TextToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Write\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = TextToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken ? value.text : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.TextToken = TextToken;\n","\"use strict\";\n//\n//  SDKToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Token = void 0;\nconst SDKTokenOrigin_1 = require(\"../support/SDKTokenOrigin\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(model, dsVersion, properties, propertyValues, empty = false) {\n        if (empty) {\n            // For creation of empty token to be filled from the outside\n            return;\n        }\n        this.id = model.persistentId;\n        this.versionedId = model.id;\n        this.brandId = model.brandId;\n        this.themeId = null; // Can only be set outside\n        this.designSystemVersionId = dsVersion.id;\n        if (model.meta) {\n            this.name = model.meta.name;\n            this.description = model.meta.description;\n        }\n        this.tokenType = model.type;\n        this.origin = model.originStyle ? new SDKTokenOrigin_1.TokenOrigin(model.originStyle) : null;\n        this.parent = null;\n        this.createdAt = model.createdAt ? new Date(model.createdAt) : null;\n        this.updatedAt = model.updatedAt ? new Date(model.updatedAt) : null;\n        // Set unordered when constructing\n        this.sortOrder = -1;\n        this.properties = properties;\n        this.propertyValues = {};\n        for (let value of propertyValues) {\n            if (value.targetElementId === this.id) {\n                // Property value refers to this element\n                for (let property of properties) {\n                    if (property.persistentId === value.definitionId) {\n                        // Property value refers to the correct property, we get codeName from it and add it to quick-access\n                        this.propertyValues[property.codeName] = value.value;\n                    }\n                }\n            }\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Manipulation\n    setParent(parent) {\n        this.parent = parent !== null && parent !== void 0 ? parent : null;\n    }\n    setSortOrder(order) {\n        this.sortOrder = order;\n    }\n    toBaseWriteObject() {\n        var _a, _b, _c, _d;\n        return {\n            id: this.versionedId,\n            brandId: this.brandId,\n            designSystemVersionId: this.designSystemVersionId,\n            persistentId: this.id,\n            type: this.tokenType,\n            meta: {\n                name: this.name,\n                description: (_a = this.description) !== null && _a !== void 0 ? _a : ''\n            },\n            originStyle: this.origin\n                ? {\n                    id: (_b = this.origin.id) !== null && _b !== void 0 ? _b : undefined,\n                    name: (_c = this.origin.name) !== null && _c !== void 0 ? _c : undefined,\n                    sourceId: (_d = this.origin.sourceId) !== null && _d !== void 0 ? _d : undefined\n                }\n                : undefined,\n            customPropertyOverrides: [],\n            data: undefined\n        };\n    }\n    toWriteObject() {\n        throw Error('Unable to write generic token');\n    }\n}\nexports.Token = Token;\n","\"use strict\";\n//\n//  SDKTokenComparator.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenComparator = void 0;\nconst SDKTokenType_1 = require(\"../enums/SDKTokenType\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TokenComparator {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Comparators\n    static isEqualTokenValue(a, b) {\n        if (a.tokenType !== b.tokenType) {\n            return false;\n        }\n        switch (a.tokenType) {\n            case SDKTokenType_1.TokenType.blur:\n                return TokenComparator.isEqualBlurTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.border:\n                return TokenComparator.isEqualBorderTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.color:\n                return TokenComparator.isEqualColorTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.font:\n                return TokenComparator.isEqualFontTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.generic:\n                return TokenComparator.isEqualGenericTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.gradient:\n                return TokenComparator.isEqualGradientTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.measure:\n                return TokenComparator.isEqualMeasureTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.radius:\n                return TokenComparator.isEqualRadiusTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.shadow:\n                return TokenComparator.isEqualShadowTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.text:\n                return TokenComparator.isEqualTextTokenValue(a.value, b.value);\n            case SDKTokenType_1.TokenType.typography:\n                return TokenComparator.isEqualTypographyTokenValue(a.value, b.value);\n            default:\n                throw new Error('Unsupported token type for compasion');\n        }\n    }\n    static referencesSameToken(a, b) {\n        return a.referencedToken && b.referencedToken && a.referencedToken.id === b.referencedToken.id;\n    }\n    static anyIsReference(a, b) {\n        return ((a.referencedToken !== undefined && a.referencedToken !== null) ||\n            (b.referencedToken !== undefined && b.referencedToken !== null));\n    }\n    static isUndefinedValue(a, b) {\n        return !a && !b;\n    }\n    static isEqualBlurTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return a.type === b.type && this.isEqualMeasureTokenValue(a.radius, b.radius);\n    }\n    static isEqualBorderTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return (this.isEqualColorTokenValue(a.color, b.color) &&\n            this.isEqualMeasureTokenValue(a.width, b.width) &&\n            a.position === b.position);\n    }\n    static isEqualColorTokenValue(a, b) {\n        // if (this.anyIsReference(a, b)) {\n        //     return this.referencesSameToken(a,b)\n        // }\n        return a.a === b.a && a.r === b.r && a.g === b.g && a.b === b.b;\n    }\n    static isEqualFontTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return a.family === b.family && a.subfamily == b.subfamily;\n    }\n    static isEqualGenericTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return a.text === b.text;\n    }\n    static isEqualGradientTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return (a.aspectRatio === b.aspectRatio &&\n            a.from.x === b.from.x &&\n            a.from.y === b.from.y &&\n            a.to.x === b.to.x &&\n            a.to.y === b.to.y &&\n            a.type === b.type &&\n            this.isEqualGradientStops(a.stops, b.stops));\n    }\n    static isEqualGradientStops(a, b) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            let as = a[i];\n            let bs = b[i];\n            if (!this.isEqualColorTokenValue(as.color, bs.color) || as.position !== bs.position) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isEqualMeasureTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return a.measure === b.measure && a.unit === b.unit;\n    }\n    static isEqualRadiusTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return (this.isEqualMeasureTokenValue(a.radius, b.radius) &&\n            this.isEqualMeasureTokenValue(a.bottomLeft, b.bottomLeft) &&\n            this.isEqualMeasureTokenValue(a.bottomRight, b.bottomRight) &&\n            this.isEqualMeasureTokenValue(a.topLeft, b.topLeft) &&\n            this.isEqualMeasureTokenValue(a.topRight, b.topRight));\n    }\n    static isEqualShadowTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return (this.isEqualColorTokenValue(a.color, b.color) &&\n            this.isEqualMeasureTokenValue(a.radius, b.radius) &&\n            this.isEqualMeasureTokenValue(a.spread, b.spread) &&\n            this.isEqualMeasureTokenValue(a.x, b.x) &&\n            this.isEqualMeasureTokenValue(a.y, b.y) &&\n            a.type === b.type &&\n            a.opacity === b.opacity);\n    }\n    static isEqualTextTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return a.text === b.text;\n    }\n    static isEqualTypographyTokenValue(a, b) {\n        if (this.isUndefinedValue(a, b) || this.referencesSameToken(a, b)) {\n            return true;\n        }\n        return (this.isEqualFontTokenValue(a.font, b.font) &&\n            this.isEqualMeasureTokenValue(a.fontSize, b.fontSize) &&\n            this.isEqualMeasureTokenValue(a.letterSpacing, b.letterSpacing) &&\n            this.isEqualMeasureTokenValue(a.lineHeight, b.lineHeight) &&\n            this.isEqualMeasureTokenValue(a.paragraphIndent, b.paragraphIndent) &&\n            this.isEqualMeasureTokenValue(a.paragraphSpacing, b.paragraphSpacing) &&\n            a.textCase === b.textCase &&\n            a.textDecoration === b.textDecoration);\n    }\n}\nexports.TokenComparator = TokenComparator;\n","\"use strict\";\n//\n//  SDKTypographyToken.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypographyToken = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../..\");\nconst SDKToken_1 = require(\"./SDKToken\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: -  Object Definition\nclass TypographyToken extends SDKToken_1.Token {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, baseToken, value, alias, properties, propertyValues) {\n        super(baseToken, version, properties, propertyValues);\n        this.value = value;\n        if (alias) {\n            this.value.referencedToken = alias;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Static building\n    static create(version, brand, name, description, value, alias, referenceResolver, properties, propertyValues) {\n        let baseToken = {\n            id: undefined,\n            persistentId: uuid_1.v4(),\n            brandId: brand.persistentId,\n            designSystemVersionId: version.id,\n            type: __1.TokenType.typography,\n            meta: {\n                name: name,\n                description: description\n            },\n            data: {},\n            customPropertyOverrides: []\n        };\n        if (value) {\n            // Raw value\n            let tokenValue = this.typographyValueFromDefinition(value, referenceResolver);\n            return new TypographyToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n        else if (alias) {\n            // Aliased value - copy and create raw from reference\n            let tokenValue = {\n                font: alias.value.font,\n                fontSize: alias.value.fontSize,\n                letterSpacing: alias.value.letterSpacing,\n                lineHeight: alias.value.lineHeight,\n                paragraphIndent: alias.value.paragraphIndent,\n                paragraphSpacing: alias.value.paragraphSpacing,\n                textDecoration: alias.value.textDecoration,\n                textCase: alias.value.textCase,\n                referencedToken: alias\n            };\n            return new TypographyToken(version, baseToken, tokenValue, undefined, properties, propertyValues);\n        }\n    }\n    static typographyValueFromDefinition(definition, referenceResolver) {\n        // No validation because\n        let value = {}; // Empty container\n        value.font = {\n            family: definition['fontFamily'] ? definition['fontFamily'] : 'Roboto',\n            subfamily: definition['fontWeight'] ? definition['fontWeight'] : 'Regular',\n            referencedToken: undefined\n        };\n        value.fontSize = definition['fontSize']\n            ? __1.MeasureToken.measureValueFromDefinitionOrReference(definition['fontSize'], referenceResolver)\n            : __1.MeasureToken.measureValueFromDefinition('12px');\n        value.letterSpacing = definition['letterSpacing']\n            ? __1.MeasureToken.measureValueFromDefinitionOrReference(definition['letterSpacing'], referenceResolver)\n            : __1.MeasureToken.measureValueFromDefinition('0');\n        value.lineHeight = definition['lineHeight']\n            ? __1.MeasureToken.measureValueFromDefinitionOrReference(definition['lineHeight'], referenceResolver)\n            : null;\n        value.paragraphIndent = definition['paragraphIndent']\n            ? __1.MeasureToken.measureValueFromDefinitionOrReference(definition['paragraphIndent'], referenceResolver)\n            : __1.MeasureToken.measureValueFromDefinition('0');\n        value.paragraphSpacing = definition['paragraphSpacing']\n            ? __1.MeasureToken.measureValueFromDefinitionOrReference(definition['paragraphSpacing'], referenceResolver)\n            : __1.MeasureToken.measureValueFromDefinition('0');\n        value.referencedToken = undefined;\n        let textDecoration = definition['textDecoration'];\n        if (textDecoration && typeof textDecoration === 'string') {\n            if (textDecoration === 'underline') {\n                value.textDecoration = __1.TextDecoration.underline;\n            }\n            else if (textDecoration === 'strikethrough') {\n                value.textDecoration = __1.TextDecoration.strikethrough;\n            }\n            else {\n                value.textDecoration = __1.TextDecoration.original;\n            }\n        }\n        else {\n            value.textDecoration = __1.TextDecoration.original;\n        }\n        let textCase = definition['textCase'];\n        if (textCase && typeof textCase === 'string') {\n            textCase = textCase.toLowerCase().trim();\n            if (textCase === 'camel' || textCase === 'camelcase') {\n                value.textCase = __1.TextCase.camel;\n            }\n            else if (textCase === 'lower' || textCase === 'lowercase') {\n                value.textCase = __1.TextCase.lower;\n            }\n            else if (textCase === 'upper' || textCase === 'uppercase') {\n                value.textCase = __1.TextCase.upper;\n            }\n            else {\n                value.textCase = __1.TextCase.original;\n            }\n        }\n        else {\n            value.textCase = __1.TextCase.original;\n        }\n        return value;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Writing\n    toWriteObject() {\n        let baseData = this.toBaseWriteObject();\n        let specificData = baseData;\n        specificData.data = TypographyToken.valueToWriteObject(this.value);\n        return specificData;\n    }\n    static valueToWriteObject(value) {\n        let valueObject = !value.referencedToken\n            ? {\n                font: {\n                    aliasTo: value.font.referencedToken ? value.font.referencedToken.id : undefined,\n                    value: value.font.referencedToken ? null : value.font\n                },\n                fontSize: {\n                    aliasTo: value.fontSize.referencedToken ? value.fontSize.referencedToken.id : undefined,\n                    value: value.fontSize.referencedToken\n                        ? null\n                        : {\n                            measure: value.fontSize.measure,\n                            unit: value.fontSize.unit\n                        }\n                },\n                letterSpacing: {\n                    aliasTo: value.letterSpacing.referencedToken ? value.letterSpacing.referencedToken.id : undefined,\n                    value: value.letterSpacing.referencedToken\n                        ? null\n                        : {\n                            measure: value.letterSpacing.measure,\n                            unit: value.letterSpacing.unit\n                        }\n                },\n                paragraphIndent: {\n                    aliasTo: value.paragraphIndent.referencedToken ? value.paragraphIndent.referencedToken.id : undefined,\n                    value: value.paragraphIndent.referencedToken\n                        ? null\n                        : {\n                            measure: value.paragraphIndent.measure,\n                            unit: value.paragraphIndent.unit\n                        }\n                },\n                paragraphSpacing: {\n                    aliasTo: value.paragraphSpacing.referencedToken ? value.paragraphSpacing.referencedToken.id : undefined,\n                    value: value.paragraphSpacing.referencedToken\n                        ? null\n                        : {\n                            measure: value.paragraphSpacing.measure,\n                            unit: value.paragraphSpacing.unit\n                        }\n                },\n                lineHeight: {\n                    aliasTo: value.lineHeight.referencedToken ? value.lineHeight.referencedToken.id : undefined,\n                    value: value.lineHeight.referencedToken\n                        ? null\n                        : {\n                            measure: value.lineHeight.measure,\n                            unit: value.lineHeight.unit\n                        }\n                },\n                textCase: value.textCase,\n                textDecoration: value.textDecoration\n            }\n            : undefined;\n        return {\n            aliasTo: value.referencedToken ? value.referencedToken.id : undefined,\n            value: valueObject\n        };\n    }\n}\nexports.TypographyToken = TypographyToken;\n","\"use strict\";\n//\n//  SDKToolsDesignTokensPlugin.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SupernovaToolsDesignTokensPlugin = void 0;\nconst SDKTokenGroup_1 = require(\"../../model/groups/SDKTokenGroup\");\nconst SDKDTJSONLoader_1 = require(\"./utilities/SDKDTJSONLoader\");\nconst SDKDTJSONConverter_1 = require(\"./utilities/SDKDTJSONConverter\");\nconst SDKDTJSONGroupBuilder_1 = require(\"./utilities/SDKDTJSONGroupBuilder\");\nconst SDKDTTokenGroupTreeMerger_1 = require(\"./utilities/SDKDTTokenGroupTreeMerger\");\nconst SDKDTTokenMerger_1 = require(\"./utilities/SDKDTTokenMerger\");\nconst SDKDTMapResolver_1 = require(\"./utilities/SDKDTMapResolver\");\nconst SDKDTThemeMerger_1 = require(\"./utilities/SDKDTThemeMerger\");\nconst SDKDTMapLoader_1 = require(\"./utilities/SDKDTMapLoader\");\nconst SDKDTJSONParser_1 = require(\"./utilities/SDKDTJSONParser\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Design Tokens Plugin Manipulation Tool */\nclass SupernovaToolsDesignTokensPlugin {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version) {\n        this.sortMultiplier = 100;\n        this.version = version;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Primary synchronization\n    /** Synchronizes tokens with specified version of design system using all JSONs in a specific directory. Will load mapping configuration from the provided mapping file path as well. */\n    synchronizeTokensFromDirectory(directoryPath, mappingPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Load mapping from file\n            let mapLoader = new SDKDTMapLoader_1.DTMapLoader();\n            let configuration = yield mapLoader.loadFromPath(mappingPath);\n            // Load data from path, and construct the final object\n            let jsonLoader = new SDKDTJSONLoader_1.DTJSONLoader();\n            let data = yield jsonLoader.loadDSObjectsFromTokenFileDirectory(directoryPath);\n            return this.synchronizeTokensFromData(data, configuration.mapping, configuration.settings);\n        });\n    }\n    /** Synchronizes tokens with specified version of design system from the tokens file provided. Will load mapping configuration from the provided mapping file path as well. */\n    synchronizeTokensFromFile(filePath, mappingPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Load mapping from file\n            let mapLoader = new SDKDTMapLoader_1.DTMapLoader();\n            let configuration = yield mapLoader.loadFromPath(mappingPath);\n            // Load data from provided file and retrieve the data\n            let jsonLoader = new SDKDTJSONLoader_1.DTJSONLoader();\n            let data = yield jsonLoader.loadDSObjectsFromTokenFile(filePath);\n            return this.synchronizeTokensFromData(data, configuration.mapping, configuration.settings);\n        });\n    }\n    synchronizeTokensFromData(data, mapping, settings) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Fetch brand and themes\n            let brands = yield this.version.brands();\n            let themes = yield this.version.themes();\n            // Parse data from object\n            let parser = new SDKDTJSONParser_1.DTJSONParser();\n            let parsedData = yield parser.processPluginDataRepresentation(data);\n            // Post process the data\n            this.processTokenNodes(parsedData, mapping, brands, settings.verbose);\n            for (let map of mapping) {\n                // First, process default values for tokens, for each brand, separately, skipping themes as they need to be created later\n                if (map.bindToTheme) {\n                    continue;\n                }\n                // Find the destination brand\n                let brand = brands.find(b => b.persistentId === map.bindToBrand || (map.bindToBrand.toLowerCase().trim()) === b.name.toLowerCase().trim());\n                if (!brand) {\n                    throw new Error(`Unknown brand ${map.bindToBrand} provided in binding.\\n\\nAvailable brands in this design system: [${brands.map(b => `${b.name} (id: ${b.persistentId})`)}]`);\n                }\n                yield this.mergeWithRemoteSource(map.processedNodes, brand, !settings.dryRun, settings.verbose, settings.preciseCopy);\n                if (settings.verbose) {\n                    console.log(`✅ (task done) Synchronized base tokens for brand ${brand.name}`);\n                }\n            }\n            for (let map of mapping) {\n                // Merge all remaining themes\n                if (!map.bindToTheme) {\n                    continue;\n                }\n                // Find the destination brand\n                let brand = brands.find(b => b.persistentId === map.bindToBrand || (map.bindToBrand.toLowerCase().trim()) === b.name.toLowerCase().trim());\n                if (!brand) {\n                    throw new Error(`Unknown brand ${map.bindToBrand} provided in binding.\\n\\nAvailable brands in this design system: [${brands.map(b => `${b.name} (id: ${b.persistentId})`)}]`);\n                }\n                // Find the destination theme\n                let theme = themes.find(t => t.id === map.bindToTheme || (map.bindToTheme.toLowerCase().trim()) === t.name.toLowerCase().trim());\n                if (!theme) {\n                    throw new Error(`Unknown theme ${map.bindToTheme} provided in binding.\\n\\nAvailable themes in this design system: ${brands.map(b => `Brand: ${b.name} (id: ${b.persistentId})\\n${themes.filter(th => th.brandId == b.persistentId).map(t => `    Theme: ${t.name} (id: ${t.id})`)}`)}`);\n                }\n                yield this.mergeThemeWithRemoteSource(map.processedNodes, brand, theme, !settings.dryRun, settings.verbose);\n                if (settings.verbose) {\n                    console.log(`✅ (task done) Synchronized themed tokens for brand ${brand.name}, theme ${theme.name}`);\n                }\n            }\n            return true;\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Data processing\n    processTokenNodes(parseResult, mapping, brands, verbose) {\n        // Create base objects\n        let mapResolver = new SDKDTMapResolver_1.DTMapResolver(this.version);\n        // Resolve each theme or set separately\n        for (let map of mapping) {\n            let resolvedMap = mapResolver.mappedNodePools(map, parseResult.themes, parseResult.sets);\n            if (!resolvedMap.nodes) {\n                throw new Error(\"Resolved map doesn't contain resulting nodes\");\n            }\n        }\n        let count = 0;\n        for (let map of mapping) {\n            count++;\n            // Find appropriate brand\n            let brand = brands.find(b => b.persistentId === map.bindToBrand || (map.bindToBrand.toLowerCase().trim()) === b.name.toLowerCase().trim());\n            if (!brand) {\n                throw new Error(`Unknown brand ${map.bindToBrand} provided in binding. Available brands in this design system: \\n\\n ${brands.map(b => `${b.name} (id: ${b.persistentId})`)}`);\n            }\n            let converter = new SDKDTJSONConverter_1.DTJSONConverter(this.version, mapping);\n            let groupBuilder = new SDKDTJSONGroupBuilder_1.DTJSONGroupBuilder(this.version, mapping);\n            let processedNodes = converter.convertNodesToTokens(map.nodes, brand);\n            let processedGroups = groupBuilder.constructAllDefinableGroupsTrees(processedNodes, brand);\n            map.processedNodes = processedNodes;\n            map.processedGroups = processedGroups;\n            if (verbose) {\n                console.log(`\\n----- Processing mapping entry #${count}:`);\n                console.log(`Processed nodes: ${processedNodes.length}`);\n                console.log(`Processed groups: ${processedGroups.length}`);\n            }\n        }\n        return mapping;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Merging\n    /** Loads remote source connected to this tool, then merges tokens and groups with it, creating union. Can optionally write to the source as well */\n    mergeWithRemoteSource(processedNodes, brand, write, verbose, preciseCopy) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get remote token data\n            let upstreamTokenGroups = yield brand.tokenGroups();\n            let upstreamTokens = yield brand.tokens();\n            // Assign correct sorting order to incoming tokens and token groups\n            this.correctSortOrder(upstreamTokens, upstreamTokenGroups);\n            // Merge trees\n            let pack = [...upstreamTokens, ...upstreamTokenGroups];\n            let treeMerger = new SDKDTTokenGroupTreeMerger_1.DTTokenGroupTreeMerger();\n            let tokenMerger = new SDKDTTokenMerger_1.DTTokenMerger();\n            let tokenMergeResult = tokenMerger.makeTokensDiff(upstreamTokens, processedNodes);\n            let result = treeMerger.makeGroupsDiff(tokenMergeResult, pack);\n            // Update referenced tokens in group based on the result\n            let groups = [];\n            for (let item of result.toCreate) {\n                if (item.element instanceof SDKTokenGroup_1.TokenGroup) {\n                    item.element.childrenIds = item.childrenIds;\n                    groups.push(item.element);\n                }\n            }\n            for (let item of result.toUpdate) {\n                if (item.element instanceof SDKTokenGroup_1.TokenGroup) {\n                    item.element.childrenIds = item.childrenIds;\n                    groups.push(item.element);\n                }\n            }\n            // Synchronize changes if enabled\n            let tokensToWrite = processedNodes.map(n => n.token);\n            let tokenGroupsToWrite = groups;\n            if (write) {\n                let writer = brand.writer();\n                yield writer.writeTokens(tokenMergeResult.toCreateOrUpdate.map(r => r.token), tokenGroupsToWrite, preciseCopy ? tokenMergeResult.toDelete.map(r => r.token) : [] // If precise copy is enabled, we'll delete the tokens that were not in the source\n                );\n            }\n            if (verbose) {\n                console.log(`\\n----- Base values synchronized: `);\n                console.log(`Token groups updated: ${tokenGroupsToWrite.length}`);\n                console.log(`Tokens created: ${tokenMergeResult.toCreate.length}`);\n                console.log(`Tokens updated: ${tokenMergeResult.toUpdate.length}`);\n                console.log(`Tokens deleted: ${preciseCopy ? tokenMergeResult.toDelete.length : `Deletion disabled because preciseCopy: false`}`);\n                if (!write) {\n                    console.log(`Data were not written to workspace because dryRun was enabled`);\n                }\n                console.log(`\\n`);\n            }\n            return {\n                tokens: tokensToWrite,\n                groups: tokenGroupsToWrite\n            };\n        });\n    }\n    /** Loads remote source connected to this tool, then creates the diff from the base tree and updates the associated theme. Can optionally write to the source as well */\n    mergeThemeWithRemoteSource(processedNodes, brand, theme, write, verbose) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get remote token data\n            let upstreamTokens = yield brand.tokens();\n            let upstreamTheme = theme;\n            let themeMerger = new SDKDTThemeMerger_1.DTThemeMerger(this.version);\n            let themeMergerResult = themeMerger.makeTheme(upstreamTokens, upstreamTheme, processedNodes);\n            if (write) {\n                let writer = brand.writer();\n                yield writer.writeTheme(themeMergerResult);\n            }\n            if (verbose) {\n                console.log(`----- Theme values synchronized:`);\n                console.log(`Created or updated overrides: ${themeMergerResult.overriddenTokens.length}`);\n                if (!write) {\n                    console.log(`Data were not written to workspace because dryRun was enabled`);\n                }\n            }\n            return {\n                theme: theme\n            };\n        });\n    }\n    correctSortOrder(tokens, tokenGroups) {\n        // Build maps so lookup is faster\n        let tokenMap = new Map();\n        let groupMap = new Map();\n        tokens.forEach(t => tokenMap.set(t.id, t));\n        tokenGroups.forEach(g => groupMap.set(g.id, g));\n        // Correct order for each root\n        let roots = tokenGroups.filter(g => g.isRoot);\n        roots.forEach(r => this.correctSortOrderFromTypeRoot(r, tokenMap, groupMap));\n    }\n    correctSortOrderFromTypeRoot(root, tokenMap, groupMap) {\n        var _a;\n        let ids = this.flattenedIdsFromRoot(root, tokenMap, groupMap);\n        for (let i = 0; i < ids.length; i++) {\n            let element = (_a = tokenMap.get(ids[i])) !== null && _a !== void 0 ? _a : groupMap.get(ids[i]);\n            element.sortOrder = i * this.sortMultiplier;\n        }\n    }\n    flattenedIdsFromRoot(root, tokenMap, groupMap) {\n        let result = [root.id];\n        let ids = root.childrenIds;\n        for (let id of ids) {\n            result.push(id);\n            let tokenGroup = groupMap.get(id);\n            if (tokenGroup) {\n                result = result.concat(this.flattenedIdsFromRoot(tokenGroup, tokenMap, groupMap));\n            }\n            else {\n                let token = tokenMap.get(id);\n                if (token) {\n                    result.push(id);\n                }\n                else {\n                    throw new Error(`Unable to find token or group ${id} of type ${root.tokenType}`);\n                }\n            }\n        }\n        return result;\n    }\n}\nexports.SupernovaToolsDesignTokensPlugin = SupernovaToolsDesignTokensPlugin;\n","\"use strict\";\n//\n//  SDKDTJSONConverter.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTJSONConverter = void 0;\nconst SDKTokenType_1 = require(\"../../../model/enums/SDKTokenType\");\nconst SDKColorToken_1 = require(\"../../../model/tokens/SDKColorToken\");\nconst SDKGenericToken_1 = require(\"../../../model/tokens/SDKGenericToken\");\nconst SDKMeasureToken_1 = require(\"../../../model/tokens/SDKMeasureToken\");\nconst SDKRadiusToken_1 = require(\"../../../model/tokens/SDKRadiusToken\");\nconst SDKShadowToken_1 = require(\"../../../model/tokens/SDKShadowToken\");\nconst SDKTypographyToken_1 = require(\"../../../model/tokens/SDKTypographyToken\");\nconst SDKDTTokenMerger_1 = require(\"./SDKDTTokenMerger\");\nconst SDKDTTokenReferenceResolver_1 = require(\"./SDKDTTokenReferenceResolver\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility to DS Tokens plugin JSON to Supernova entities */\nclass DTJSONConverter {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, mapping) {\n        this.version = version;\n        this.mapping = mapping;\n        this.referenceResolver = new SDKDTTokenReferenceResolver_1.DTTokenReferenceResolver();\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Conversion\n    convertNodesToTokens(nodes, brand) {\n        // Color tokens\n        this.convertNodesToTokensForSupportedNodeTypes([\"color\"], nodes, brand);\n        // Sizing tokens\n        this.convertNodesToTokensForSupportedNodeTypes([\"sizing\", \"borderWidth\", \"spacing\", \"opacity\", \"fontSizes\", \"paragraphSpacing\", \"lineHeights\", \"letterSpacing\"], nodes, brand);\n        // Radii tokens\n        this.convertNodesToTokensForSupportedNodeTypes([\"borderRadius\"], nodes, brand);\n        // Other tokens\n        this.convertNodesToTokensForSupportedNodeTypes([\"other\"], nodes, brand);\n        // Shadow tokens\n        this.convertNodesToTokensForSupportedNodeTypes([\"boxShadow\"], nodes, brand);\n        // Typography tokens\n        this.convertNodesToTokensForSupportedNodeTypes([\"typography\"], nodes, brand);\n        // Fix nodes so they are aligned with the way Supernova expects root groups to be named\n        let processedNodes = this.referenceResolver.unmappedValues();\n        this.remapRootNodeKeys(processedNodes);\n        // Retrieve all tokens\n        return processedNodes;\n    }\n    remapRootNodeKeys(nodes) {\n        for (let node of nodes) {\n            let path = Array.from(node.path);\n            let firstSegment = path.splice(0, 1)[0];\n            // Remap remote to proper destination\n            switch (node.token.tokenType) {\n                case SDKTokenType_1.TokenType.color:\n                    firstSegment = \"Color\";\n                    break;\n                case SDKTokenType_1.TokenType.measure:\n                    firstSegment = \"Measure\";\n                    break;\n                case SDKTokenType_1.TokenType.radius:\n                    firstSegment = \"Radius\";\n                    break;\n                case SDKTokenType_1.TokenType.shadow:\n                    firstSegment = \"Shadow\";\n                    break;\n                case SDKTokenType_1.TokenType.typography:\n                    firstSegment = \"Typography\";\n                    break;\n                case SDKTokenType_1.TokenType.generic:\n                    firstSegment = \"Generic\";\n                    break;\n                default:\n                    throw new Error(`Unsupported type ${firstSegment} in remapping of nodes`);\n            }\n            let secondSegment = undefined;\n            switch (node.originalType) {\n                case \"borderRadius\":\n                    secondSegment = \"Border Radius\";\n                    break;\n                case \"borderWidth\":\n                    secondSegment = \"Border Width\";\n                    break;\n                case \"sizing\":\n                    secondSegment = \"Sizing\";\n                    break;\n                case \"fontSizes\":\n                    secondSegment = \"Font Size\";\n                    break;\n                case \"paragraphSpacing\":\n                    secondSegment = \"Paragraph Spacing\";\n                    break;\n                case \"lineHeights\":\n                    secondSegment = \"Line Height\";\n                    break;\n                case \"letterSpacing\":\n                    secondSegment = \"Letter Spacing\";\n                    break;\n                case \"spacing\":\n                    secondSegment = \"Spacing\";\n                    break;\n                case \"opacity\":\n                    secondSegment = \"Opacity\";\n                    break;\n                default:\n                    // Other types than listed should be ignored\n                    break;\n            }\n            // Remap original type and add extra group, if needed\n            if (secondSegment) {\n                path = [firstSegment, secondSegment, ...path];\n            }\n            else {\n                path = [firstSegment, ...path];\n            }\n            node.path = path;\n            // Rebuild key\n            node.key = SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.token.name);\n        }\n        return nodes;\n    }\n    convertNodesToTokensForSupportedNodeTypes(types, nodes, brand) {\n        // Filter out only nodes that we want to be resolving - we can't be resolving everything at once\n        nodes = nodes.filter(n => types.includes(n.type));\n        let unprocessedTokens = new Array();\n        // Convert atomic tokens, ie. tokens without references\n        for (let node of nodes) {\n            if (this.referenceResolver.valueNeedsComputing(node.value)) {\n                let token = this.convertAtomicNode(node, true, brand);\n                this.referenceResolver.addAtomicToken(token);\n            }\n            else if (!this.referenceResolver.valueIsReference(node.value)) {\n                let token = this.convertAtomicNode(node, false, brand);\n                this.referenceResolver.addAtomicToken(token);\n            }\n            else {\n                unprocessedTokens.push(node);\n            }\n        }\n        // Now we have all atomic tokens processed, we can start creating references\n        // References will be emptying pool until they are all resolved (this can take multiple\n        // passes, resolving one depth level with each pass)\n        while (unprocessedTokens.length !== 0) {\n            let unprocessedDepthTokens = new Array();\n            for (let node of unprocessedTokens) {\n                let token = this.convertReferencedNode(node, brand);\n                if (token) {\n                    this.referenceResolver.addAtomicToken(token);\n                }\n                else {\n                    unprocessedDepthTokens.push(node);\n                }\n            }\n            if (unprocessedDepthTokens.length === 0) {\n                break;\n            }\n            unprocessedTokens = unprocessedDepthTokens;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Atomic nodes\n    convertAtomicNode(node, computable, brand) {\n        let snType = this.convertDTTypeToSupernovaType(node.type);\n        switch (snType) {\n            case SDKTokenType_1.TokenType.color: return this.convertColorAtomicNode(node, brand);\n            case SDKTokenType_1.TokenType.measure: return this.convertMeasureAtomicNode(node, computable, brand);\n            case SDKTokenType_1.TokenType.radius: return this.convertRadiusAtomicNode(node, brand);\n            case SDKTokenType_1.TokenType.shadow: return this.convertShadowAtomicNode(node, brand);\n            case SDKTokenType_1.TokenType.typography: return this.convertTypographyAtomicNode(node, brand);\n            case SDKTokenType_1.TokenType.generic: return this.convertGenericAtomicNode(node, brand);\n            default: throw new Error(\"Unsupported token type \" + snType);\n        }\n    }\n    convertColorAtomicNode(node, brand) {\n        let constructedToken = SDKColorToken_1.ColorToken.create(this.version, brand, node.name, node.description, node.value, undefined, [], []);\n        return {\n            token: constructedToken,\n            originalType: node.type,\n            path: node.path,\n            key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n        };\n    }\n    convertMeasureAtomicNode(node, computable, brand) {\n        let constructedToken = SDKMeasureToken_1.MeasureToken.create(this.version, brand, node.name, node.description, computable ? \"1px\" : node.value, undefined, [], []);\n        return {\n            token: constructedToken,\n            originalType: node.type,\n            path: node.path,\n            key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n        };\n    }\n    convertRadiusAtomicNode(node, brand) {\n        let constructedToken = SDKRadiusToken_1.RadiusToken.create(this.version, brand, node.name, node.description, node.value, undefined, [], []);\n        return {\n            token: constructedToken,\n            originalType: node.type,\n            path: node.path,\n            key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n        };\n    }\n    convertShadowAtomicNode(node, brand) {\n        let constructedToken = SDKShadowToken_1.ShadowToken.create(this.version, brand, node.name, node.description, node.value, undefined, this.referenceResolver, [], []);\n        return {\n            token: constructedToken,\n            originalType: node.type,\n            path: node.path,\n            key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n        };\n    }\n    convertTypographyAtomicNode(node, brand) {\n        let constructedToken = SDKTypographyToken_1.TypographyToken.create(this.version, brand, node.name, node.description, node.value, undefined, this.referenceResolver, [], []);\n        return {\n            token: constructedToken,\n            originalType: node.type,\n            path: node.path,\n            key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n        };\n    }\n    convertGenericAtomicNode(node, brand) {\n        let constructedToken = SDKGenericToken_1.GenericToken.create(this.version, brand, node.name, node.description, node.value, undefined, [], []);\n        return {\n            token: constructedToken,\n            originalType: node.type,\n            path: node.path,\n            key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n        };\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Referenced nodes\n    convertReferencedNode(node, brand) {\n        let valueAsReference = node.value;\n        let resolvedToken = this.referenceResolver.lookupReferencedToken(valueAsReference);\n        if (resolvedToken) {\n            let constructedToken;\n            let snType = this.convertDTTypeToSupernovaType(node.type);\n            switch (snType) {\n                case SDKTokenType_1.TokenType.color:\n                    constructedToken = SDKColorToken_1.ColorToken.create(this.version, brand, node.name, node.description, undefined, resolvedToken, [], []);\n                    break;\n                case SDKTokenType_1.TokenType.measure:\n                    constructedToken = SDKMeasureToken_1.MeasureToken.create(this.version, brand, node.name, node.description, undefined, resolvedToken, [], []);\n                    break;\n                case SDKTokenType_1.TokenType.radius:\n                    constructedToken = SDKRadiusToken_1.RadiusToken.create(this.version, brand, node.name, node.description, undefined, resolvedToken, [], []);\n                    break;\n                case SDKTokenType_1.TokenType.shadow:\n                    constructedToken = SDKShadowToken_1.ShadowToken.create(this.version, brand, node.name, node.description, undefined, resolvedToken, this.referenceResolver, [], []);\n                    break;\n                case SDKTokenType_1.TokenType.typography:\n                    constructedToken = SDKTypographyToken_1.TypographyToken.create(this.version, brand, node.name, node.description, undefined, resolvedToken, this.referenceResolver, [], []);\n                    break;\n                case SDKTokenType_1.TokenType.generic:\n                    constructedToken = SDKGenericToken_1.GenericToken.create(this.version, brand, node.name, node.description, undefined, resolvedToken, [], []);\n                    break;\n                default: throw new Error(\"Unsupported token type \" + snType);\n            }\n            return {\n                token: constructedToken,\n                path: node.path,\n                originalType: node.type,\n                key: SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name)\n            };\n        }\n        return undefined;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Convenience\n    convertDTTypeToSupernovaType(type) {\n        switch (type) {\n            case \"color\": return SDKTokenType_1.TokenType.color;\n            case \"borderRadius\": return SDKTokenType_1.TokenType.radius;\n            case \"boxShadow\": return SDKTokenType_1.TokenType.shadow;\n            case \"typography\": return SDKTokenType_1.TokenType.typography;\n            case \"borderWidth\":\n            case \"sizing\":\n            case \"opacity\":\n            case \"spacing\":\n            case \"fontSizes\":\n            case \"paragraphSpacing\":\n            case \"letterSpacing\":\n            case \"lineHeights\":\n                return SDKTokenType_1.TokenType.measure;\n            case \"other\":\n                return SDKTokenType_1.TokenType.generic;\n            default: throw new Error(\"Unsupported token type \" + type);\n        }\n    }\n}\nexports.DTJSONConverter = DTJSONConverter;\n","\"use strict\";\n//\n//  SDKDTJSONGroupBuilder.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTJSONGroupBuilder = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../../..\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility for building token trees */\nclass DTJSONGroupBuilder {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version, mapping) {\n        this.version = version;\n        this.mapping = mapping;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Tree builder\n    /** Create mapping between DT <> SN and assign all tokens into their respective newly created groups */\n    constructAllDefinableGroupsTrees(processedNodes, brand) {\n        // Base mapping function\n        let mapping = [\n            { snType: __1.TokenType.color, dtType: 'color', snRootName: 'Color', dtRootName: 'color' }\n        ];\n        let groups = [];\n        for (let map of mapping) {\n            groups = groups.concat(this.constructGroupTree(processedNodes, map, brand));\n        }\n        return groups;\n    }\n    /** Create group tree needed to contain entire token tree for particular mapping combination */\n    constructGroupTree(processedNodes, mapping, brand) {\n        // Select only nodes with types corresponding to the group\n        let nodes = processedNodes.filter(n => n.token.tokenType === mapping.snType);\n        let rootGroup = this.createGroup(brand.persistentId, this.version.id, mapping.snRootName, mapping.snType, true);\n        // Set main root group\n        let mappedGroups = new Map();\n        mappedGroups.set('', rootGroup);\n        for (let node of nodes) {\n            let key = node.path.join('.');\n            this.constructGroupChain(this.version, brand, mappedGroups, node.path);\n            let group = mappedGroups.get(key);\n            group = group.toMutatedObject(group.childrenIds.concat(node.token.id));\n            mappedGroups.set(key, group);\n        }\n        return Array.from(mappedGroups.values());\n    }\n    constructGroupChain(version, brand, groups, path) {\n        if (path.length === 0) {\n            return;\n        }\n        // Get parent object\n        let parentPath = '';\n        let parent = groups.get(parentPath);\n        let partialPath = [];\n        for (let segment of path) {\n            partialPath.push(segment);\n            let partialKey = partialPath.join('.');\n            let object = groups.get(partialKey);\n            if (object) {\n                // Path exists so we don't do anything else\n            }\n            else {\n                // Path doesn't exist, we create it\n                let group = new __1.TokenGroup({\n                    brandId: brand.persistentId,\n                    tokenType: __1.TokenType.color,\n                    designSystemVersionId: version.id,\n                    persistentId: uuid_1.v4(),\n                    isRoot: false,\n                    id: undefined,\n                    meta: {\n                        name: segment,\n                        description: ''\n                    },\n                    childrenIds: []\n                });\n                // Assign to parent\n                parent = parent.toMutatedObject(parent.childrenIds.concat(group.id));\n                groups.set(parentPath, parent);\n                parent = group;\n                // Store group\n                groups.set(partialKey, group);\n                parentPath = partialKey;\n            }\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Group manipulation\n    createGroup(brandId, versionId, name, type, isRoot) {\n        return new __1.TokenGroup({\n            brandId: brandId,\n            tokenType: type,\n            designSystemVersionId: versionId,\n            persistentId: uuid_1.v4(),\n            isRoot: isRoot,\n            id: undefined,\n            meta: {\n                name: name,\n                description: ''\n            },\n            childrenIds: []\n        });\n    }\n}\nexports.DTJSONGroupBuilder = DTJSONGroupBuilder;\n","\"use strict\";\n//\n//  SDKDTJSONLoader.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTJSONLoader = exports.DTParsedThemeSetPriority = void 0;\nconst SDKSupernovaError_1 = require(\"../../../core/errors/SDKSupernovaError\");\nconst fs = __importStar(require(\"fs\"));\nvar DTParsedThemeSetPriority;\n(function (DTParsedThemeSetPriority) {\n    DTParsedThemeSetPriority[\"source\"] = \"source\";\n    DTParsedThemeSetPriority[\"enabled\"] = \"enabled\";\n    DTParsedThemeSetPriority[\"disabled\"] = \"disabled\";\n})(DTParsedThemeSetPriority = exports.DTParsedThemeSetPriority || (exports.DTParsedThemeSetPriority = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Design Tokens Plugin Manipulation Tool */\nclass DTJSONLoader {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() {\n        this.themeBuffer = new Array();\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Loader\n    /** Load token definitions from path */\n    loadDSObjectsFromTokenFile(pathToFile) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!(fs.existsSync(pathToFile) && fs.lstatSync(pathToFile).isFile())) {\n                    throw SDKSupernovaError_1.SupernovaError.fromProcessingError(`Provided token file directory ${pathToFile} is not a file or doesn't exist`);\n                }\n                let definition = fs.readFileSync(pathToFile, 'utf8');\n                let parsedDefinition = this.parseDefinition(definition);\n                return parsedDefinition;\n            }\n            catch (error) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load JSON definition file: ' + error);\n            }\n        });\n    }\n    loadDSObjectsFromTokenFileDirectory(pathToDirectory) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let fullStructuredObject = {};\n                if (!(fs.existsSync(pathToDirectory) && fs.lstatSync(pathToDirectory).isDirectory())) {\n                    throw SDKSupernovaError_1.SupernovaError.fromProcessingError(`Provided data directory ${pathToDirectory} is not a directory or doesn't exist`);\n                }\n                // Read all files in the path\n                let paths = fs\n                    .readdirSync(pathToDirectory, { withFileTypes: true })\n                    .filter(item => !item.isDirectory())\n                    .map(item => item.name);\n                for (let path of paths) {\n                    // Load every JSON there is, and add it to the resulting structured object\n                    let fullPath = pathToDirectory + '/' + path;\n                    if (fullPath.endsWith('json') && path !== 'supernova.settings.json' && !path.includes('$')) {\n                        let result = yield this.loadDSObjectsFromTokenFile(fullPath);\n                        if (typeof result === 'object') {\n                            fullStructuredObject[path.substring(0, path.length - 5)] = result;\n                        }\n                    }\n                }\n                // Try to load themes, if any\n                let themePath = pathToDirectory + '/' + \"$themes.json\";\n                if (fs.existsSync(themePath)) {\n                    let themes = yield this.loadDSObjectsFromTokenFile(themePath);\n                    fullStructuredObject[\"$themes\"] = themes;\n                }\n                // Try to load metadata, if any\n                let metadataPath = pathToDirectory + '/' + \"$metadata.json\";\n                if (fs.existsSync(metadataPath)) {\n                    let metadata = yield this.loadDSObjectsFromTokenFile(themePath);\n                    fullStructuredObject[\"$metadata\"] = metadata;\n                }\n                return fullStructuredObject;\n            }\n            catch (error) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load JSON definition file: ' + error);\n            }\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - File Parser\n    parseDefinition(definition) {\n        try {\n            let object = JSON.parse(definition);\n            if (typeof object !== 'object') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Invalid token definition JSON file - root level entity must be object');\n            }\n            return object;\n        }\n        catch (error) {\n            throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Invalid token definition JSON file - file structure invalid');\n        }\n    }\n}\nexports.DTJSONLoader = DTJSONLoader;\n","\"use strict\";\n//\n//  SDKDTJSONLoader.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTJSONParser = exports.DTParsedThemeSetPriority = void 0;\nvar DTParsedThemeSetPriority;\n(function (DTParsedThemeSetPriority) {\n    DTParsedThemeSetPriority[\"source\"] = \"source\";\n    DTParsedThemeSetPriority[\"enabled\"] = \"enabled\";\n    DTParsedThemeSetPriority[\"disabled\"] = \"disabled\";\n})(DTParsedThemeSetPriority = exports.DTParsedThemeSetPriority || (exports.DTParsedThemeSetPriority = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Design Tokens Plugin Manipulation Tool */\nclass DTJSONParser {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() {\n        this.themeBuffer = new Array();\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Data Parser\n    processPluginDataRepresentation(definition) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sets = this.processSets(definition);\n            let nodes = this.parseNode([], definition, sets);\n            let themes = this.processThemes(definition, sets);\n            let setArray = Array.from(sets.values());\n            console.log(`----- Loaded token data:`);\n            console.log(`Nodes: ${nodes.length}`);\n            console.log(`Sets: ${setArray.length}, ${setArray.map(s => `\\n | ${s.name}: ${s.contains.length} nodes`)}`);\n            console.log(`Themes: ${themes.length}, ${themes.map(t => `\\n | ${t.name}: ${t.selectedTokenSets.filter(s => s.priority !== DTParsedThemeSetPriority.disabled).length} sets`)}`);\n            return {\n                nodes: nodes,\n                sets: Array.from(sets.values()),\n                themes: themes\n            };\n        });\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Theme Parser\n    processThemes(definition, tokenSets) {\n        let themes = new Array();\n        let order = [];\n        // Find metadata\n        let metadata = definition[\"$metadata\"];\n        if (metadata) {\n            let setOrder = metadata[\"tokenSetOrder\"];\n            if (setOrder) {\n                order = setOrder;\n            }\n        }\n        let themeDefinitions = definition[\"$themes\"]; // Parse each theme separately\n        for (let themeObject of themeDefinitions) {\n            let name = themeObject[\"name\"];\n            let id = themeObject[\"id\"];\n            let selectedTokenSets = themeObject[\"selectedTokenSets\"];\n            if (!name || !id || !selectedTokenSets) {\n                // Skip execution of this theme as it doesn't have correct information provided\n                throw new Error(\"Incorrect theme data structure, missing one of required attributes [name, id, selectedTokenSets]\");\n            }\n            // Process token sets\n            let pairedSets = new Array();\n            for (let [tokenSetName, unknownPriority] of Object.entries(selectedTokenSets)) {\n                let setName = tokenSetName;\n                let setPriority = unknownPriority;\n                let fetchedSet = tokenSets.get(setName);\n                let pair = {\n                    priority: setPriority,\n                    set: fetchedSet\n                };\n                pairedSets.push(pair);\n            }\n            let theme = {\n                selectedTokenSets: pairedSets,\n                name: name,\n                id: id\n            };\n            themes.push(theme);\n        }\n        return themes;\n    }\n    processSets(definition) {\n        let sets = new Map();\n        // Parse top level objects as sets, unless they contain $\n        // Value is ignored, as that is parsed separately\n        for (let [setName, value] of Object.entries(definition)) {\n            if (!setName.startsWith(\"$\")) {\n                let set = {\n                    contains: [],\n                    name: setName,\n                    id: setName\n                };\n                sets.set(setName, set);\n            }\n        }\n        return sets;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Node Parser\n    parseNode(path, objects, sets) {\n        var _a;\n        let result = [];\n        for (let [name, value] of Object.entries(objects)) {\n            if (typeof value === 'object') {\n                if (name.startsWith(\"$\")) {\n                    // Skipping keys internal to design token plugin because we are currently not using them\n                }\n                else if (value.hasOwnProperty('value') && value.hasOwnProperty('type')) {\n                    // Treat as value\n                    let entity = {\n                        rootKey: path[0],\n                        name: name,\n                        path: path,\n                        type: value['type'],\n                        value: value['value'],\n                        description: (_a = value['description']) !== null && _a !== void 0 ? _a : null\n                    };\n                    let set = sets.get(entity.rootKey);\n                    if (!set) {\n                        throw new Error('Node references unknown set');\n                    }\n                    set.contains.push(entity);\n                    result.push(entity);\n                }\n                else {\n                    // Treat as leaf\n                    result = result.concat(this.parseNode(path.concat(name), value, sets));\n                }\n            }\n            else {\n                throw new Error('Unable to parse, unsupported structure in token node leaf');\n            }\n        }\n        return result;\n    }\n}\nexports.DTJSONParser = DTJSONParser;\n","\"use strict\";\n//\n//  SDKDTMapLoader.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTMapLoader = exports.DTPluginToSupernovaMapType = void 0;\nconst SDKSupernovaError_1 = require(\"../../../core/errors/SDKSupernovaError\");\nconst fs = __importStar(require(\"fs\"));\nvar DTPluginToSupernovaMapType;\n(function (DTPluginToSupernovaMapType) {\n    DTPluginToSupernovaMapType[\"theme\"] = \"theme\";\n    DTPluginToSupernovaMapType[\"set\"] = \"set\";\n})(DTPluginToSupernovaMapType = exports.DTPluginToSupernovaMapType || (exports.DTPluginToSupernovaMapType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility to load token maps */\nclass DTMapLoader {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() { }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Mapping Conversion\n    loadFromPath(pathToFile) {\n        try {\n            if (!(fs.existsSync(pathToFile) && fs.lstatSync(pathToFile).isFile())) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError(`Provided configuration file directory ${pathToFile} is not a file or doesn't exist`);\n            }\n            let definition = fs.readFileSync(pathToFile, 'utf8');\n            let parsedDefinition = this.parseDefinition(definition);\n            this.weakValidateMapping(parsedDefinition);\n            return this.processFileToMapping(parsedDefinition);\n        }\n        catch (error) {\n            throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load JSON definition file: ' + error);\n        }\n    }\n    weakValidateMapping(mapping) {\n        if (!mapping.hasOwnProperty('mode') ||\n            typeof mapping.mode !== 'string' ||\n            (mapping.mode !== 'multi-file' && mapping.mode !== 'single-file')) {\n            throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mode` must be provided [single-file or multi-file]`');\n        }\n        if (!mapping.mapping || !(mapping.mapping instanceof Array)) {\n            throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mapping` key must be present and array.');\n        }\n        let mapPack = mapping.mapping;\n        for (let map of mapPack) {\n            if (typeof map !== 'object') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mapping` must contain objects only');\n            }\n            if (!map.tokenSets && !map.tokensTheme) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mapping` must contain either `tokensTheme` or `tokenSets`');\n            }\n            if (map.tokenSets && map.tokensTheme) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mapping` must not contain both `tokensTheme` or `tokenSets`');\n            }\n            if (map.tokenSets && (!(map.tokenSets instanceof Array) || map.tokenSets.length === 0)) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mapping`.`tokenSets` must be an Array with at least one entry');\n            }\n            if (map.tokensTheme && (typeof map.tokensTheme !== 'string' || map.tokensTheme.length === 0)) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `mapping`.`tokensTheme` must be a non-empty string');\n            }\n            if (!map.supernovaBrand || typeof map.supernovaBrand !== 'string' || map.supernovaBrand.length === 0) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `supernovaBrand` must be a non-empty string');\n            }\n            if (map.supernovaTheme && (typeof map.supernovaTheme !== 'string' || map.supernovaTheme.length === 0)) {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `supernovaTheme` may be empty but must be non-empty string if not');\n            }\n        }\n        if (mapping.settings) {\n            if (typeof mapping.settings !== 'object') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `settings` must be an object');\n            }\n            if (mapping.settings.hasOwnProperty('dryRun') && typeof mapping.settings.dryRun !== 'boolean') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `dryRun` must be of boolan type');\n            }\n            if (mapping.settings.hasOwnProperty('verbose') && typeof mapping.settings.verbose !== 'boolean') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `verbose` must be of boolan type');\n            }\n            if (mapping.settings.hasOwnProperty('preciseCopy') && typeof mapping.settings.preciseCopy !== 'boolean') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Unable to load mapping file: `preciseCopy` must be of boolan type');\n            }\n        }\n    }\n    processFileToMapping(mapping) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        let result = new Array();\n        for (let map of mapping.mapping) {\n            result.push({\n                type: map.tokenSets ? DTPluginToSupernovaMapType.set : DTPluginToSupernovaMapType.theme,\n                pluginSets: map.tokenSets,\n                pluginTheme: (_a = map.tokensTheme) !== null && _a !== void 0 ? _a : null,\n                bindToBrand: map.supernovaBrand,\n                bindToTheme: (_b = map.supernovaTheme) !== null && _b !== void 0 ? _b : null,\n                nodes: null,\n                processedNodes: null,\n                processedGroups: null\n            });\n        }\n        let settings = {\n            dryRun: (_d = (_c = mapping.settings) === null || _c === void 0 ? void 0 : _c.dryRun) !== null && _d !== void 0 ? _d : false,\n            verbose: (_f = (_e = mapping.settings) === null || _e === void 0 ? void 0 : _e.verbose) !== null && _f !== void 0 ? _f : false,\n            preciseCopy: (_h = (_g = mapping.settings) === null || _g === void 0 ? void 0 : _g.verbose) !== null && _h !== void 0 ? _h : false\n        };\n        return {\n            mapping: result,\n            settings: settings\n        };\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - File Parser\n    parseDefinition(definition) {\n        try {\n            let object = JSON.parse(definition);\n            if (typeof object !== 'object') {\n                throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Invalid Supernova mapping definition JSON file - root level entity must be object');\n            }\n            return object;\n        }\n        catch (error) {\n            throw SDKSupernovaError_1.SupernovaError.fromProcessingError('Invalid Supernova mapping definition JSON file - file structure invalid');\n        }\n    }\n}\nexports.DTMapLoader = DTMapLoader;\n","\"use strict\";\n//\n//  SDKDTMapResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTMapResolver = void 0;\nconst SDKDTJSONLoader_1 = require(\"./SDKDTJSONLoader\");\nconst SDKDTTokenMerger_1 = require(\"./SDKDTTokenMerger\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility to resolve token maps */\nclass DTMapResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version) {\n        this.version = version;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Conversion\n    mappedNodePools(map, themes, sets) {\n        // Remap for performance\n        let setMap = new Map();\n        for (let set of sets) {\n            setMap.set(set.id, set);\n        }\n        // Resolve which sets we need to use\n        let tokenSetToUse = new Array();\n        if (map.pluginSets) {\n            for (let pluginSet of map.pluginSets) {\n                let set = setMap.get(pluginSet);\n                if (!set) {\n                    throw new Error(`Incorrect set ${set} referenced by the mapping`);\n                }\n                tokenSetToUse.push(set);\n            }\n        }\n        else if (map.pluginTheme) {\n            let theme = themes.find(t => t.id === map.pluginTheme || t.name === map.pluginTheme);\n            if (!theme) {\n                throw new Error(`Incorrect plugin theme ${map.pluginTheme} referenced by the mapping.\\n\\nAvailable plugin themes are: [${themes.map(t => t.name)}]\\nYou can also use any of loaded sets: [${sets.map(s => s.name)}]`);\n            }\n            // Find if there is a source first\n            for (let pair of theme.selectedTokenSets) {\n                if (pair.priority === SDKDTJSONLoader_1.DTParsedThemeSetPriority.source) {\n                    let set = setMap.get(pair.set.id);\n                    if (!set) {\n                        throw new Error(`Incorrect plugin set ${pair.set.id} referenced by the mapping.\\n\\nAvailable plugin sets are: [${sets.map(s => s.name)}]\\nYou can also use any of loaded themes: [${themes.map(t => t.name)}]`);\n                    }\n                    tokenSetToUse.push(set);\n                }\n            }\n            // Find other enabled sources\n            for (let pair of theme.selectedTokenSets) {\n                if (pair.priority === SDKDTJSONLoader_1.DTParsedThemeSetPriority.enabled) {\n                    let set = setMap.get(pair.set.id);\n                    if (!set) {\n                        throw new Error(`Incorrect plugin set ${pair.set.id} referenced by the mapping.\\n\\nAvailable plugin sets are: [${sets.map(s => s.name)}]\\nYou can also use any of loaded themes: [${themes.map(t => t.name)}]`);\n                    }\n                    tokenSetToUse.push(set);\n                }\n            }\n        }\n        // Compute unique nodes based on the set combination provided, and retrieve enhanced map\n        let uniqueNodes = this.computeUniqueNodesFromSets(tokenSetToUse);\n        map.nodes = uniqueNodes;\n        return map;\n    }\n    computeUniqueNodesFromSets(sets) {\n        // This method will compute unique nodes based on the created key for the node.\n        // If some sets override previous nodes, they'll be overriden, otherwise union is constructed.\n        // There can always only be a single path-unique node, the last one applied from all overrides\n        let uniqueNodes = new Map();\n        for (let set of sets) {\n            for (let node of set.contains) {\n                let key = SDKDTTokenMerger_1.DTTokenMerger.buildKey(node.path, node.name);\n                uniqueNodes.set(key, node);\n            }\n        }\n        return Array.from(uniqueNodes.values());\n    }\n}\nexports.DTMapResolver = DTMapResolver;\n","\"use strict\";\n//\n//  SDKDTThemeMerger.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTThemeMerger = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst __1 = require(\"../../..\");\nconst SDKTokenTheme_1 = require(\"../../../model/themes/SDKTokenTheme\");\nconst SDKTokenCompator_1 = require(\"../../../model/tokens/SDKTokenCompator\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility allowing merging of two pools of tokens */\nclass DTThemeMerger {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(version) {\n        this.version = version;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Merger\n    makeTheme(upstreamTokens, upstreamTheme, processedNodes) {\n        // Build map of existing tokens using path keys\n        let existingOverrides = new Map();\n        for (let token of upstreamTheme.overriddenTokens) {\n            let key = this.buildKey(this.buildPath(token), token.name);\n            existingOverrides.set(key, token);\n        }\n        let newTokenSet = new Map();\n        for (let token of processedNodes) {\n            let key = this.buildKey(token.path, token.token.name);\n            newTokenSet.set(key, token);\n        }\n        // Create theme replica to fill with tokens\n        let themeReplica = new SDKTokenTheme_1.TokenTheme({\n            persistentId: upstreamTheme.id,\n            id: upstreamTheme.versionedId,\n            brandId: upstreamTheme.brandId,\n            meta: {\n                name: upstreamTheme.name,\n                description: upstreamTheme.description\n            },\n            createdAt: upstreamTheme.createdAt ? upstreamTheme.createdAt.toISOString() : undefined,\n            updatedAt: upstreamTheme.updatedAt ? upstreamTheme.updatedAt.toISOString() : undefined,\n            codeName: upstreamTheme.codeName,\n            overrides: [],\n            designSystemVersionId: upstreamTheme.designSystemVersionId\n        }, {\n            id: this.version.id\n        });\n        // Resolve each existing token that belong to the theme\n        for (let token of upstreamTokens) {\n            let key = this.buildKey(this.buildPath(token), token.name);\n            let incomingThemeOverride = newTokenSet.get(key);\n            if (incomingThemeOverride) {\n                this.replaceIdAcrossAllPossibleReferences(incomingThemeOverride, token.id, processedNodes);\n                // console.log(`overriding token from FT for key ${key}`)\n                // For any defined override, use the new token, and align its id with the original token, if the token has different value\n                if (!SDKTokenCompator_1.TokenComparator.isEqualTokenValue(token, incomingThemeOverride.token)) {\n                    // console.log(`value is not the same for token ${key}, using override`)\n                    incomingThemeOverride.token.id = token.id;\n                    themeReplica.overriddenTokens.push(incomingThemeOverride.token);\n                }\n                else {\n                    // console.log(`skipping override`)\n                    // Otherwise use override that already exists without modifications\n                    let currentThemeOverride = existingOverrides.get(key);\n                    if (currentThemeOverride) {\n                        // console.log(`overriding token from existing overrides ${key}`)\n                        themeReplica.overriddenTokens.push(currentThemeOverride);\n                    }\n                    else {\n                        // console.log(`using default value for token ${key}, no override found`)\n                    }\n                }\n            }\n            else {\n                // Otherwise use override that already exists without modifications\n                let currentThemeOverride = existingOverrides.get(key);\n                if (currentThemeOverride) {\n                    // console.log(`overriding token from existing overrides ${key}`)\n                    themeReplica.overriddenTokens.push(currentThemeOverride);\n                }\n                else {\n                    // console.log(`using default value for token ${key}, no override found`)\n                }\n            }\n        }\n        return themeReplica;\n    }\n    replaceIdAcrossAllPossibleReferences(override, newId, allTokens) {\n        let currentId = override.token.id;\n        override.token.id = newId;\n        for (let token of allTokens) {\n            if (token.token instanceof __1.ColorToken) {\n                if (token.token.value.referencedToken && token.token.value.referencedToken.id === currentId) {\n                    token.token.value.referencedToken.id = newId;\n                }\n            }\n            // TODO\n        }\n    }\n    buildKey(path, name) {\n        return [...path, name].join('/');\n    }\n    buildPath(token) {\n        if (!token.parent) {\n            throw new Error('Keys can only be built for tokens that have parents');\n        }\n        let parent = token.parent;\n        let segments = [];\n        while (parent) {\n            segments = [parent.name, ...segments];\n            parent = parent.parent;\n        }\n        return segments;\n    }\n}\nexports.DTThemeMerger = DTThemeMerger;\n","\"use strict\";\n//\n//  SDKDTTokenTreeMerger.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTTokenGroupTreeMerger = exports.DTGroupMergeDiff = void 0;\nconst SDKDTGroupTree_1 = require(\"./tree/SDKDTGroupTree\");\nconst SDKDTGroupTreeNode_1 = require(\"./tree/SDKDTGroupTreeNode\");\nclass DTGroupMergeDiff {\n}\nexports.DTGroupMergeDiff = DTGroupMergeDiff;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility allowing merging of two distinct token trees */\nclass DTTokenGroupTreeMerger {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() { }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Merger\n    makeGroupsDiff(tokensDiff, existingElements) {\n        // Contruct roots to take data from\n        const exitingRoots = SDKDTGroupTree_1.buildBrandedElementRoots(existingElements);\n        const desiredStructures = new Map();\n        // Make group structure\n        for (let i = 0; i < tokensDiff.toCreateOrUpdate.length; i++) {\n            const node = tokensDiff.toCreateOrUpdate[i];\n            const nameParts = node.path.map(s => s.trim());\n            nameParts.shift();\n            let typeRoots = desiredStructures.get(node.token.brandId);\n            if (!typeRoots) {\n                typeRoots = new Map();\n                desiredStructures.set(node.token.brandId, typeRoots);\n            }\n            let typeRoot = typeRoots.get(node.token.tokenType);\n            if (!typeRoot) {\n                const rootElem = exitingRoots.get(node.token.brandId).get(node.token.tokenType).element;\n                typeRoot = new SDKDTGroupTree_1.GroupTree(rootElem);\n                typeRoots.set(node.token.tokenType, typeRoot);\n            }\n            const group = typeRoot.getOrCreateGroup(nameParts);\n            group.children.push(new SDKDTGroupTreeNode_1.GroupTreeNode(node.token, typeRoot));\n            // if (elem instanceof TokenGroup) {\n            // Ensure tokens are above groups by sorting\n            // group.applyDefaultSorting()\n            // }\n        }\n        // Next up - construct results\n        const toUpdate = [];\n        const toCreate = [];\n        const toDelete = [];\n        const compareDesiredAndExisting = (importNode, existingNode) => {\n            var _a;\n            if (importNode.isGroup) {\n                for (const c of importNode.children) {\n                    const existingChild = ((_a = existingNode === null || existingNode === void 0 ? void 0 : existingNode.children) !== null && _a !== void 0 ? _a : []).find(exc => exc.name === c.name && exc.isGroup === c.isGroup);\n                    compareDesiredAndExisting(c, existingChild);\n                }\n                const importChildrenIds = importNode.children.map(c => c.element.id);\n                if (existingNode) {\n                    importNode.element.id = existingNode.element.id;\n                    importNode.element.versionedId = existingNode.element.versionedId;\n                    const existingChildrenIds = existingNode.children.map(c => c.element.id);\n                    if (JSON.stringify(importChildrenIds) !== JSON.stringify(existingChildrenIds)) {\n                        toUpdate.push({\n                            element: importNode.element,\n                            childrenIds: importChildrenIds\n                        });\n                    }\n                }\n                else {\n                    toCreate.push({\n                        element: importNode.element,\n                        childrenIds: importChildrenIds\n                    });\n                }\n            }\n        };\n        for (const [brandId, typeRoots] of desiredStructures.entries()) {\n            for (const type of typeRoots.keys()) {\n                compareDesiredAndExisting(typeRoots.get(type), exitingRoots.get(brandId).get(type));\n            }\n        }\n        return {\n            toCreate,\n            toUpdate,\n            toDelete\n        };\n    }\n}\nexports.DTTokenGroupTreeMerger = DTTokenGroupTreeMerger;\n","\"use strict\";\n//\n//  SDKDTTokenMerger.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTTokenMerger = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst uuid_1 = require(\"uuid\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility allowing merging of two pools of tokens */\nclass DTTokenMerger {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Properties\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() { }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Merger\n    static buildKey(path, name) {\n        return [...path, name].join('/');\n    }\n    buildPath(token) {\n        if (!token.parent) {\n            throw new Error('Keys can only be built for tokens that have parents');\n        }\n        let parent = token.parent;\n        let segments = [];\n        while (parent) {\n            segments = [parent.name, ...segments];\n            parent = parent.parent;\n        }\n        return segments;\n    }\n    buildNodeMap(nodes) {\n        const result = new Map();\n        for (let node of nodes) {\n            // Possibly filter out tokens with styles associated with them?\n            result.set(node.key, node);\n        }\n        return result;\n    }\n    convertBaseTokensToProcessedNode(tokens) {\n        return tokens.map(t => {\n            let path = this.buildPath(t);\n            let key = DTTokenMerger.buildKey(path, t.name);\n            return {\n                token: t,\n                key: key,\n                originalType: undefined,\n                path: path\n            };\n        });\n    }\n    makeTokensDiff(existing, extracted) {\n        const toUpdate = [];\n        const toCreate = [];\n        const toDelete = [];\n        const toCreateOrUpdate = [];\n        const existingAsProcessedNodes = this.convertBaseTokensToProcessedNode(existing);\n        const existingMap = this.buildNodeMap(existingAsProcessedNodes);\n        const extractedMap = this.buildNodeMap(extracted);\n        for (const node of extracted) {\n            const key = DTTokenMerger.buildKey(node.path, node.token.name);\n            const oldToken = existingMap.get(key);\n            if (oldToken) {\n                node.token.id = oldToken.token.id;\n                node.token.versionedId = oldToken.token.versionedId;\n                toUpdate.push(node);\n            }\n            else {\n                node.token.id = uuid_1.v4();\n                toCreate.push(node);\n            }\n            toCreateOrUpdate.push(node);\n        }\n        // const existingCollection = new DTProcessedTokenNodeCollection(existing)\n        // const extractedCollectionToUpdate = new DTProcessedTokenNodeCollection(toUpdate)\n        // Reiterate over `toUpdate` again to set or break aliases\n        // we can't do that during first iteration, because during first\n        // iteration we don't have correct `persistentId` attr set\n        // This is only experimental, TODO: get to it later\n        /*\n        for (const token of toUpdate) {\n          const oldToken = existingCollection.index.get(token.id)\n    \n          if (oldToken..aliasTo) {\n            const alias = oldToken.data.aliasTo\n            // NOTE: currently one level supported\n            const aliasedToken = extractedCollectionToUpdate.index.get(alias) ?? existingCollection.index.get(alias)\n            if (aliasedToken) {\n              const tokenValue = stringify(token.toTokenDTO().data.value)\n              const aliasedValue = stringify(aliasedToken.toTokenDTO().data.value)\n    \n              if (tokenValue === aliasedValue) {\n                token.data.aliasTo = alias\n              }\n            }\n          }\n        }\n        */\n        for (const node of existingAsProcessedNodes) {\n            const key = DTTokenMerger.buildKey(node.path, node.token.name);\n            if (!extractedMap.has(key)) {\n                toDelete.push(node);\n            }\n        }\n        return {\n            toUpdate,\n            toCreate,\n            toDelete,\n            toCreateOrUpdate\n        };\n    }\n}\nexports.DTTokenMerger = DTTokenMerger;\n","\"use strict\";\n//\n//  SDKDTTokenReferenceResolver.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2021 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DTTokenReferenceResolver = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Types\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Utility allowing resolution of token references */\nclass DTTokenReferenceResolver {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor() {\n        // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n        // MARK: - Properties\n        this.mappedTokens = new Map();\n        this.nodes = [];\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Utilities\n    addAtomicToken(token) {\n        let nodePath = this.tokenReferenceKey(token.path, token.token.name);\n        if (!this.mappedTokens.get(nodePath)) {\n            this.mappedTokens.set(nodePath, token.token);\n            this.nodes.push(token);\n        }\n    }\n    addAtomicTokens(tokens) {\n        for (let token of tokens) {\n            this.addAtomicToken(token);\n        }\n    }\n    unmappedValues() {\n        return this.nodes;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Lookup\n    lookupReferencedToken(reference) {\n        return this.mappedTokens.get(reference);\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Conveniences\n    valueIsReference(value) {\n        if (typeof value !== \"string\") {\n            return false;\n        }\n        value = value.trim();\n        return value.length > 3 &&\n            value.startsWith(\"{\") &&\n            value.endsWith(\"}\");\n    }\n    valueNeedsComputing(value) {\n        if (typeof value !== \"string\") {\n            return false;\n        }\n        if ((value.match(/{/g) || []).length > 1 || value.includes(\"*\") || value.includes(\"/\") || value.includes(\"%\")) {\n            return true;\n        }\n        return false;\n    }\n    tokenReferenceKey(path, name) {\n        // Delete initial piece of path, as this is only grouping element\n        let newPath = Array.from(path);\n        newPath.splice(0, 1);\n        // Return path key that is the same as what Design Tokens uses for referencing\n        return \"{\" + [...newPath, name].join(\".\") + \"}\";\n    }\n}\nexports.DTTokenReferenceResolver = DTTokenReferenceResolver;\n","\"use strict\";\n//\n//  SDKDTGroupTree.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildBrandedElementRoots = exports.GroupTree = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst __1 = require(\"../../../..\");\nconst SDKDTGroupTreeNode_1 = require(\"./SDKDTGroupTreeNode\");\nconst SDKDTParentChildMapping_1 = require(\"./SDKDTParentChildMapping\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tree Implementation\nclass GroupTree extends SDKDTGroupTreeNode_1.GroupTreeNode {\n    // ---------------------\n    // MARK: - Constructor\n    constructor(backingElement) {\n        super(backingElement, null);\n        this.childType = backingElement.tokenType;\n        this.tree = this;\n    }\n    // ---------------------\n    // MARK: - Construction\n    static populate(root, elements, parentChildrenMap) {\n        if (!root) {\n            return null;\n        }\n        const tree = new GroupTree(root);\n        tree.populate(parentChildrenMap);\n        return tree;\n    }\n}\nexports.GroupTree = GroupTree;\nfunction buildBrandedElementRoots(elements) {\n    const result = new Map();\n    const { childrenMap } = SDKDTParentChildMapping_1.buildParentChildrenMap(elements);\n    const roots = elements.filter(element => (element instanceof __1.TokenGroup) && element.isRoot);\n    const brandIds = new Set(roots.map(e => e.brandId));\n    for (const brandId of brandIds) {\n        const typeRoots = new Map();\n        result.set(brandId, typeRoots);\n        for (const type of Object.values(__1.TokenType)) {\n            const root = roots.find(r => r.brandId === brandId && r.tokenType === type);\n            const tree = GroupTree.populate(root, elements, childrenMap);\n            if (tree) {\n                typeRoots.set(type, tree);\n            }\n        }\n    }\n    return result;\n}\nexports.buildBrandedElementRoots = buildBrandedElementRoots;\n","\"use strict\";\n//\n//  SDKDTGroupTreeNode.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GroupTreeNode = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst lodash_1 = __importDefault(require(\"lodash\"));\nconst { sortBy } = lodash_1.default;\nconst uuid_1 = require(\"uuid\");\nconst __1 = require(\"../../../..\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tree Node Implementation\nclass GroupTreeNode {\n    // -------------------\n    // MARK: - Constructor\n    constructor(element, tree) {\n        this.element = element;\n        this.tree = tree;\n        if (this.isGroup) {\n            this.children = [];\n        }\n    }\n    get isGroup() {\n        return this.element instanceof __1.TokenGroup;\n    }\n    get name() {\n        return this.element.name;\n    }\n    // ----------------\n    // MARK: - Mutation\n    applyDefaultSorting() {\n        this.children = sortBy(this.children, child => (child.isGroup ? 1 : 0));\n    }\n    addChildInternal(child, atIndex = -1) {\n        if (atIndex === -1) {\n            this.children.push(child);\n        }\n        else {\n            this.children.splice(atIndex, 0, child);\n        }\n        this.applyDefaultSorting();\n    }\n    populate(childrenMap) {\n        var _a;\n        const { tree, element } = this;\n        const children = (_a = childrenMap.get(element.id)) !== null && _a !== void 0 ? _a : [];\n        for (const element of children) {\n            const child = new GroupTreeNode(element, tree);\n            this.children.push(child);\n            if (element instanceof __1.TokenGroup) {\n                child.populate(childrenMap);\n            }\n        }\n    }\n    createGroupChild(name) {\n        return this.addChildGroup(new __1.TokenGroup({\n            brandId: this.tree.element.brandId,\n            tokenType: this.tree.element.tokenType,\n            designSystemVersionId: this.tree.element.designSystemVersionId,\n            persistentId: uuid_1.v4(),\n            isRoot: false,\n            id: undefined,\n            meta: {\n                name: name,\n                description: ''\n            },\n            childrenIds: []\n        }));\n    }\n    addChildGroup(groupElement) {\n        const { tree } = this;\n        // Only groups can be added as children through this\n        if ((groupElement instanceof __1.TokenGroup) === false) {\n            throw new Error(`Can't add ${groupElement.id} as group, is ${groupElement}`);\n        }\n        // Add child\n        const child = new GroupTreeNode(groupElement, tree);\n        this.addChildInternal(child);\n        return child;\n    }\n    getOrCreateGroup(path) {\n        if (path.length === 0) {\n            return this;\n        }\n        const [name, ...rest] = path;\n        let child = this.children.find(c => c.isGroup && c.element.name === name);\n        if (!child) {\n            child = this.createGroupChild(name);\n        }\n        return child.getOrCreateGroup(rest);\n    }\n    // ----------------\n    // MARK: - Iterators\n    forEach(callback, leafsFirst = true) {\n        this.forEachInternal(callback, [], leafsFirst);\n    }\n    forEachInternal(callback, path, leafsFirst) {\n        if (!leafsFirst) {\n            callback(this, path);\n        }\n        const newPath = path.concat([this]);\n        for (const c of this.children) {\n            if (c.isGroup) {\n                c.forEachInternal(callback, newPath, leafsFirst);\n            }\n        }\n        if (leafsFirst) {\n            callback(this, path);\n        }\n    }\n}\nexports.GroupTreeNode = GroupTreeNode;\n","\"use strict\";\n//\n//  SDKDTParentChildMapping.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildParentChildrenMap = exports.MAX_SORT_ORDER = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst SDKTokenGroup_1 = require(\"../../../../model/groups/SDKTokenGroup\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Types\nexports.MAX_SORT_ORDER = 1000 * 1000 * 100;\nconst LAST = exports.MAX_SORT_ORDER + 1;\nconst sortOrderComparator = (a, b) => { var _a, _b; return ((_a = a.sortOrder) !== null && _a !== void 0 ? _a : LAST) - ((_b = b.sortOrder) !== null && _b !== void 0 ? _b : LAST); };\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Implementation\nfunction buildParentChildrenMap(elements) {\n    const parentIdToChildren = new Map();\n    const put = (element) => {\n        var _a;\n        if (!(element instanceof SDKTokenGroup_1.TokenGroup && element.isRoot)) {\n            const parentId = (_a = element.parent) === null || _a === void 0 ? void 0 : _a.id;\n            const arr = parentIdToChildren.get(parentId);\n            if (arr) {\n                arr.push(element);\n            }\n            else {\n                parentIdToChildren.set(parentId, [element]);\n            }\n        }\n    };\n    for (const e of elements) {\n        put(e);\n    }\n    const sortedChildrenMap = new Map();\n    for (const [groupId, children] of parentIdToChildren) {\n        children.sort(sortOrderComparator);\n        sortedChildrenMap.set(groupId, children);\n    }\n    // fill empty groups data\n    for (const possibleGroup of elements) {\n        if (possibleGroup instanceof SDKTokenGroup_1.TokenGroup) {\n            const key = possibleGroup.id;\n            if (!sortedChildrenMap.has(key)) {\n                sortedChildrenMap.set(key, []);\n            }\n        }\n    }\n    return {\n        childrenMap: sortedChildrenMap\n    };\n}\nexports.buildParentChildrenMap = buildParentChildrenMap;\n","\"use strict\";\n//\n//  SDKToolsStyleDictionary.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenJSONBuilder = exports.JSONBuilderNamingOption = void 0;\nconst lodash_1 = __importDefault(require(\"lodash\"));\nconst SDKToolsJSONElementFigmaTokensTransformer_1 = require(\"./elements-transformers/SDKToolsJSONElementFigmaTokensTransformer\");\nconst SDKToolsJSONElementStyleDictionaryTransformer_1 = require(\"./elements-transformers/SDKToolsJSONElementStyleDictionaryTransformer\");\nvar JSONBuilderNamingOption;\n(function (JSONBuilderNamingOption) {\n    JSONBuilderNamingOption[\"original\"] = \"original\";\n    JSONBuilderNamingOption[\"camelcase\"] = \"camelcase\";\n    JSONBuilderNamingOption[\"snakecase\"] = \"snakecase\";\n    JSONBuilderNamingOption[\"kebabcase\"] = \"kebabcase\";\n})(JSONBuilderNamingOption = exports.JSONBuilderNamingOption || (exports.JSONBuilderNamingOption = {}));\nvar ConsumerMode;\n(function (ConsumerMode) {\n    ConsumerMode[ConsumerMode[\"styleDictionary\"] = 0] = \"styleDictionary\";\n    ConsumerMode[ConsumerMode[\"figmaTokens\"] = 1] = \"figmaTokens\";\n})(ConsumerMode || (ConsumerMode = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** JSON builder tooling object. Allows to build full token JSON definition for different styles of outputs, like Style Dictionary or Figma Tokens plugin */\nclass TokenJSONBuilder {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Constructor\n    constructor(instance, version) {\n        this.instance = instance;\n        this.version = version;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Public interface\n    /** Fetches all tokens available for selected design system version, and converts them to style dictionary representation. */\n    styleDictionaryRepresentation(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.tokenTransformer = new SDKToolsJSONElementStyleDictionaryTransformer_1.TokenJSONElementStyleDictionaryTransformer();\n            let tokens = yield this.version.tokens();\n            let groups = yield this.version.tokenGroups();\n            // Filter out tokens that contain brand id\n            if (options.brandId) {\n                tokens = tokens.filter(t => t.brandId === options.brandId);\n            }\n            return this.buildTokenStructure(tokens, groups, Object.assign(Object.assign({}, options), { consumerMode: ConsumerMode.figmaTokens }));\n        });\n    }\n    /** Fetches all tokens available for selected design system version, and converts them to figma tokens representation. */\n    figmaTokensRepresentation(isSingleFile) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!isSingleFile) {\n                throw new Error(\"Multi file mode of write is not yet supported by the tooling\");\n            }\n            this.tokenTransformer = new SDKToolsJSONElementFigmaTokensTransformer_1.TokenJSONElementFigmaTokensTransformer();\n            let tokens = yield this.version.tokens();\n            let groups = yield this.version.tokenGroups();\n            let brand = yield this.version.brands();\n            let options = {\n                naming: JSONBuilderNamingOption.original,\n                includeComments: false,\n                includeBrandId: false,\n                brandId: brand[0].persistentId,\n                includeType: true,\n                includeRootTypeNodes: false,\n                type: null,\n                multifile: false,\n                consumerMode: ConsumerMode.figmaTokens\n            };\n            // Filter out tokens that contain brand id\n            if (options.brandId) {\n                tokens = tokens.filter(t => t.brandId === options.brandId);\n            }\n            return this.buildTokenStructure(tokens, groups, options);\n        });\n    }\n    buildTokenStructure(tokens, groups, options) {\n        if (options.type) {\n            // When a specific type is requested, only generate that particular one\n            for (let group of groups) {\n                if (group.isRoot && group.tokenType === options.type) {\n                    return this.generateStyleDictionaryTree(group, tokens, groups, options);\n                }\n            }\n        }\n        else {\n            // Generate all token types\n            let result = {};\n            for (let group of groups) {\n                if (group.isRoot) {\n                    let sdTree = this.generateStyleDictionaryTree(group, tokens, groups, options);\n                    result = lodash_1.default.merge(result, sdTree);\n                }\n            }\n            return result;\n        }\n        return {};\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Style dictionary manipulation\n    /** Generate style dictionary tree */\n    generateStyleDictionaryTree(rootGroup, allTokens, allGroups, options) {\n        let writeRoot = {};\n        // Compute full data structure of the entire type-dependent tree\n        let result = this.representTree(rootGroup, allTokens, allGroups, writeRoot, options);\n        // Add top level entries which don't belong to any user-defined group\n        for (let token of TokenJSONBuilder.tokensOfGroup(rootGroup, allTokens)) {\n            result[this.tokenTransformer.safeTokenName(token, options.naming)] = this.tokenTransformer.representToken(token, allTokens, allGroups, options);\n        }\n        // Retrieve tokens with type shell or without it\n        if (options.includeRootTypeNodes) {\n            return {\n                [`${this.tokenTransformer.typeLabel(rootGroup.tokenType)}`]: result\n            };\n        }\n        else {\n            return result;\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Tree construction\n    /** Construct tree out of one specific group, independent of tree type */\n    representTree(rootGroup, allTokens, allGroups, writeObject, options) {\n        let newObject = writeObject;\n        // Represent one level of groups and tokens inside tree. Creates subobjects and then also information about each token\n        for (let group of rootGroup.subgroups) {\n            // Write buffer\n            let writeSubObject = {};\n            // Check whether the group should not be skipped because we have generated it on Supernova side. If so, completely ignore the group, and move one depth further\n            if (this.tokenTransformer.groupIsAbstract(group)) {\n                for (let subgroup of group.subgroups) {\n                    // Add each entry for each subgroup, and represent its tree into it\n                    newObject[this.tokenTransformer.safeGroupName(subgroup, options.naming)] = this.representTree(subgroup, allTokens, allGroups, writeSubObject, options);\n                }\n            }\n            else {\n                // Add each entry for each subgroup, and represent its tree into it\n                newObject[this.tokenTransformer.safeGroupName(group, options.naming)] = this.representTree(group, allTokens, allGroups, writeSubObject, options);\n            }\n            // Add each entry for each token, writing to the same write root\n            for (let token of TokenJSONBuilder.tokensOfGroup(group, allTokens)) {\n                newObject[this.tokenTransformer.safeTokenName(token, options.naming)] = this.tokenTransformer.representToken(token, allTokens, allGroups, options);\n            }\n        }\n        return newObject;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Lookup\n    /** Find all tokens that belong to a certain group and retrieve them as objects */\n    static tokensOfGroup(containingGroup, allTokens) {\n        return allTokens.filter(t => containingGroup.tokenIds.indexOf(t.id) !== -1);\n    }\n    /** Retrieve chain of groups up to a specified group, ordered from parent to children */\n    static referenceGroupChain(containingGroup) {\n        let iteratedGroup = containingGroup;\n        let chain = [containingGroup];\n        while (iteratedGroup.parent) {\n            chain.push(iteratedGroup.parent);\n            iteratedGroup = iteratedGroup.parent;\n        }\n        return chain.reverse();\n    }\n}\nexports.TokenJSONBuilder = TokenJSONBuilder;\n","\"use strict\";\n//\n//  SDKToolsJSONElementStyleDictionary.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenJSONElementFigmaTokensTransformer = void 0;\nconst SDKToolsJSONElementTransformer_1 = require(\"./SDKToolsJSONElementTransformer\");\nconst SDKTokenType_1 = require(\"../../../model/enums/SDKTokenType\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Configuration\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Token transformer that allow generic transform of tokens to different destinations, like Style Dictionary or Figma Tokens representation */\nclass TokenJSONElementFigmaTokensTransformer extends SDKToolsJSONElementTransformer_1.TokenJSONElementTransformer {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Value Representation\n    /** Represent color token value either as reference or as plain representation */\n    representColorTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = `#${value.hex}`;\n            // Create into shorthand\n            if (result.endsWith(\"ff\")) {\n                result = result.substr(result, result.length - 2);\n            }\n        }\n        return result;\n    }\n    /** Represent radius token value either as reference or as plain representation */\n    representRadiusTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                radius: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.radius, allTokens, allGroups, options)\n                },\n                topLeft: value.topLeft\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.topLeft, allTokens, allGroups, options)\n                    }\n                    : undefined,\n                topRight: value.topRight\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.topRight, allTokens, allGroups, options)\n                    }\n                    : undefined,\n                bottomLeft: value.bottomLeft\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.bottomLeft, allTokens, allGroups, options)\n                    }\n                    : undefined,\n                bottomRight: value.bottomRight\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.bottomRight, allTokens, allGroups, options)\n                    }\n                    : undefined\n            };\n        }\n        return result;\n    }\n    /** Represent measure token value either as reference or as plain representation */\n    representMeasureTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = `${value.measure}px`;\n        }\n        return result;\n    }\n    /** Represent font token value either as reference or as plain representation */\n    representFontTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                family: {\n                    type: 'string',\n                    value: value.family\n                },\n                subfamily: {\n                    type: 'string',\n                    value: value.subfamily\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent text token value either as reference or as plain representation */\n    representTextTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = value.text;\n        }\n        return result;\n    }\n    /** Represent typography token value either as reference or as plain representation */\n    representTypographyTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                font: {\n                    type: 'font',\n                    value: this.representFontTokenValue(value.font, allTokens, allGroups, options)\n                },\n                fontSize: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.fontSize, allTokens, allGroups, options)\n                },\n                textDecoration: value.textDecoration,\n                textCase: value.textCase,\n                letterSpacing: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.letterSpacing, allTokens, allGroups, options)\n                },\n                paragraphIndent: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.paragraphIndent, allTokens, allGroups, options)\n                },\n                paragraphSpacing: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.paragraphSpacing, allTokens, allGroups, options)\n                },\n                lineHeight: value.lineHeight\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.lineHeight, allTokens, allGroups, options)\n                    }\n                    : undefined\n            };\n        }\n        return result;\n    }\n    /** Represent border token value either as reference or as plain representation */\n    representBorderTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                color: {\n                    type: 'color',\n                    value: this.representColorTokenValue(value.color, allTokens, allGroups, options)\n                },\n                width: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.width, allTokens, allGroups, options)\n                },\n                position: {\n                    type: 'string',\n                    value: value.position\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent shadow token value either as reference or as plain representation */\n    representShadowTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                color: {\n                    type: 'color',\n                    value: this.representColorTokenValue(value.color, allTokens, allGroups, options)\n                },\n                x: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.x, allTokens, allGroups, options)\n                },\n                y: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.y, allTokens, allGroups, options)\n                },\n                radius: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.radius, allTokens, allGroups, options)\n                },\n                spread: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.spread, allTokens, allGroups, options)\n                },\n                opacity: {\n                    type: 'size',\n                    value: value.opacity\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent gradient token value either as reference or as plain representation */\n    representGradientTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                to: {\n                    type: 'point',\n                    value: {\n                        x: {\n                            type: 'size',\n                            value: value.to.x\n                        },\n                        y: {\n                            type: 'size',\n                            value: value.to.y\n                        }\n                    }\n                },\n                from: {\n                    type: 'point',\n                    value: {\n                        x: {\n                            type: 'size',\n                            value: value.from.x\n                        },\n                        y: {\n                            type: 'size',\n                            value: value.from.y\n                        }\n                    }\n                },\n                type: {\n                    type: 'string',\n                    value: value.type\n                },\n                aspectRatio: {\n                    type: 'size',\n                    value: value.aspectRatio\n                },\n                stops: {}\n            };\n            // Inject gradient stops\n            let count = 0;\n            for (let stop of value.stops) {\n                let stopObject = {\n                    type: 'gradientStop',\n                    position: {\n                        type: 'size',\n                        value: stop.position\n                    },\n                    color: {\n                        type: 'color',\n                        value: this.representColorTokenValue(stop.color, allTokens, allGroups, options)\n                    }\n                };\n                result.stops[`${count}`] = stopObject;\n                count++;\n            }\n        }\n        return result;\n    }\n    /** Retrieve token wrapper containing its metadata and value information (used as container for each defined token) */\n    tokenWrapper(token, value, options) {\n        let data = {\n            value: value\n        };\n        if (options.includeType) {\n            data[\"type\"] = this.typeLabelConsideringAbstractGroups(token);\n        }\n        if (options.includeBrandId) {\n            data[\"brandId\"] = token.brandId;\n        }\n        if (options.includeComments) {\n            data[\"description\"] = token.description.length > 0 ? token.description : undefined;\n        }\n        return data;\n    }\n    /** Retrieve human-readable token type in unified fashion, used both as token type and as token master group */\n    typeLabelConsideringAbstractGroups(token) {\n        let groupChain = this.referenceGroupChain(token.parent);\n        switch (token.tokenType) {\n            case 'Color':\n                return 'color';\n            case 'Measure': {\n                if (groupChain.length >= 2) {\n                    switch (groupChain[1].name) { // Checking by abstract, autogenerated group\n                        case \"Sizing\": return \"sizing\";\n                        case \"Font Size\": return \"fontSize\";\n                        case \"Border Radius\": return \"borderRadius\";\n                        case \"Border Width\": return \"borderWidth\";\n                        case \"Paragraph Spacing\": return \"paragraphSpacing\";\n                        case \"Line Height\": return \"lineHeight\";\n                        case \"Letter Spacing\": return \"letterSpacing\";\n                        case \"Spacing\": return \"spacing\";\n                        case \"Opacity\": return \"opacity\";\n                    }\n                }\n                return 'sizing';\n            }\n            // TODO: Continue from here\n            case 'Border':\n                return 'border';\n            case 'Font':\n                return 'font';\n            case 'Gradient':\n                return 'gradient';\n            case 'Radius':\n                return 'radius';\n            case 'Shadow':\n                return 'shadow';\n            case 'Text':\n                return 'text';\n            case 'Typography':\n                return 'typography';\n        }\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Object wrappers\n    /** Retrieve wrapper to certain token (referenced by name) pointing to token value */\n    referenceWrapper(reference, options) {\n        return `{${reference}}`;\n    }\n    /** Retrieve safe group name made out of normal group name\n     * This replace spaces with dashes, also change anything non-alphanumeric char to it as well.\n     * For example, ST&RK Industries will be changed to st-rk-industries\n     */\n    safeGroupName(group, naming) {\n        return group.name;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Naming\n    /** Create full reference name representing token. Such name can, for example, look like: [g1].[g2].[g3].[g4].[token-name] */\n    referenceName(token, allGroups, options) {\n        // Find the group to which token belongs. This is really suboptimal and should be solved by the SDK to just provide the group reference\n        let occurances = allGroups.filter(g => g.tokenIds.indexOf(token.id) !== -1);\n        if (occurances.length === 0) {\n            throw Error('JS: Unable to find token in any of the groups');\n        }\n        let containingGroup = occurances[0];\n        let tokenPart = this.safeTokenName(token, options.naming);\n        let groupParts = this.referenceGroupChain(containingGroup).map(g => this.safeGroupName(g, options.naming));\n        if (!options.includeRootTypeNodes) {\n            groupParts.splice(0, 1);\n        }\n        // Drop first segment if needed - from pre-created mapping groups that are not available by default in Supernova which we are creating\n        let dropFirstSegment = false;\n        switch (token.tokenType) {\n            case SDKTokenType_1.TokenType.measure:\n                if ([\"Border Radius\", \"Border Width\", \"Sizing\", \"Font Size\", \"Paragraph Spacing\", \"Line Height\", \"Letter Spacing\", \"Spacing\", \"Opacity\"].includes(groupParts[0])) {\n                    dropFirstSegment = true;\n                }\n                break;\n            default: break;\n        }\n        if (dropFirstSegment) {\n            groupParts.splice(0, 1);\n        }\n        return [...groupParts, tokenPart].join('.');\n    }\n    groupIsAbstract(group) {\n        // Abstract groups can only be right after the root, otherwise they are never abstract\n        if (!group.parent || !group.parent.isRoot) {\n            return false;\n        }\n        switch (group.tokenType) {\n            case SDKTokenType_1.TokenType.measure:\n                if ([\"Border Radius\", \"Border Width\", \"Sizing\", \"Font Size\", \"Paragraph Spacing\", \"Line Height\", \"Letter Spacing\", \"Spacing\", \"Opacity\"].includes(group.name)) {\n                    return true;\n                }\n            // TODO: Detect other types\n            default: break;\n        }\n        return false;\n    }\n}\nexports.TokenJSONElementFigmaTokensTransformer = TokenJSONElementFigmaTokensTransformer;\n","\"use strict\";\n//\n//  SDKToolsJSONElementStyleDictionary.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenJSONElementStyleDictionaryTransformer = void 0;\nconst SDKToolsJSONElementTransformer_1 = require(\"./SDKToolsJSONElementTransformer\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Configuration\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Token transformer that allow generic transform of tokens to different destinations, like Style Dictionary or Figma Tokens representation */\nclass TokenJSONElementStyleDictionaryTransformer extends SDKToolsJSONElementTransformer_1.TokenJSONElementTransformer {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Value Representation\n    /** Represent color token value either as reference or as plain representation */\n    representColorTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = `#${value.hex}`;\n        }\n        return result;\n    }\n    /** Represent radius token value either as reference or as plain representation */\n    representRadiusTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                radius: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.radius, allTokens, allGroups, options)\n                },\n                topLeft: value.topLeft\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.topLeft, allTokens, allGroups, options)\n                    }\n                    : undefined,\n                topRight: value.topRight\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.topRight, allTokens, allGroups, options)\n                    }\n                    : undefined,\n                bottomLeft: value.bottomLeft\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.bottomLeft, allTokens, allGroups, options)\n                    }\n                    : undefined,\n                bottomRight: value.bottomRight\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.bottomRight, allTokens, allGroups, options)\n                    }\n                    : undefined\n            };\n        }\n        return result;\n    }\n    /** Represent measure token value either as reference or as plain representation */\n    representMeasureTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                measure: {\n                    type: 'size',\n                    value: value.measure\n                },\n                unit: {\n                    type: 'string',\n                    value: value.unit.toLowerCase()\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent font token value either as reference or as plain representation */\n    representFontTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                family: {\n                    type: 'string',\n                    value: value.family\n                },\n                subfamily: {\n                    type: 'string',\n                    value: value.subfamily\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent text token value either as reference or as plain representation */\n    representTextTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = value.text;\n        }\n        return result;\n    }\n    /** Represent typography token value either as reference or as plain representation */\n    representTypographyTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                font: {\n                    type: 'font',\n                    value: this.representFontTokenValue(value.font, allTokens, allGroups, options)\n                },\n                fontSize: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.fontSize, allTokens, allGroups, options)\n                },\n                textDecoration: value.textDecoration,\n                textCase: value.textCase,\n                letterSpacing: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.letterSpacing, allTokens, allGroups, options)\n                },\n                paragraphIndent: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.paragraphIndent, allTokens, allGroups, options)\n                },\n                paragraphSpacing: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.paragraphSpacing, allTokens, allGroups, options)\n                },\n                lineHeight: value.lineHeight\n                    ? {\n                        type: 'measure',\n                        value: this.representMeasureTokenValue(value.lineHeight, allTokens, allGroups, options)\n                    }\n                    : undefined\n            };\n        }\n        return result;\n    }\n    /** Represent border token value either as reference or as plain representation */\n    representBorderTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                color: {\n                    type: 'color',\n                    value: this.representColorTokenValue(value.color, allTokens, allGroups, options)\n                },\n                width: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.width, allTokens, allGroups, options)\n                },\n                position: {\n                    type: 'string',\n                    value: value.position\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent shadow token value either as reference or as plain representation */\n    representShadowTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                color: {\n                    type: 'color',\n                    value: this.representColorTokenValue(value.color, allTokens, allGroups, options)\n                },\n                x: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.x, allTokens, allGroups, options)\n                },\n                y: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.y, allTokens, allGroups, options)\n                },\n                radius: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.radius, allTokens, allGroups, options)\n                },\n                spread: {\n                    type: 'measure',\n                    value: this.representMeasureTokenValue(value.spread, allTokens, allGroups, options)\n                },\n                opacity: {\n                    type: 'size',\n                    value: value.opacity\n                }\n            };\n        }\n        return result;\n    }\n    /** Represent gradient token value either as reference or as plain representation */\n    representGradientTokenValue(value, allTokens, allGroups, options) {\n        let result;\n        if (value.referencedToken) {\n            // Forms reference\n            result = this.referenceWrapper(this.referenceName(value.referencedToken, allGroups, options), options);\n        }\n        else {\n            // Raw value\n            result = {\n                to: {\n                    type: 'point',\n                    value: {\n                        x: {\n                            type: 'size',\n                            value: value.to.x\n                        },\n                        y: {\n                            type: 'size',\n                            value: value.to.y\n                        }\n                    }\n                },\n                from: {\n                    type: 'point',\n                    value: {\n                        x: {\n                            type: 'size',\n                            value: value.from.x\n                        },\n                        y: {\n                            type: 'size',\n                            value: value.from.y\n                        }\n                    }\n                },\n                type: {\n                    type: 'string',\n                    value: value.type\n                },\n                aspectRatio: {\n                    type: 'size',\n                    value: value.aspectRatio\n                },\n                stops: {}\n            };\n            // Inject gradient stops\n            let count = 0;\n            for (let stop of value.stops) {\n                let stopObject = {\n                    type: 'gradientStop',\n                    position: {\n                        type: 'size',\n                        value: stop.position\n                    },\n                    color: {\n                        type: 'color',\n                        value: this.representColorTokenValue(stop.color, allTokens, allGroups, options)\n                    }\n                };\n                result.stops[`${count}`] = stopObject;\n                count++;\n            }\n        }\n        return result;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Object wrappers\n    /** Retrieve wrapper to certain token (referenced by name) pointing to token value */\n    referenceWrapper(reference, options) {\n        return `{${reference}.value}`;\n    }\n    groupIsAbstract(group) {\n        return false;\n    }\n}\nexports.TokenJSONElementStyleDictionaryTransformer = TokenJSONElementStyleDictionaryTransformer;\n","\"use strict\";\n//\n//  SDKToolsJSONElementTransformer.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenJSONElementTransformer = void 0;\nconst SDKToolsJSONBuilder_1 = require(\"../SDKToolsJSONBuilder\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Configuration\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Tool implementation\n/** Token transformer that allow generic transform of tokens to different destinations, like Style Dictionary or Figma Tokens representation */\nclass TokenJSONElementTransformer {\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Representation\n    /** Represent a singular token as SD object */\n    representToken(token, allTokens, allGroups, options) {\n        switch (token.tokenType) {\n            case 'Color':\n                return this.representColorToken(token, allTokens, allGroups, options);\n            case 'Border':\n                return this.representBorderToken(token, allTokens, allGroups, options);\n            case 'Font':\n                return this.representFontToken(token, allTokens, allGroups, options);\n            case 'Gradient':\n                return this.representGradientToken(token, allTokens, allGroups, options);\n            case 'Measure':\n                return this.representMeasureToken(token, allTokens, allGroups, options);\n            case 'Radius':\n                return this.representRadiusToken(token, allTokens, allGroups, options);\n            case 'Shadow':\n                return this.representShadowToken(token, allTokens, allGroups, options);\n            case 'Text':\n                return this.representTextToken(token, allTokens, allGroups, options);\n            case 'Typography':\n                return this.representTypographyToken(token, allTokens, allGroups, options);\n        }\n    }\n    /** Represent full color token, including wrapping meta-information such as user description */\n    representColorToken(token, allTokens, allGroups, options) {\n        let value = this.representColorTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full border token, including wrapping meta-information such as user description */\n    representBorderToken(token, allTokens, allGroups, options) {\n        let value = this.representBorderTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full font token, including wrapping meta-information such as user description */\n    representFontToken(token, allTokens, allGroups, options) {\n        let value = this.representFontTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full gradient token, including wrapping meta-information such as user description */\n    representGradientToken(token, allTokens, allGroups, options) {\n        let value = this.representGradientTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full measure token, including wrapping meta-information such as user description */\n    representMeasureToken(token, allTokens, allGroups, options) {\n        let value = this.representMeasureTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full radius token, including wrapping meta-information such as user description */\n    representRadiusToken(token, allTokens, allGroups, options) {\n        let value = this.representRadiusTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full shadow token, including wrapping meta-information such as user description */\n    representShadowToken(token, allTokens, allGroups, options) {\n        let value = this.representShadowTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full text token, including wrapping meta-information such as user description */\n    representTextToken(token, allTokens, allGroups, options) {\n        let value = this.representTextTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    /** Represent full typography token, including wrapping meta-information such as user description */\n    representTypographyToken(token, allTokens, allGroups, options) {\n        let value = this.representTypographyTokenValue(token.value, allTokens, allGroups, options);\n        return this.tokenWrapper(token, value, options);\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Token Value Representation\n    /** Represent color token value either as reference or as plain representation */\n    representColorTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent radius token value either as reference or as plain representation */\n    representRadiusTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent measure token value either as reference or as plain representation */\n    representMeasureTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent font token value either as reference or as plain representation */\n    representFontTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent text token value either as reference or as plain representation */\n    representTextTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent typography token value either as reference or as plain representation */\n    representTypographyTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent border token value either as reference or as plain representation */\n    representBorderTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent shadow token value either as reference or as plain representation */\n    representShadowTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Represent gradient token value either as reference or as plain representation */\n    representGradientTokenValue(value, allTokens, allGroups, options) {\n        throw new Error(\"Not implemented\");\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Object wrappers\n    /** Retrieve wrapper to certain token (referenced by name) pointing to token value */\n    referenceWrapper(reference, options) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Retrieve token wrapper containing its metadata and value information (used as container for each defined token) */\n    tokenWrapper(token, value, options) {\n        let data = {\n            value: value\n        };\n        if (options.includeType) {\n            data[\"type\"] = this.typeLabel(token.tokenType);\n        }\n        if (options.includeBrandId) {\n            data[\"brandId\"] = token.brandId;\n        }\n        if (options.includeComments) {\n            data[\"comment\"] = token.description.length > 0 ? token.description : undefined;\n        }\n        return data;\n    }\n    // --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n    // MARK: - Naming\n    /** Create full reference name representing token. Such name can, for example, look like: [g1].[g2].[g3].[g4].[token-name] */\n    referenceName(token, allGroups, options) {\n        // Find the group to which token belongs. This is really suboptimal and should be solved by the SDK to just provide the group reference\n        let occurances = allGroups.filter(g => g.tokenIds.indexOf(token.id) !== -1);\n        if (occurances.length === 0) {\n            throw Error('JS: Unable to find token in any of the groups');\n        }\n        let containingGroup = occurances[0];\n        let tokenPart = this.safeTokenName(token, options.naming);\n        let groupParts = this.referenceGroupChain(containingGroup).map(g => this.safeGroupName(g, options.naming));\n        if (!options.includeRootTypeNodes) {\n            groupParts.splice(0, 1);\n        }\n        return [...groupParts, tokenPart].join('.');\n    }\n    /** Retrieve safe token name made out of normal token name\n     * This replace spaces with dashes, also change anything non-alphanumeric char to it as well.\n     * For example, ST&RK Industries will be changed to st-rk-industries\n     */\n    safeTokenName(token, naming) {\n        // TODO: Naming\n        let name = token.name;\n        return this.processedName(name, naming);\n    }\n    /** Retrieve safe group name made out of normal group name\n     * This replace spaces with dashes, also change anything non-alphanumeric char to it as well.\n     * For example, ST&RK Industries will be changed to st-rk-industries\n     */\n    safeGroupName(group, naming) {\n        // TODO: Naming\n        return group.name.replace(/\\W+/g, '-').toLowerCase();\n    }\n    processedName(name, naming) {\n        switch (naming) {\n            case SDKToolsJSONBuilder_1.JSONBuilderNamingOption.camelcase:\n                return name.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n                    return index === 0 ? word.toLowerCase() : word.toUpperCase();\n                }).replace(/\\s+/g, '');\n            case SDKToolsJSONBuilder_1.JSONBuilderNamingOption.kebabcase:\n                return name.replace(/\\W+/g, '-').toLowerCase();\n            case SDKToolsJSONBuilder_1.JSONBuilderNamingOption.original:\n                return name;\n            case SDKToolsJSONBuilder_1.JSONBuilderNamingOption.snakecase:\n                return name.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g).map(x => x.toLowerCase()).join('_');\n        }\n    }\n    /** Retrieve human-readable token type in unified fashion, used both as token type and as token master group */\n    typeLabel(type) {\n        switch (type) {\n            case 'Border':\n                return 'border';\n            case 'Color':\n                return 'color';\n            case 'Font':\n                return 'font';\n            case 'Gradient':\n                return 'gradient';\n            case 'Measure':\n                return 'measure';\n            case 'Radius':\n                return 'radius';\n            case 'Shadow':\n                return 'shadow';\n            case 'Text':\n                return 'text';\n            case 'Typography':\n                return 'typography';\n        }\n    }\n    /** Retrieve chain of groups up to a specified group, ordered from parent to children */\n    referenceGroupChain(containingGroup) {\n        let iteratedGroup = containingGroup;\n        let chain = [containingGroup];\n        while (iteratedGroup.parent) {\n            chain.push(iteratedGroup.parent);\n            iteratedGroup = iteratedGroup.parent;\n        }\n        return chain.reverse();\n    }\n    groupIsAbstract(group) {\n        throw new Error(\"Not implemented\");\n    }\n}\nexports.TokenJSONElementTransformer = TokenJSONElementTransformer;\n","\"use strict\";\n//\n//  SDKToolsMarkdownTransform.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkdownTransform = exports.MarkdownTransformType = void 0;\nconst exports_1 = require(\"../../exports\");\nconst SDKToolsMarkdownTransformBlock_1 = require(\"./SDKToolsMarkdownTransformBlock\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n/** Output markdown mode. Commonmark and GitHub is currently supported */\nvar MarkdownTransformType;\n(function (MarkdownTransformType) {\n    MarkdownTransformType[\"commonmark\"] = \"commonmark\";\n    MarkdownTransformType[\"github\"] = \"github\";\n})(MarkdownTransformType = exports.MarkdownTransformType || (exports.MarkdownTransformType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Search Instance\n/** Markdown transformers */\nclass MarkdownTransform {\n    // --- Constructor\n    constructor(type, version) {\n        /** Creates flattened structure of the blocks, even from the contained blocks, so it is easier to iterate through them */\n        this.flattenedBlocksOfPage = (page) => {\n            let blocks = page.blocks;\n            for (let block of page.blocks) {\n                blocks = blocks.concat(this.flattenedBlocksOfBlock(block));\n            }\n            return blocks;\n        };\n        /** Flattens one leaf of blocks */\n        this.flattenedBlocksOfBlock = (block) => {\n            // For containers, we will ignore all their children - they are generated separately by the behavior of the container itself (tables, tabs etc.)\n            if (this.isContainer(block.type)) {\n                return [];\n            }\n            let subblocks = block.children;\n            for (let subblock of block.children) {\n                subblocks = subblocks.concat(this.flattenedBlocksOfBlock(subblock));\n            }\n            return subblocks;\n        };\n        this.conversionType = type;\n        this.version = version;\n        if (type === MarkdownTransformType.github) {\n            console.log('Note: GitHub mode of markdown is currently in development and is not yet fully supported');\n        }\n        this.blockTransformer = new SDKToolsMarkdownTransformBlock_1.MarkdownTransformBlock(type, version);\n    }\n    // --- Conversion\n    /** Converts entire definition of the page, including its metadata like title and description, to markdown */\n    convertPageToMarkdown(page) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const blocks = this.flattenedBlocksOfPage(page);\n            let pageContent = [];\n            for (let block of blocks) {\n                let blockContent = yield this.blockTransformer.convertBlockToMarkdown(block, page);\n                if (blockContent) {\n                    pageContent.push(blockContent);\n                }\n            }\n            const title = `# ${page.title}\\n\\n`;\n            const description = page.configuration.header.description ? `${page.configuration.header.description}\\n\\n` : '';\n            const heading = `${title}${description}---\\n\\n`;\n            const content = pageContent.join('\\n\\n');\n            return `${heading}${content}`;\n        });\n    }\n    isContainer(blockType) {\n        return (blockType === exports_1.DocumentationPageBlockType.table ||\n            blockType === exports_1.DocumentationPageBlockType.tableCell ||\n            blockType === exports_1.DocumentationPageBlockType.tableRow ||\n            blockType === exports_1.DocumentationPageBlockType.column ||\n            blockType === exports_1.DocumentationPageBlockType.columnItem ||\n            blockType === exports_1.DocumentationPageBlockType.tabs ||\n            blockType === exports_1.DocumentationPageBlockType.tabItem);\n    }\n}\nexports.MarkdownTransform = MarkdownTransform;\n","\"use strict\";\n//\n//  SDKToolsMarkdownTransformBlock.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkdownTransformBlock = void 0;\nconst SDKDocumentationPageBlockColumnItem_1 = require(\"../../model/documentation/blocks/SDKDocumentationPageBlockColumnItem\");\nconst SDKDocumentationPageBlockTabItem_1 = require(\"../../model/documentation/blocks/SDKDocumentationPageBlockTabItem\");\nconst SDKDocumentationPageBlockTableRow_1 = require(\"../../model/documentation/blocks/SDKDocumentationPageBlockTableRow\");\nconst SDKDocumentationCalloutType_1 = require(\"../../model/enums/SDKDocumentationCalloutType\");\nconst SDKDocumentationHeadingType_1 = require(\"../../model/enums/SDKDocumentationHeadingType\");\nconst SDKDocumentationPageBlockType_1 = require(\"../../model/enums/SDKDocumentationPageBlockType\");\nconst SDKToolsMarkdownTransform_1 = require(\"./SDKToolsMarkdownTransform\");\nconst SDKToolsMarkdownTransformUtil_1 = require(\"./SDKToolsMarkdownTransformUtil\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Search Instance\n/** Markdown block transformer */\nclass MarkdownTransformBlock {\n    // --- Conversion\n    constructor(type, version) {\n        this.newlineSeparator = '  \\n';\n        this.transformType = type;\n        this.version = version;\n        if (type === SDKToolsMarkdownTransform_1.MarkdownTransformType.github) {\n            console.log('Note: GitHub mode of markdown is currently in development and is not yet fully supported');\n        }\n        this.utilTransformer = new SDKToolsMarkdownTransformUtil_1.MarkdownTransformUtil(this.transformType, version);\n    }\n    // --- Conversion\n    /** Converts a single block - depending on the type - to a markdown definition of specific type */\n    convertBlockToMarkdown(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (block.type) {\n                // Following blocks are automatically transformed\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.callout:\n                    return this.convertCalloutBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.code:\n                    return this.convertCodeBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.componentAssets:\n                    return yield this.convertComponentAssetBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.custom:\n                    return this.convertCustomBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.divider:\n                    return this.convertDividerBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.figmaEmbed:\n                    return this.convertFigmaEmbedBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.figmaFrames:\n                    return this.convertFigmaFramesBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.genericEmbed:\n                    return this.convertGenericEmbedBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.heading:\n                    return this.convertHeadingBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.image:\n                    return this.convertImageBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.link:\n                    return this.convertLinkBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.orderedList:\n                    return this.convertOrderedListBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.quote:\n                    return this.convertQuoteBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.renderCode:\n                    return this.convertLiveCodeBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.shortcuts:\n                    return this.convertShortcutsBlock(block, pageContext);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.storybookEmbed:\n                    return this.convertStorybookEmbedBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.text:\n                    return this.convertTextBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.token:\n                    return yield this.convertTokenBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tokenGroup:\n                    return this.convertTokenGroupBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tokenList:\n                    return this.convertTokenListBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.unorderedList:\n                    return this.convertUnorderedListBlock(block);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.youtubeEmbed:\n                    return this.convertYoutubeEmbedBlock(block);\n                // Following blocks are special because their transformation is invoked manually (containers)\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.column:\n                    return yield this.convertColumnBlock(block, pageContext);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.table:\n                    return yield this.convertTableBlock(block, pageContext);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tabs:\n                    return yield this.convertTabsBlock(block, pageContext);\n                // Following blocks are special because their transformation is invoked manually (contained items)\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tabItem:\n                    return yield this.convertTabItemBlock(block, pageContext);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.columnItem:\n                    return yield this.convertColumnItemBlock(block, pageContext);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tableCell:\n                    return yield this.convertTableCellBlock(block, pageContext);\n                case SDKDocumentationPageBlockType_1.DocumentationPageBlockType.tableRow:\n                    return yield this.convertTableRowBlock(block);\n            }\n        });\n    }\n    // -- Plain blocks\n    convertHeadingBlock(block) {\n        let heading = block;\n        let text = this.utilTransformer.convertTextBlockToMarkdown(heading);\n        switch (heading.headingType) {\n            case SDKDocumentationHeadingType_1.DocumentationHeadingType.h1:\n                return `# ${text}`;\n            case SDKDocumentationHeadingType_1.DocumentationHeadingType.h2:\n                return `## ${text}`;\n            case SDKDocumentationHeadingType_1.DocumentationHeadingType.h3:\n                return `### ${text}`;\n        }\n    }\n    convertCalloutBlock(block) {\n        let text = this.utilTransformer.convertTextBlockToMarkdown(block);\n        let calloutType;\n        switch (block.calloutType) {\n            case SDKDocumentationCalloutType_1.DocumentationCalloutType.info:\n                calloutType = 'Some extra info:';\n                break;\n            case SDKDocumentationCalloutType_1.DocumentationCalloutType.warning:\n                calloutType = 'Be warned:';\n                break;\n            case SDKDocumentationCalloutType_1.DocumentationCalloutType.success:\n                calloutType = 'Yay:';\n                break;\n            case SDKDocumentationCalloutType_1.DocumentationCalloutType.error:\n                calloutType = 'Please note:';\n                break;\n        }\n        return `> ${calloutType}${this.newlineSeparator}> ${text}`;\n    }\n    convertQuoteBlock(block) {\n        let text = this.utilTransformer.convertTextBlockToMarkdown(block);\n        return `> ${text}`;\n    }\n    convertDividerBlock(block) {\n        return '---';\n    }\n    convertImageBlock(block) {\n        if (block.url) {\n            return `![Img](${block.url})`;\n        }\n    }\n    convertOrderedListBlock(block) {\n        let text = this.utilTransformer.convertTextBlockToMarkdown(block);\n        return `1. ` + text;\n    }\n    convertUnorderedListBlock(block) {\n        let text = this.utilTransformer.convertTextBlockToMarkdown(block);\n        return `- ` + text;\n    }\n    convertLiveCodeBlock(block) {\n        const codeLanguageDefinition = 'javascript';\n        return `\\`\\`\\`${codeLanguageDefinition}${this.newlineSeparator}${block.code}${this.newlineSeparator}\\`\\`\\``;\n    }\n    convertCodeBlock(block) {\n        const codeLanguageDefinition = block.codeLanguage ? block.codeLanguage.toLowerCase() : '';\n        return `\\`\\`\\`${codeLanguageDefinition}${this.newlineSeparator}${block.text.asPlainText()}${this.newlineSeparator}\\`\\`\\``;\n    }\n    convertTextBlock(block) {\n        return this.utilTransformer.convertTextBlockToMarkdown(block);\n    }\n    convertGenericEmbedBlock(block) {\n        return this.convertURLBlock(block, 'Open link', true);\n    }\n    convertStorybookEmbedBlock(block) {\n        return this.convertURLBlock(block, 'Open Storybook Canvas', false);\n    }\n    convertLinkBlock(block) {\n        return this.convertURLBlock(block, 'Open link', true);\n    }\n    convertYoutubeEmbedBlock(block) {\n        return this.convertURLBlock(block, 'Open Youtube Video', false);\n    }\n    convertFigmaEmbedBlock(block) {\n        return this.convertURLBlock(block, 'Open Figma Prototype / File', false);\n    }\n    // -- Token blocks\n    convertTokenBlock(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!block.tokenId) {\n                return null;\n            }\n            // Fetch token\n            let tokens = yield this.version.tokens();\n            tokens = tokens.filter(t => t.id === block.tokenId || t.versionedId === block.tokenId);\n            if (tokens.length === 0) {\n                return null;\n            }\n            // Convert token\n            return `${this.newlineSeparator}${this.utilTransformer.convertTokenToMarkdown(tokens[0])}${this.newlineSeparator}`;\n        });\n    }\n    convertTokenListBlock(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!block.tokenIds) {\n                return null;\n            }\n            // Fetch tokens\n            let tokens = yield this.version.tokens();\n            tokens = tokens.filter(t => block.tokenIds.includes(t.id) || block.tokenIds.includes(t.versionedId));\n            if (tokens.length === 0) {\n                return null;\n            }\n            // Convert token\n            return `${this.newlineSeparator}${tokens\n                .map(t => this.utilTransformer.convertTokenToMarkdown(t))\n                .join(this.newlineSeparator)}${this.newlineSeparator}`;\n        });\n    }\n    convertTokenGroupBlock(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!block.groupId) {\n                return null;\n            }\n            // Fetch tokens\n            let tokens = yield this.version.tokens();\n            let groups = yield this.version.tokenGroups();\n            groups = groups.filter(g => g.id === block.groupId || g.versionedId === block.groupId);\n            if (groups.length !== 1) {\n                return null;\n            }\n            // Show either single group or all nested groups\n            let groupsToShow = [groups[0]];\n            if (block.showNestedGroups) {\n                groupsToShow = this.flattenedGroupsFromRoot(groups[0]);\n            }\n            // Convert group and all its tokens\n            let segments = [];\n            for (let group of groupsToShow) {\n                let tokensToShow = tokens.filter(t => group.tokenIds.includes(t.id) || group.tokenIds.includes(t.versionedId));\n                if (tokensToShow.length > 0) {\n                    let segment = `${this.newlineSeparator}${`**Token Group ${[...group.path, group.name].join(' / ')}**:  `}${this.newlineSeparator}${tokensToShow.map(t => this.utilTransformer.convertTokenToMarkdown(t)).join(this.newlineSeparator)}${this.newlineSeparator}`;\n                    segments.push(segment);\n                }\n            }\n            // Convert to single string\n            return segments.join(this.newlineSeparator);\n        });\n    }\n    flattenedGroupsFromRoot(root) {\n        let groups = [root];\n        for (let group of root.subgroups) {\n            groups.push(group);\n            groups = groups.concat(this.flattenedGroupsFromRoot(group));\n        }\n        return groups;\n    }\n    convertComponentAssetBlock(block) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let assets = yield this.version.assets();\n            let convertedAssets = [];\n            for (let asset of block.assets) {\n                let assetObject = assets.filter(a => a.id === asset.assetId)[0];\n                if (assetObject && assetObject.thumbnailUrl) {\n                    convertedAssets.push(`![${assetObject.name}](${assetObject.thumbnailUrl})` +\n                        this.newlineSeparator +\n                        `${asset.title ? asset.title : assetObject.name}` +\n                        (asset.description ? `, ${asset.description}` + this.newlineSeparator : ''));\n                }\n            }\n            return this.newlineSeparator + convertedAssets.join(this.newlineSeparator) + this.newlineSeparator;\n        });\n    }\n    convertFigmaFramesBlock(block) {\n        var _a;\n        let convertedFrames = [];\n        for (let frame of block.frames) {\n            if (frame.previewUrl) {\n                convertedFrames.push(`![${(_a = frame.title) !== null && _a !== void 0 ? _a : \"Image\"}](${frame.previewUrl})` +\n                    this.newlineSeparator +\n                    `${frame.title ? frame.title : \"\"}` +\n                    (frame.description ? `, ${frame.description}` + this.newlineSeparator : ''));\n            }\n        }\n        return this.newlineSeparator + convertedFrames.join(this.newlineSeparator) + this.newlineSeparator;\n    }\n    convertShortcutsBlock(block, pageContext) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = \"#\";\n            let convertedShortcut = [];\n            let pages = yield (yield this.version.documentation()).pages();\n            for (let shortcut of block.shortcuts) {\n                if (shortcut.externalUrl) {\n                    url = shortcut.externalUrl;\n                }\n                else if (shortcut.internalId) {\n                    let destinationPage = pages.filter(p => p.id === shortcut.internalId || p.persistentId === shortcut.internalId)[0];\n                    if (destinationPage) {\n                        url = this.relativePathToPage(destinationPage, pageContext);\n                    }\n                }\n                if (shortcut.previewUrl) {\n                    // Generate shortcut with image preview\n                    let previewUrl = shortcut.previewUrl;\n                    let title = (_a = shortcut.title) !== null && _a !== void 0 ? _a : undefined;\n                    let description = (_b = shortcut.description) !== null && _b !== void 0 ? _b : undefined;\n                    convertedShortcut.push(`[![${title}](${previewUrl})](${url})` +\n                        this.newlineSeparator +\n                        `${title ? title : \"\"}` +\n                        (description ? `, ${description}` + this.newlineSeparator : this.newlineSeparator));\n                }\n                else {\n                    // Generate shortcut without image preview\n                    let title = (_c = shortcut.title) !== null && _c !== void 0 ? _c : undefined;\n                    let description = (_d = shortcut.description) !== null && _d !== void 0 ? _d : undefined;\n                    convertedShortcut.push(`[${title}](${url})` +\n                        (description ? `, ${description}` + this.newlineSeparator : this.newlineSeparator));\n                }\n            }\n            return this.newlineSeparator + convertedShortcut.join(this.newlineSeparator) + this.newlineSeparator;\n        });\n    }\n    relativePathToPage(page, currentPage) {\n        // Compute level of depth\n        let parent = currentPage.parent;\n        let depth = 0;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        // Compute path\n        let prefix = depth === 1 ? \"./\" : \"../\".repeat(depth - 1);\n        let pageUrl = page.relativePageUrl();\n        if (pageUrl.endsWith(\"html\")) {\n            pageUrl = pageUrl.substring(0, pageUrl.length - 4) + \"md\";\n        }\n        return prefix + pageUrl;\n    }\n    // -- Containers: Table\n    convertTableBlock(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // No empty tables\n            if (block.children.length === 0) {\n                return null;\n            }\n            // Generate header row\n            let firstRow = block.children[0];\n            let rowContent = [];\n            let separatorContent = [];\n            let count = 1;\n            for (let child of firstRow.children) {\n                rowContent.push(`Column ${count}`);\n                separatorContent.push(`---`);\n                count++;\n            }\n            let tableRows = ['| ' + rowContent.join(' | ') + ' |', '| ' + separatorContent.join(' | ') + ' |'];\n            for (let child of block.children) {\n                if (child instanceof SDKDocumentationPageBlockTableRow_1.DocumentationPageBlockTableRow) {\n                    let childContent = yield Promise.all(child.children.map(c => this.convertBlockToMarkdown(c, pageContext)));\n                    let rowDefinition = '| ' + childContent.join(' | ') + ' |';\n                    tableRows.push(rowDefinition);\n                }\n            }\n            return this.newlineSeparator + tableRows.join(this.newlineSeparator) + this.newlineSeparator;\n        });\n    }\n    convertTableRowBlock(block) {\n        // Not used, rows are used when generating table directly in the table\n        return null;\n    }\n    convertTableCellBlock(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let cellContent = yield Promise.all(block.children.map(c => this.convertBlockToMarkdown(c, pageContext)));\n            return cellContent.join('<br>'); // Multiline cell needs non-regular line breaks\n        });\n    }\n    // -- Containers: Tabs\n    convertTabsBlock(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // No empty tabs\n            if (block.children.length === 0) {\n                return null;\n            }\n            let tabContent = [];\n            for (let child of block.children) {\n                if (child instanceof SDKDocumentationPageBlockTabItem_1.DocumentationPageBlockTabItem) {\n                    let result = yield this.convertTabItemBlock(child, pageContext);\n                    tabContent.push(result);\n                }\n            }\n            return tabContent.join(this.newlineSeparator) + this.newlineSeparator;\n        });\n    }\n    convertTabItemBlock(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let childContent = yield Promise.all(block.children.map(c => this.convertBlockToMarkdown(c, pageContext)));\n            let tabDefinition = this.newlineSeparator + `**${block.caption}**` + this.newlineSeparator + childContent.join(this.newlineSeparator);\n            return tabDefinition;\n        });\n    }\n    // -- Containers: Columns\n    convertColumnBlock(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // No empty columns\n            if (block.children.length === 0) {\n                return null;\n            }\n            let columnContent = [];\n            for (let child of block.children) {\n                if (child instanceof SDKDocumentationPageBlockColumnItem_1.DocumentationPageBlockColumnItem) {\n                    let result = yield this.convertColumnItemBlock(child, pageContext);\n                    columnContent.push(result);\n                }\n            }\n            return columnContent.join(this.newlineSeparator) + this.newlineSeparator;\n        });\n    }\n    convertColumnItemBlock(block, pageContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let childContent = yield Promise.all(block.children.map(c => this.convertBlockToMarkdown(c, pageContext)));\n            let tabDefinition = this.newlineSeparator + childContent.join(this.newlineSeparator);\n            return tabDefinition;\n        });\n    }\n    // -- Unsupported\n    convertCustomBlock(block) {\n        // Custom blocks will not be transformed for now, as we can't realistically\n        // know what they are supposed to do and right now we also can't invoke them\n        return null;\n        // TODO: Custom component blocks should still be converted, probably\n    }\n    // -- Conveniences\n    convertURLBlock(block, userAction, showLink) {\n        // Will generate:\n        // [Action prompt, ie. \"Open Figma File\"](url)\n        // ^ caption_if_provided\n        if (block.url) {\n            const caption = block.caption ? `^ ${block.caption}${this.newlineSeparator}` : '';\n            return `${this.newlineSeparator}[${userAction}](${block.url})${this.newlineSeparator}${caption}`;\n        }\n        return null;\n    }\n}\nexports.MarkdownTransformBlock = MarkdownTransformBlock;\n","\"use strict\";\n//\n//  SDKToolsMarkdownTransformText.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkdownTransformUtil = void 0;\nconst SDKRichTextSpanAttributeType_1 = require(\"../../model/enums/SDKRichTextSpanAttributeType\");\nconst __1 = require(\"../..\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Search Instance\n/** Markdown block transformer */\nclass MarkdownTransformUtil {\n    // --- Conversion\n    constructor(type, version) {\n        this.transformType = type;\n        this.tokenTransformer = new __1.TokenTransform();\n    }\n    // --- Conversion\n    /** Converts rich text block to markdown\n     *\n     * This is very naive implementation and will break in complicated cases, like double control characters of the same type next to each other\n     * Must improve later with something more sophisticated, ideally tree builder with branched resolution.\n     */\n    convertTextBlockToMarkdown(block) {\n        return this.convertRichTextToMarkdown(block.text);\n    }\n    /** Converts rich text to markdown\n     *\n     * This is very naive implementation and will break in complicated cases, like double control characters of the same type next to each other\n     * Must improve later with something more sophisticated, ideally tree builder with branched resolution.\n     */\n    convertRichTextToMarkdown(richText) {\n        var _a;\n        let outputString = '';\n        for (let text of richText.spans) {\n            if (text.text.length > 0) {\n                let outputPartial = text.text;\n                for (let attribute of text.attributes) {\n                    switch (attribute.type) {\n                        case SDKRichTextSpanAttributeType_1.RichTextSpanAttributeType.link:\n                            outputPartial = `[${outputPartial}](${(_a = attribute.link) !== null && _a !== void 0 ? _a : ''})`;\n                            break;\n                        case SDKRichTextSpanAttributeType_1.RichTextSpanAttributeType.bold:\n                            outputPartial = `*${outputPartial}*`;\n                            break;\n                        case SDKRichTextSpanAttributeType_1.RichTextSpanAttributeType.code:\n                            outputPartial = `\\`${outputPartial}\\``;\n                            break;\n                        case SDKRichTextSpanAttributeType_1.RichTextSpanAttributeType.italic:\n                            outputPartial = `_${outputPartial}**_`;\n                            break;\n                        case SDKRichTextSpanAttributeType_1.RichTextSpanAttributeType.strikethrough:\n                            outputPartial = `~~${outputPartial}~~`;\n                            break;\n                    }\n                }\n                outputString += outputPartial;\n            }\n        }\n        return outputString;\n    }\n    /** Convert token to markdown representation */\n    convertTokenToMarkdown(token) {\n        return `${token.name}: ${this.tokenTransformer.tokenToCSS(token)}`;\n    }\n}\nexports.MarkdownTransformUtil = MarkdownTransformUtil;\n","\"use strict\";\n//\n//  SDKToolsDocSearch.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocSearch = exports.DocSearchResultDataType = void 0;\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Imports\nconst fuse_js_1 = __importDefault(require(\"fuse.js\"));\nconst SDKDocumentationPageBlockText_1 = require(\"../../model/documentation/blocks/SDKDocumentationPageBlockText\");\nconst SDKDocumentationGroupBehavior_1 = require(\"../../model/enums/SDKDocumentationGroupBehavior\");\nconst SDKDocumentationPageBlockType_1 = require(\"../../model/enums/SDKDocumentationPageBlockType\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Definitions\nvar DocSearchResultDataType;\n(function (DocSearchResultDataType) {\n    DocSearchResultDataType[\"contentBlock\"] = \"contentBlock\";\n    DocSearchResultDataType[\"sectionHeader\"] = \"sectionHeader\";\n    DocSearchResultDataType[\"pageTitle\"] = \"pageTitle\";\n})(DocSearchResultDataType = exports.DocSearchResultDataType || (exports.DocSearchResultDataType = {}));\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Search Instance\n/** Search manager */\nclass DocSearch {\n    // --- Constructor\n    constructor(configuration) {\n        // --- Search index\n        /* Removes previous data from search index and creates new one */\n        this.updateSearchIndex = (pages) => {\n            let id = 0;\n            let data = [];\n            // Process every page for data\n            for (let page of pages) {\n                // Naming - For tabs, use name of the containing group, otherwise we get lot of design/code which is not very useful\n                let pageName = page.title;\n                if (page.parent && page.parent.groupBehavior === SDKDocumentationGroupBehavior_1.DocumentationGroupBehavior.tabs) {\n                    pageName = page.parent.title + \"/\" + pageName;\n                }\n                // Extract rich text from headers and any text piece there is\n                let allBlocks = this.flattenedBlocksOfPage(page);\n                for (let block of allBlocks) {\n                    if (block instanceof SDKDocumentationPageBlockText_1.DocumentationPageBlockText) {\n                        data.push({\n                            id: id++,\n                            text: block.text.spans.map((s) => s.text).join(\"\"),\n                            type: block.type === SDKDocumentationPageBlockType_1.DocumentationPageBlockType.heading ? DocSearchResultDataType.sectionHeader : DocSearchResultDataType.contentBlock,\n                            blockId: block.id,\n                            pageId: page.id,\n                            pageName: pageName,\n                        });\n                    }\n                }\n                // Push page information\n                data.push({\n                    id: id++,\n                    text: page.title,\n                    type: DocSearchResultDataType.pageTitle,\n                    blockId: undefined,\n                    pageId: page.id,\n                    pageName: pageName,\n                });\n            }\n            this.searchEngine = this.reconstructSearchIndex(data, this.searchConfiguration);\n            return data;\n        };\n        /* Removes previous data from search index and creates new one */\n        this.search = (input) => {\n            return this.searchEngine.search(input);\n        };\n        /** Reconstructs the search index */\n        this.reconstructSearchIndex = (data, options) => {\n            const fuse = new fuse_js_1.default(data, options);\n            return fuse;\n        };\n        /** Creates flattened structure of the blocks, even from the contained blocks, so it is easier to iterate through them */\n        this.flattenedBlocksOfPage = (page) => {\n            let blocks = page.blocks;\n            for (let block of page.blocks) {\n                blocks = blocks.concat(this.flattenedBlocksOfBlock(block));\n            }\n            return blocks;\n        };\n        /** Flattens one leaf of blocks */\n        this.flattenedBlocksOfBlock = (block) => {\n            let subblocks = block.children;\n            for (let subblock of block.children) {\n                subblocks = subblocks.concat(this.flattenedBlocksOfBlock(subblock));\n            }\n            return subblocks;\n        };\n        this.searchConfiguration = configuration;\n        this.searchEngine = this.reconstructSearchIndex([], configuration);\n    }\n    // --- Conveniences\n    /** When using this configuration, the results will be very precise and will not be deviating too much from the query */\n    static defaultPreciseConfiguration() {\n        return {\n            shouldSort: true,\n            threshold: 0.1,\n            location: 0,\n            distance: 100,\n            maxPatternLength: 32,\n            minMatchCharLength: 1,\n            ignoreLocation: true,\n            keys: [\"text\"],\n        };\n    }\n    /** When using this configuration, the results will be more fuzzy and might cover broader spectrum results than just near-keyword based search */\n    static defaultFuzzyConfiguration() {\n        return {\n            shouldSort: true,\n            threshold: 0.2,\n            location: 0,\n            distance: 100,\n            maxPatternLength: 32,\n            minMatchCharLength: 1,\n            ignoreLocation: true,\n            keys: [\"text\"],\n        };\n    }\n}\nexports.DocSearch = DocSearch;\n","\"use strict\";\n//\n//  SDKToolsTokenTransform.ts\n//  Supernova SDK\n//\n//  Created by Jiri Trecak.\n//  Copyright © 2022 Supernova. All rights reserved.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenTransform = void 0;\nconst SDKUnit_1 = require(\"../../model/enums/SDKUnit\");\nconst tinycolor = require(\"tinycolor2\");\n// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n// MARK: - Transformer instance\n/** Token data transformer. Use for direct representation of token to other representations, such as CSS, rgb etc. More transformers will be added over time */\nclass TokenTransform {\n    // --- Properties\n    // --- Constructor\n    constructor() {\n    }\n    // --- Conversion to CSS\n    /** Converts a single token to CSS definition. Values are always resolved to plain values, references to other tokens are not yet supported */\n    tokenToCSS(token) {\n        switch (token.tokenType) {\n            case 'Color':\n                return this.colorTokenToCSS(token.value);\n            case 'Border':\n                return this.borderTokenToCSS(token.value);\n            case 'Font':\n                return this.fontTokenToCSS(token.value);\n            case 'Gradient':\n                return this.gradientTokenToCSS(token.value);\n            case 'Measure':\n                return this.measureTokenToCSS(token.value);\n            case 'Radius':\n                return this.radiusTokenToCSS(token.value);\n            case 'Shadow':\n                return this.shadowTokenToCSS(token.value);\n            case 'Text':\n                return this.textTokenToCSS(token.value);\n            case 'Blur':\n                return this.blurTokenToCSS(token.value);\n            case 'Typography':\n                return this.typographyTokenToCSS(token.value);\n            case 'GenericToken':\n                return this.genericTokenToCSS(token.value);\n        }\n        throw new Error(`Unsupported token type ${token.tokenType} for transformation to CSS`);\n    }\n    /** Converts token to appropriate css variable definition --(name): css_definition */\n    tokenToCSSVariableDeclaration(token, variableName) {\n        return `--${variableName}: ${this.tokenToCSS(token)}`;\n    }\n    /** Converts color token value to css definition */\n    colorTokenToCSS(value) {\n        const color = tinycolor(value.hex);\n        return color.toRgbString();\n    }\n    /** Converts border token value to css definition */\n    borderTokenToCSS(value) {\n        return `${this.measureTokenToCSS(value.width)} solid ${this.colorTokenToCSS(value.color)}, ${value.position.toLowerCase()}`;\n    }\n    /** Converts shadow token value to css definition */\n    shadowTokenToCSS(value) {\n        return `${value.type === \"Inner\" ? \"inset \" : \"\"}${this.measureTokenToCSS(value.x)} ${this.measureTokenToCSS(value.y)} ${this.measureTokenToCSS(value.radius)} ${this.measureTokenToCSS(value.spread)} ${this.colorTokenToCSS(value.color)}`;\n    }\n    /** Converts typography token value to css definition */\n    typographyTokenToCSS(value) {\n        let fontName = `${value.font.family} ${value.font.subfamily}`;\n        let fontValue = this.measureTokenToCSS(value.fontSize);\n        let textDecoration = \"\";\n        let textCase = \"\";\n        if (value.textDecoration !== \"None\") {\n            textDecoration = `, ${value.textDecoration.toLowerCase()}`;\n        }\n        if (value.textCase !== \"Original\") {\n            textCase = `, ${value.textCase.toLowerCase()}`;\n        }\n        return `${fontName} ${fontValue}${textDecoration}${textCase}`;\n    }\n    /** Converts border token value to css definition */\n    blurTokenToCSS(value) {\n        return `blur(${this.measureTokenToCSS(value.radius)})`;\n    }\n    /** Converts border token value to css definition */\n    measureTokenToCSS(value) {\n        return `${value.measure}${this.unitToCSS(value.unit)}`;\n    }\n    unitToCSS(value) {\n        switch (value) {\n            case SDKUnit_1.Unit.ems: return \"em\";\n            case SDKUnit_1.Unit.percent: return \"%\";\n            case SDKUnit_1.Unit.pixels: return \"px\";\n            case SDKUnit_1.Unit.points: return \"pt\";\n        }\n    }\n    /** Converts border token value to css definition */\n    radiusTokenToCSS(value) {\n        // TODO: Export 4-corner radius once supported, for now, only singular radius\n        return this.measureTokenToCSS(value.radius);\n    }\n    /** Converts gradient token value to css definition */\n    gradientTokenToCSS(value) {\n        let gradientType = \"\";\n        switch (value.type) {\n            case \"Linear\":\n                gradientType = \"linear-gradient(0deg, \";\n                break;\n            case \"Radial\":\n                gradientType = \"radial-gradient(circle, \";\n                break;\n            case \"Angular\":\n                gradientType = \"conic-gradient(\";\n                break;\n        }\n        // Describe gradient as (type) (stop1, stop2 ...)\n        // Example: radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%);\n        let stops = value.stops\n            .map((stop) => {\n            return `${this.colorTokenToCSS(stop.color)} ${stop.position * 100}%`;\n        })\n            .join(\", \");\n        return `${gradientType}${stops})`;\n    }\n    /** Converts font token value to css definition */\n    fontTokenToCSS(value) {\n        var _a, _b;\n        return `${(_a = value.family) !== null && _a !== void 0 ? _a : \"\"} ${(_b = value.subfamily) !== null && _b !== void 0 ? _b : \"\"}`;\n    }\n    /** Converts generic token value to css definition */\n    genericTokenToCSS(value) {\n        return \"\\\"\" + value.text + \"\\\"\";\n    }\n    /** Converts generic token value to css definition */\n    textTokenToCSS(value) {\n        return \"\\\"\" + value.text + \"\\\"\";\n    }\n    // --- Special treatment for CSS\n    /** Converts a single color token to #hheexx or #hheexxaa */\n    colorTokenToHEXorHEXA(colorToken) {\n        const color = tinycolor(colorToken.value.hex);\n        return colorToken.value.a === 1 ? color.toHexString() : color.toHex8String();\n    }\n    /** Converts a single color token to rgba(x,x,x,x)  */\n    colorTokenToRGBA(colorToken) {\n        const color = tinycolor(colorToken.value.hex);\n        return color.toRgbString();\n    }\n    /** Converts a single color token to rgba(x,x,x,x) with relative values */\n    colorTokenToPercenageRGBA(colorToken) {\n        const color = tinycolor(colorToken.value.hex);\n        return color.toPercentageRgbString();\n    }\n    /** Converts a single color token to hsla(x,x,x,x) */\n    colorTokenToHSLA(colorToken) {\n        const color = tinycolor(colorToken.value.hex);\n        return color.toHslString();\n    }\n    /** Converts a single color token to hsva(x,x,x,x) */\n    colorTokenToHSVA(colorToken) {\n        const color = tinycolor(colorToken.value.hex);\n        return color.toHsvString();\n    }\n}\nexports.TokenTransform = TokenTransform;\n","module.exports = require(\"abab\");","module.exports = require(\"async-mutex\");","module.exports = require(\"axios\");","module.exports = require(\"fuse.js\");","module.exports = require(\"lodash\");","module.exports = require(\"parse-color\");","module.exports = require(\"tinycolor2\");","module.exports = require(\"uuid\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(8732);\n"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","Brand","SDKBrandWriter_1","constructor","engine","model","version","id","persistentId","designSystemVersion","name","meta","description","dataCore","writer","BrandWriter","tokens","currentDesignSystemTokens","designSystem","filter","t","brandId","tokensByApplyingThemes","themeIds","_a","themes","index","theme","find","Error","overrides","Map","override","overriddenTokens","set","reverseIds","reverse","resolvedTokens","token","get","push","currentDesignSystemThemes","tokenGroups","currentDesignSystemTokenGroups","g","tokenGroupTrees","rootGroups","isRoot","trees","group","tokenType","components","currentDesignSystemComponents","c","designComponents","currentDesignSystemDesignComponents","designComponentGroups","currentDesignSystemDesignComponentGroups","designComponentGroupTree","assets","currentDesignSystemAssets","a","assetGroups","currentDesignSystemAssetGroups","assetGroupTree","renderedAssets","format","scale","groups","renderAssetsForConfiguration","specificRenderedAssets","brand","writeTokens","deleteTokens","remoteTokens","map","toWriteObject","remoteGroups","writeTokenData","errors","writeTheme","remoteTheme","writeTokenThemeData","DesignSystem","SDKSource_1","workspaceId","isMultiBrand","isMultibrand","isPublic","documentationExporterId","docExporterId","documentationSlug","docSlug","documentationUserSlug","docUserSlug","sources","s","Source","versions","designSystemVersions","activeVersion","activeDesignSystemVersion","sourceById","sourceId","figmaFileIdForSourceId","source","fileId","figmaFileNameForSourceId","fileName","DesignSystemVersion","SDKSupernovaError_1","SDKBrand_1","changeLog","length","isReadOnly","isReadonly","newDataCore","brands","dsEndpoint","dsData","dataBridge","getDSMGenericDataFromEndpoint","SupernovaError","fromSDKError","Array","brandData","tokenIds","includes","branch","assetGroupTrees","documentation","currentDesignSystemDocumentation","Documentation","SDKDocumentationConfiguration_1","SDKDocumentationItemType_1","registry","settings","DocumentationConfiguration","rootGroup","items","currentDesignSystemDocumentationItems","item","type","DocumentationItemType","i","pages","page","customBlocks","currentExporterCustomBlocks","customConfiguration","currentExporterConfigurationProperties","customBlockVariants","currentExporterBlockVariants","Supernova","SDKDataBridge_1","SDKDataCore_1","SDKConfiguration_1","SDKDesignSystem_1","SDKDesignSystemVersion_1","SDKWorkspace_1","SDKExporter_1","apiKey","url","requestHook","useResolutionCache","apiUrl","Configuration","apiUrlForDefaultEnvironment","apiVersion","apiVersionForDefaultEnvironment","rebuildBridge","workspaces","user","workspaceEndpoint","memberships","membership","workspace","Workspace","userEndpoint","workspaceData","designSystems","ds","designSystemId","versionEndpoint","versionData","v","versionId","exporters","exporterEndpoint","exporterData","Exporter","setResolutionCacheEnabled","isEnabled","cache","DataBridge","accessToken","target","bridge","DataCore","handle","profile","static","__importDefault","mod","__esModule","axios_1","conf","authToken","endpoint","dsGenericRequestURL","getDataForAuthenticatedEndpoint","getDSMDataFromEndpoint","designSystemVersionId","dsDataRequestURL","buildRequestConfig","method","data","config","timeout","headers","skipAuth","hookResult","skipDefaultAuth","requestURL","default","request","catch","error","response","fromAxiosResponseError","fromAxiosRequestError","message","postDSMDataToEndpoint","put","postDataForAuthenticatedEndpoint","dsWorkspaceRequestURL","wsId","dsId","dsVersionId","dsMetadataRequestURL","dsVersionRequestURL","async_mutex_1","SDKAsset_1","SDKRenderedAsset_1","SDKDesignComponent_1","SDKExporterCustomBlock_1","SDKAssetGroupResolver_1","SDKDesignComponentGroupResolver_1","SDKDocumentationItemResolver_1","SDKTokenGroupResolver_1","SDKTokenResolver_1","SDKDocumentation_1","SDKComponentResolver_1","SDKWorkspaceNPMRegistry_1","tokenMutex","Mutex","tokenGroupMutex","themesMutex","componentMutex","designComponentAssetMutex","designComponentAssetGroupMutex","documentationItemMutex","configurationMutex","exporterCustomBlocksMutex","tokensSynced","tokenGroupsSynced","themesSynced","componentsSynced","documentationItemsSynced","documentationItems","exporterCustomBlocksSynced","exporterCustomBlocks","designComponentAssetSynced","designComponentAssetGroupsSynced","documentationSynced","currentWorkspaceHandle","currentDeployedDocumentationUrl","_b","_c","_d","remoteJob","jobs","undefined","release","acquire","updateThemesData","updateTokenData","updateTokenGroupData","updateDesignComponentAndAssetData","updateDesignComponentAndAssetGroupData","configuration","prefix","suffix","persistentIds","renderedItemsMap","renderedItem","assetId","from","entries","assetsMap","asset","resultingAssets","names","originalName","toLowerCase","renderedGroup","assetIds","lowercasedName","renderedAsset","RenderedAsset","updateComponentData","blocks","updateDocumentationItemData","updateDocumentationData","updateExporterCustomBlocksData","exporterId","exporter","getExporter","propertyValues","getExporterConfigurationPropertyUserValues","property","contributes","key","updateValue","blockVariants","getDocumentation","remoteDocumentation","getNPMRegistry","npmRegistrySettings","WorkspaceNPMRegistry","getExporterCustomBlocks","rawBlocks","getExporterCustomBlockData","resolveExporterCustomBlockData","b","ExporterCustomBlock","getExporterConfigurationPropertiesUserValuesData","rawExporter","getExporterData","resolveExporterData","getTokens","getTokenGroups","rawData","getRawTokenData","rawProperties","getRawElementPropertyData","rawValues","getRawElementPropertyValuesData","resolveTokenData","properties","values","TokenResolver","getRawTokenGroupData","resolveTokenGroupData","resolver","TokenGroupResolver","resolveGroupData","getThemes","baseTokens","baseTokenGroups","getRawThemeData","resolveThemeData","resolvedThemes","themeModel","getComponents","rawComponents","getRawComponentData","resolveComponentData","designSystemComponents","definitions","ComponentResolver","getDesignComponentsAndAssets","getRawDesignComponentAndAssetData","resolveDesignComponentAndAssetData","designComponent","DesignComponent","assetNames","exportProperties","isAsset","Asset","getDesignComponentAndAssetGroups","getRawDesignComponentAndAssetGroupData","resolveDesignComponentGroupData","resolveAssetGroupData","DesignComponentGroupResolver","AssetGroupResolver","getDocumentationItems","getRawDocumentationItemData","workspaceHandle","deployedVersionUrl","resolveDocumentationItemData","pageDetails","groupDetails","detailResult","docsUrl","DocumentationItemResolver","resolveItemData","payload","bulkDelete","versionedId","SupernovaErrorType","super","status","label","responseError","code","requestError","computeError","processingError","SDKAssetGroup_1","hashedGroups","resolvedGroups","allowedAssetIds","rawGroup","AssetGroup","filteredAssetIds","referencedGroup","childrenIds","childGroup","addChild","recomputePaths","recomputeParents","reorderGroupsByRoots","recomputePathsFromRoot","path","shift","root","segments","extendedPath","concat","subgroups","sortedGroups","roots","traverseSortGroup","output","sort","g1","g2","indexOf","subgroup","recomputeParentsFromRoot","parent","setParent","SDKComponent_1","SDKElementProperty_1","SDKElementPropertyValue_1","resolvedProperties","p","ElementProperty","targetElementType","ElementPropertyTargetElementType","component","resolvedValues","ElementPropertyValue","Component","SDKDesignComponentGroup_1","DesignComponentGroup","filteredDesignComponentIds","componentIds","SDKDocumentationGroup_1","SDKDocumentationPage_1","hashedItems","resolvedItems","rootGroupModel","DocumentationGroup","resolveItemsForGroup","DocumentationPage","deployed","deployedUrl","editor","editorUrl","relative","pageUrl","internalOverridePaths","firstPageFromTop","childId","childModel","pageId","pageModel","resolveBlockChains","resolveBlockGroup","blockType","previousBlock","block","endsTypeChain","beginsTypeChain","children","slugify","object","pageSlug","userSlug","slug","subpaths","title","pop","join","documentationRoot","child","possiblePage","str","replace","l","RegExp","charAt","SDKTokenGroup_1","TokenGroup","filteredTokenIds","SDKTokenType_1","SDKThemeUtilities_1","SDKTokenTheme_1","SDKBlurToken_1","SDKBorderToken_1","SDKColorToken_1","SDKFontToken_1","SDKGenericToken_1","SDKGradientToken_1","SDKMeasureToken_1","SDKRadiusToken_1","SDKShadowToken_1","SDKTextToken_1","SDKTypographyToken_1","hashedTokens","hashedOverrides","hashedReconstructedOverrides","resolvedOverrides","rawToken","aliasTo","tokenTypeIsPure","constructValueToken","constructReferencedToken","tokenGroup","possibleToken","fixMultilayerShadowTokens","TokenType","shadow","fixMultilayerGradientTokens","gradient","fixMultilayerBlurTokens","blur","color","font","measure","text","generic","themeId","overrideData","tokenPersistentId","origin","replica","makeThemedValuelessTokenReplica","constructColorValue","constructFontValue","constructMeasureValue","constructTextLikeTokenValue","constructReferencedThemedToken","constructThemedValueToken","TokenTheme","ThemeUtilities","replicateTokenAsThemePrefabWithoutValue","shadowLayers","findAssociatedTokens","gradientLayers","blurLayers","tokenId","actualOriginTokenId","matchingTokens","sortedTokens","matchingToken","isVirtual","split","referencedToken","referenceId","constructResolvedToken","constructResolvedThemedToken","baseToken","ref","ColorToken","assign","border","BorderToken","FontToken","GradientToken","MeasureToken","radius","RadiusToken","ShadowToken","TextToken","typography","TypographyToken","BlurToken","GenericToken","constructColorToken","constructBorderToken","constructFontToken","constructGradientToken","constructMeasureToken","constructRadiusToken","constructShadowToken","constructTextToken","constructTypographyToken","constructBlurToken","constructGenericToken","constructBlurTokenValue","constructBorderTokenValue","constructGradientTokenValue","constructRadiusTokenValue","constructShadowTokenValue","constructTypographyTokenValue","rawValue","hex","substr","r","parseInt","slice","unit","family","subfamily","to","aspectRatio","stops","constructGradientStops","stop","position","resolveReferencedColorTokenValue","resolveReferencedMeasureTokenValue","topLeft","topRight","bottomLeft","bottomRight","x","y","spread","opacity","width","resolveReferencedFontTokenValue","fontSize","textDecoration","textCase","letterSpacing","lineHeight","paragraphIndent","paragraphSpacing","resolved","DocumentationPageBlockTokenList","DocumentationPageBlockTokenGroup","DocumentationPageBlockToken","DocumentationPageBlockText","DocumentationPageBlockShortcuts","DocumentationPageBlockShortcutType","DocumentationPageBlockShortcut","DocumentationPageBlockRenderCode","DocumentationPageBlockQuote","DocumentationPageOrderedList","DocumentationPageBlockImage","DocumentationPageBlockHeading","DocumentationPageBlockFrames","DocumentationPageBlockFrame","DocumentationPageBlockEmbedYoutube","DocumentationPageBlockEmbedStorybook","DocumentationPageBlockEmbedLink","DocumentationPageBlockEmbedGeneric","DocumentationPageBlockEmbedFigma","DocumentationPageBlockDivider","DocumentationPageBlockCustom","DocumentationPageBlockCode","DocumentationPageBlockCallout","DocumentationPageBlockAssets","DocumentationPageBlockAsset","ElementPropertyOption","ElementPropertyType","ElementPropertyLinkElementType","ExporterConfigurationPropertyType","ExporterConfigurationPropertyInputType","ExporterConfigurationProperty","ExporterCustomBlockVariant","ExporterCustomBlockPropertyInputType","ExporterCustomBlockPropertyType","ExporterCustomBlockProperty","ExporterCustomBlockMode","TokenOrigin","Size","DesignComponentOrigin","Unit","TextDecoration","TextCase","ShadowType","RichTextSpanAttributeType","GradientType","FrameLayout","FrameAlignment","DocumentationPageBlockThemeType","DocumentationPageBlockType","DocumentationHeadingType","DocumentationGroupBehavior","DocumentationCalloutType","BorderPosition","BlurType","AssetScaleType","AssetScale","AssetFormat","Alignment","RichTextSpanAttribute","RichTextSpan","DocumentationRichText","DocumentationPageBlock","DocumentationItem","DocumentationItemConfiguration","DocumentationItemHeader","DocumentationPageBlockTableColumn","DocumentationPageBlockTableRow","DocumentationPageBlockTableCell","DocumentationPageBlockTable","DocumentationPageBlockTabItem","DocumentationPageBlockTab","DocumentationPageBlockColumnItem","DocumentationPageBlockColumn","DocumentationPageUnorderedList","TokenTransform","MarkdownTransformType","MarkdownTransform","DocSearchResultDataType","DocSearch","SupernovaToolsDesignTokensPlugin","JSONBuilderNamingOption","TokenJSONBuilder","TokenThemeOverride","Token","SDKSupernova_1","enumerable","SDKExporterCustomBlockProperty_1","SDKExporterCustomBlockVariant_1","SDKExporterConfigurationProperty_1","SDKElementPropertyOption_1","SDKDocumentationPageBlockAsset_1","SDKDocumentationPageBlockAssets_1","SDKDocumentationPageBlockCallout_1","SDKDocumentationPageBlockCode_1","SDKDocumentationPageBlockCustom_1","SDKDocumentationPageBlockDivider_1","SDKDocumentationPageBlockEmbedFigma_1","SDKDocumentationPageBlockEmbedGeneric_1","SDKDocumentationPageBlockEmbedLink_1","SDKDocumentationPageBlockEmbedStorybook_1","SDKDocumentationPageBlockEmbedYoutube_1","SDKDocumentationPageBlockFrame_1","SDKDocumentationPageBlockFrames_1","SDKDocumentationPageBlockHeading_1","SDKDocumentationPageBlockImage_1","SDKDocumentationPageBlockOrderedList_1","SDKDocumentationPageBlockQuote_1","SDKDocumentationPageBlockRenderCode_1","SDKDocumentationPageBlockShortcut_1","SDKDocumentationPageBlockShortcuts_1","SDKDocumentationPageBlockText_1","SDKDocumentationPageBlockToken_1","SDKDocumentationPageBlockTokenGroup_1","SDKDocumentationPageBlockTokenList_1","SDKDocumentationPageBlockUnorderedList_1","SDKDocumentationPageBlockColumn_1","SDKDocumentationPageBlockColumnItem_1","SDKDocumentationPageBlockTab_1","SDKDocumentationPageBlockTabItem_1","SDKDocumentationPageBlockTable_1","SDKDocumentationPageBlockTableCell_1","SDKDocumentationPageBlockTableRow_1","SDKDocumentationPageBlockTableColumn_1","SDKDocumentationItemHeader_1","SDKDocumentationItemConfiguration_1","SDKDocumentationItem_1","SDKDocumentationPageBlock_1","SDKDocumentationRichText_1","SDKDocumentationRichTextSpan_1","SDKDocumentationRichTextSpanAttribute_1","SDKAlignment_1","SDKAssetFormat_1","SDKAssetScale_1","SDKAssetScaleType_1","SDKBlurType_1","SDKBorderPosition_1","SDKDocumentationCalloutType_1","SDKDocumentationGroupBehavior_1","SDKDocumentationHeadingType_1","SDKDocumentationPageBlockType_1","SDKDocumentationPageBlockThemeType_1","SDKFrameAlignment_1","SDKFrameLayout_1","SDKGradientType_1","SDKRichTextSpanAttributeType_1","SDKShadowType_1","SDKTextCase_1","SDKTextDecoration_1","SDKUnit_1","SDKDesignComponentOrigin_1","SDKSize_1","SDKTokenOrigin_1","SDKToken_1","SDKTokenThemeOverride_1","SDKToolsJSONBuilder_1","SDKToolsDesignTokensPlugin_1","SDKToolsDocSearch_1","SDKToolsMarkdownTransform_1","SDKToolsTokenTransform_1","__createBinding","create","o","m","k","k2","__exportStar","prototype","hasOwnProperty","call","duplicates","thumbnailUrl","previouslyDuplicatedNames","componentId","createdAt","Date","updatedAt","sourceUrl","targetElementId","definitionId","codeName","originComponent","tabbedNavigation","tabbed","storybookError","storybookEmbedErrorMessage","packageJson","renderCodePackageJson","npmRegistry","groupBehavior","relativeFirstPageUrl","deployedFirstPageUrl","addChildren","relativeDocsPageUrl","deployedDocsPageUrl","SDKDocumentationBlockBuilder_1","DocumentationBlockBuilder","fromGenericModel","relativeUrl","editorPageUrl","deployedPageUrl","relativePageUrl","variantKey","blacklistedElementProperties","userMetadata","JSON","parse","spans","asPlainText","attributes","link","openInNewWindow","documentationItemId","blockBackgroundColor","componentAssetId","backgroundColor","_e","_f","figmaFrameProperties","alignment","center","layout","c4","componentAssets","f","calloutType","codeLanguage","caption","customBlockKey","customBlock","customBlockProperties","size","urlPreview","sourceFileId","sourceFrameId","sourceFileName","previewUrl","showTitles","frames","figmaFrames","headingType","assetUrl","abab_1","DocumentationPageBlockRenderCodeSandboxAlignment","DocumentationPageBlockRenderCodeEnvironmentType","showCode","renderCodeProperties","height","packageJSON","sandboxData","encodeSandboxData","sandboxType","react","localAlignment","start","definition","visual","forcedHeight","horizontalAlignment","verticalAlignment","backgroundHex","btoaUnicode","stringify","btoa","encodeURIComponent","match","p1","String","fromCharCode","atobUnicode","decodeURIComponent","atob","charCodeAt","toString","external","internal","shortcutTitleFromModel","shortcutDescriptionFromModel","shortcutPreviewUrlFromModel","documentationItemPreview","valid","internalId","externalUrl","trim","shortcuts","tableProperties","showBorders","showHeaderRow","showHeaderColumn","columns","columnId","designObjectId","groupId","showNestedGroups","designObjectIds","heading","unorderedList","orderedList","quote","callout","divider","image","tokenList","figmaEmbed","youtubeEmbed","storybookEmbed","genericEmbed","custom","renderCode","column","columnItem","tabs","tabItem","table","tableCell","tableRow","header","showSidebar","backgroundImageAssetUrl","backgroundImageAssetId","backgroundImageScaleType","foregroundColor","showBackgroundOverlay","showCoverText","minHeight","propertyType","linkElementType","options","_g","_h","_j","packageId","isPrivate","isDefaultDocumentationExporter","usesBrands","author","organization","homepage","readme","iconURL","tags","repositoryUrl","githubUrl","repositoryBranch","githubBranch","repositoryDirectory","githubDirectory","variants","variant","configurationProperties","category","iconUrl","mode","inputType","plain","isMultiline","blockKey","isDefault","setPath","sortOrder","setSortOrder","order","toMutatedObject","nodeId","remoteSource","sourceType","remoteDesignComponentUrl","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","cloud","autoImportMode","fileThumbnailUrl","lastUpdatesCheckedAt","lastImportedVersion","created_at","lastImportedAt","lastImportResult","tokensCreated","tokensUpdated","tokensDeleted","componentsCreated","componentsUpdated","componentsDeleted","componentAssetsCreated","componentAssetsUpdated","componentAssetsDeleted","isFailed","fileSize","lastImportFramesResult","assetsInFile","invalidReferencesCount","ownerId","ownerUserName","state","linkType","enabledScopes","limitToScopes","registryUrl","proxyUrl","__1","dsVersion","addOverride","addOverrides","toISOString","tokensToOverrides","toWriteOverrideObject","valueToWriteObject","alias","specificData","toBaseWriteObject","valueObject","uuid_1","parse_color_1","v4","customPropertyOverrides","tokenValue","colorValueFromDefinition","rgba","Math","max","min","round","referenceResolver","valueIsReference","reference","lookupReferencedToken","startsWith","measureValueFromDefinition","pixels","parseMeasure","endsWith","substring","percent","ems","points","parseFloat","valueNeedsComputing","radiusValueFromDefinition","corners","shadowValueFromDefinition","measureValueFromDefinitionOrReference","colorValueFromDefinitionOrReference","inner","drop","empty","originStyle","TokenComparator","isEqualBlurTokenValue","isEqualBorderTokenValue","isEqualColorTokenValue","isEqualFontTokenValue","isEqualGenericTokenValue","isEqualGradientTokenValue","isEqualMeasureTokenValue","isEqualRadiusTokenValue","isEqualShadowTokenValue","isEqualTextTokenValue","isEqualTypographyTokenValue","isUndefinedValue","referencesSameToken","isEqualGradientStops","as","bs","typographyValueFromDefinition","underline","strikethrough","original","camel","lower","upper","SDKDTJSONLoader_1","SDKDTJSONConverter_1","SDKDTJSONGroupBuilder_1","SDKDTTokenGroupTreeMerger_1","SDKDTTokenMerger_1","SDKDTMapResolver_1","SDKDTThemeMerger_1","SDKDTMapLoader_1","SDKDTJSONParser_1","sortMultiplier","synchronizeTokensFromDirectory","directoryPath","mappingPath","mapLoader","DTMapLoader","loadFromPath","jsonLoader","DTJSONLoader","loadDSObjectsFromTokenFileDirectory","synchronizeTokensFromData","mapping","synchronizeTokensFromFile","filePath","loadDSObjectsFromTokenFile","parser","DTJSONParser","parsedData","processPluginDataRepresentation","processTokenNodes","verbose","bindToTheme","bindToBrand","mergeWithRemoteSource","processedNodes","dryRun","preciseCopy","console","log","th","mergeThemeWithRemoteSource","parseResult","mapResolver","DTMapResolver","mappedNodePools","sets","nodes","count","converter","DTJSONConverter","groupBuilder","DTJSONGroupBuilder","convertNodesToTokens","processedGroups","constructAllDefinableGroupsTrees","write","upstreamTokenGroups","upstreamTokens","correctSortOrder","pack","treeMerger","DTTokenGroupTreeMerger","tokenMergeResult","DTTokenMerger","makeTokensDiff","makeGroupsDiff","toCreate","element","toUpdate","tokensToWrite","n","tokenGroupsToWrite","toCreateOrUpdate","toDelete","upstreamTheme","themeMergerResult","DTThemeMerger","makeTheme","tokenMap","groupMap","forEach","correctSortOrderFromTypeRoot","ids","flattenedIdsFromRoot","SDKDTTokenReferenceResolver_1","DTTokenReferenceResolver","convertNodesToTokensForSupportedNodeTypes","unmappedValues","remapRootNodeKeys","node","secondSegment","firstSegment","splice","originalType","buildKey","types","unprocessedTokens","convertAtomicNode","addAtomicToken","unprocessedDepthTokens","convertReferencedNode","computable","snType","convertDTTypeToSupernovaType","convertColorAtomicNode","convertMeasureAtomicNode","convertRadiusAtomicNode","convertShadowAtomicNode","convertTypographyAtomicNode","convertGenericAtomicNode","valueAsReference","resolvedToken","constructedToken","dtType","snRootName","dtRootName","constructGroupTree","createGroup","mappedGroups","constructGroupChain","parentPath","partialPath","segment","partialKey","__setModuleDefault","__importStar","DTParsedThemeSetPriority","fs","themeBuffer","pathToFile","existsSync","lstatSync","isFile","fromProcessingError","readFileSync","parseDefinition","pathToDirectory","fullStructuredObject","isDirectory","paths","readdirSync","withFileTypes","fullPath","themePath","metadataPath","metadata","processSets","parseNode","processThemes","setArray","contains","selectedTokenSets","priority","disabled","tokenSets","setOrder","themeDefinitions","themeObject","pairedSets","tokenSetName","unknownPriority","setName","pair","objects","entity","rootKey","DTPluginToSupernovaMapType","parsedDefinition","weakValidateMapping","processFileToMapping","mapPack","tokensTheme","supernovaBrand","supernovaTheme","pluginSets","pluginTheme","setMap","tokenSetToUse","pluginSet","enabled","uniqueNodes","computeUniqueNodesFromSets","SDKTokenCompator_1","existingOverrides","buildPath","newTokenSet","themeReplica","incomingThemeOverride","replaceIdAcrossAllPossibleReferences","isEqualTokenValue","currentThemeOverride","newId","allTokens","currentId","DTGroupMergeDiff","SDKDTGroupTree_1","SDKDTGroupTreeNode_1","tokensDiff","existingElements","exitingRoots","buildBrandedElementRoots","desiredStructures","nameParts","typeRoots","typeRoot","rootElem","GroupTree","getOrCreateGroup","GroupTreeNode","compareDesiredAndExisting","importNode","existingNode","isGroup","existingChild","exc","importChildrenIds","existingChildrenIds","keys","buildNodeMap","convertBaseTokensToProcessedNode","existing","extracted","existingAsProcessedNodes","existingMap","extractedMap","oldToken","has","mappedTokens","nodePath","tokenReferenceKey","addAtomicTokens","newPath","SDKDTParentChildMapping_1","backingElement","childType","tree","elements","parentChildrenMap","populate","childrenMap","buildParentChildrenMap","brandIds","Set","lodash_1","sortBy","applyDefaultSorting","addChildInternal","atIndex","createGroupChild","addChildGroup","groupElement","rest","callback","leafsFirst","forEachInternal","MAX_SORT_ORDER","LAST","sortOrderComparator","parentIdToChildren","parentId","arr","sortedChildrenMap","possibleGroup","SDKToolsJSONElementFigmaTokensTransformer_1","SDKToolsJSONElementStyleDictionaryTransformer_1","ConsumerMode","instance","styleDictionaryRepresentation","tokenTransformer","TokenJSONElementStyleDictionaryTransformer","buildTokenStructure","consumerMode","figmaTokens","figmaTokensRepresentation","isSingleFile","TokenJSONElementFigmaTokensTransformer","naming","includeComments","includeBrandId","includeType","includeRootTypeNodes","multifile","sdTree","generateStyleDictionaryTree","merge","allGroups","representTree","tokensOfGroup","safeTokenName","representToken","typeLabel","writeObject","newObject","writeSubObject","groupIsAbstract","safeGroupName","containingGroup","iteratedGroup","chain","SDKToolsJSONElementTransformer_1","TokenJSONElementTransformer","representColorTokenValue","referenceWrapper","referenceName","representRadiusTokenValue","representMeasureTokenValue","representFontTokenValue","representTextTokenValue","representTypographyTokenValue","representBorderTokenValue","representShadowTokenValue","representGradientTokenValue","stopObject","tokenWrapper","typeLabelConsideringAbstractGroups","groupChain","referenceGroupChain","occurances","tokenPart","groupParts","dropFirstSegment","representColorToken","representBorderToken","representFontToken","representGradientToken","representMeasureToken","representRadiusToken","representShadowToken","representTextToken","representTypographyToken","processedName","camelcase","word","toUpperCase","kebabcase","snakecase","exports_1","SDKToolsMarkdownTransformBlock_1","flattenedBlocksOfPage","flattenedBlocksOfBlock","isContainer","subblocks","subblock","conversionType","github","blockTransformer","MarkdownTransformBlock","convertPageToMarkdown","pageContent","blockContent","convertBlockToMarkdown","SDKToolsMarkdownTransformUtil_1","newlineSeparator","transformType","utilTransformer","MarkdownTransformUtil","pageContext","convertCalloutBlock","convertCodeBlock","convertComponentAssetBlock","convertCustomBlock","convertDividerBlock","convertFigmaEmbedBlock","convertFigmaFramesBlock","convertGenericEmbedBlock","convertHeadingBlock","convertImageBlock","convertLinkBlock","convertOrderedListBlock","convertQuoteBlock","convertLiveCodeBlock","convertShortcutsBlock","convertStorybookEmbedBlock","convertTextBlock","convertTokenBlock","convertTokenGroupBlock","convertTokenListBlock","convertUnorderedListBlock","convertYoutubeEmbedBlock","convertColumnBlock","convertTableBlock","convertTabsBlock","convertTabItemBlock","convertColumnItemBlock","convertTableCellBlock","convertTableRowBlock","convertTextBlockToMarkdown","h1","h2","h3","info","warning","success","convertURLBlock","convertTokenToMarkdown","groupsToShow","flattenedGroupsFromRoot","tokensToShow","convertedAssets","assetObject","convertedFrames","frame","convertedShortcut","shortcut","destinationPage","relativePathToPage","currentPage","depth","repeat","firstRow","rowContent","separatorContent","tableRows","rowDefinition","all","tabContent","childContent","columnContent","userAction","showLink","convertRichTextToMarkdown","richText","outputString","outputPartial","attribute","bold","italic","tokenToCSS","fuse_js_1","updateSearchIndex","pageName","allBlocks","sectionHeader","contentBlock","blockId","pageTitle","searchEngine","reconstructSearchIndex","searchConfiguration","search","input","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","ignoreLocation","tinycolor","colorTokenToCSS","borderTokenToCSS","fontTokenToCSS","gradientTokenToCSS","measureTokenToCSS","radiusTokenToCSS","shadowTokenToCSS","textTokenToCSS","blurTokenToCSS","typographyTokenToCSS","genericTokenToCSS","tokenToCSSVariableDeclaration","variableName","toRgbString","fontName","fontValue","unitToCSS","gradientType","colorTokenToHEXorHEXA","colorToken","toHexString","toHex8String","colorTokenToRGBA","colorTokenToPercenageRGBA","toPercentageRgbString","colorTokenToHSLA","toHslString","colorTokenToHSVA","toHsvString","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}