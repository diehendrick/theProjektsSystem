import { DesignSystemVersion, Token } from '../../..';
import { TokenTheme } from '../../../model/themes/SDKTokenTheme';
import { DTProcessedTokenNode } from './SDKDTJSONConverter';
export declare type DTThemeMergeDiff = {
    toUpdate: Array<DTProcessedTokenNode>;
    toCreate: Array<DTProcessedTokenNode>;
};
/** Utility allowing merging of two pools of tokens */
export declare class DTThemeMerger {
    private version;
    constructor(version: DesignSystemVersion);
    makeTheme(upstreamTokens: Array<Token>, upstreamTheme: TokenTheme, processedNodes: Array<DTProcessedTokenNode>): TokenTheme;
    replaceIdAcrossAllPossibleReferences(override: DTProcessedTokenNode, newId: string, allTokens: Array<DTProcessedTokenNode>): void;
    buildKey(path: Array<string>, name: string): string;
    buildPath(token: Token): Array<string>;
}
