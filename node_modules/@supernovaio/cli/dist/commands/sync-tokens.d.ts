import { Command } from "@oclif/core";
import { DesignSystem, DesignSystemVersion, Supernova } from "@supernovaio/supernova-sdk";
interface SyncDesignTokensFlags {
    apiKey: string;
    designSystemId: string;
    tokenFilePath?: string;
    tokenDirPath?: string;
    configFilePath: string;
    dev: boolean;
}
/** Command that handles synchronization with design tokens plugin */
export declare class SyncDesignTokens extends Command {
    static description: string;
    static examples: string[];
    static aliases: ["sync-tokens"];
    static flags: {
        apiKey: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        designSystemId: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        tokenFilePath: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        tokenDirPath: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        configFilePath: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        dev: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    static args: never[];
    run(): Promise<void>;
    getWritableVersion(flags: SyncDesignTokensFlags): Promise<{
        instance: Supernova;
        designSystem: DesignSystem;
        version: DesignSystemVersion;
    }>;
}
export {};
